{"version":3,"sources":["lib/Defs.tsx","components/CubeSim.tsx","lib/Math.tsx","lib/CubeLib.tsx","lib/Selector.tsx","components/Select.tsx","components/CmllTrainerView.tsx","components/BlockTrainerView.tsx","components/PanoramaView.tsx","components/FavListView.tsx","settings.js","components/AppView.tsx","Config.tsx","lib/Local.tsx","Version.tsx","reducers/AbstractStateM.tsx","lib/Algs.tsx","lib/Pruner.tsx","lib/min2phase/min2phase-wrapper.ts","lib/Solver.tsx","lib/CachedSolver.tsx","reducers/BlockTrainerStateM.tsx","reducers/CmllStateM.tsx","reducers/StateFactory.tsx","reducers/Reducer.tsx","theme.js","app/App.tsx","serviceWorker.js","index.js","lib/min2phase/min2phase.js"],"names":["Face","Typ","U","D","F","B","L","R","C","E","T","corners_coord","edges_coord","cstimer_corners_coord","cstimer_edges_coord","u","cpc","coc","epc","eoc","tpc","name","f","r","l","d","b","m","e","s","u_face","f_face","FBpairPos","color_map","defaultKeyMapping","TAU","Math","PI","axesInfo","THREE","cubeSim","width","height","colorScheme","mode","faces","stickers_tmpl","stickerwrap_tmpl","facesToReveal","scene","camera","renderer","antialias","alpha","enableBorder","geo","geo_border","setPixelRatio","window","devicePixelRatio","position","copy","lookAt","cubeG","add","updateWidthHeight","clearColor","canvas","domElement","setSize","setClearColor","aspect","updateProjectionMatrix","updateCube","cube","remove","i","cubie","rot","makeRotationFromEuler","rot1","setRotationFromMatrix","multiply","z","x","idx","curr_tmpl","sticker","clone","stickerwrap","indexOf","stickerhint","scale","set","drawCube","renderScene","render","cleanup","dispose","updateColorScheme","colorScheme_","materials","Array","fill","map","_","mat","color","side","alphaTest","mesh","setRotationFromEuler","materials_border","updateFacesToReveal","setup","CubeSim","props","mount","React","useRef","useEffect","dom","current","appendChild","bgColor","removeChild","ref","style","rand_int","floor","random","rand_incl","rand_choice","arr","length","getParity","perm","visited","follow","cnt","res","arrayEqual","arr1","arr2","CubieCube","id","cp","co","ep","eo","tp","apply_partial","o","p","oc","pc","mod","o_new","p_new","console","assert","src","dst","apply_one","move","toc","apply","isArray","from_move","_rotate_coord","fs","last_face","_backward_rotate_coord","first_face","apply_str","str","Move","parse","from_string","to_cstimer_cube","fm","custom_corners_coord","custom_edges_coord","idxOf","a_","target","a","getOriPerm","ori","coord_pair","pos","piece","newpos","newOri","newPerm","from_facelet_mapping","facelet_mapping","j","push","to_facelet_mapping","is_solveable","perm_correct","ori_correct","reduce","y","from_cube","get_change","acc_p","acc_o","from_moves","moves","make_rot_set","moveCost","Map","all_moves","us","rs","ls","ds","bs","ms","es","ss","rw","rws","lw","lws","uw","uws","xs","ys","flat","moves_dict","Object","create","forEach","generate_base_moves","combine","move1","move2","getCnt","getStr","all","tokens","token","ch","ord","charCodeAt","inv","undefined","slice","reverse","add_auf","auf_moves","auf_move","concat","to_string","join","evaluate","sum","get","collapse","newMoves","nextMove","shift","pop","combined","FaceletCube","mult_move","face","face_new","work","typ","mod_for_typ","p1","p2","p_curr","o_curr","color_of_c","o1","o2","color_of_e","color_of_t","color_of_sticker","Error","d_face","l_face","r_face","b_face","from_cubie","mask","facelet","X","from_cubie_partial_masked","from_cubie_partial","to_unfolded_cube_str","faceletCube","face_count","str_face_map","color_cube","face_char","hasOwnProperty","count","to_cubejs_str","lse_mask","CubeUtil","ext","stickers","find_pairs","edge_stickers","filter","corner_stickers","ep_stickers","cp_stickers","epcp_pairs","c","efs","cfs","match","get_color","connected_pairs","u_premove","m2_premove","get_random_with_mask","cp_rand","ep_rand","par","random_ori","ori_mask","random_perm","perm_mask","undecided","tmp","rand_shuffle","ori_to_color_scheme","colorMap","valid_scheme_mapper","split","sel","is_cmll_solved","premove","cube1","solved","is_mask_solved","get_random_lse","is_cube_solved","Mask","fs_back_mask","fs_front_mask","fbdr_mask","fb_mask","sb_mask","cmll_mask","ss_front_mask","ss_back_mask","empty_mask","dl_solved_mask","db_solved_mask","solved_mask","zhouheng_mask","getActiveNames","ans","flags","names","getActiveName","useStyles","makeStyles","theme","container","paddingTop","spacing","paddingBottom","backgroundColor","palette","background","default","button","paper","padding","display","overflow","flexDirection","canvasPaper","infoColumn","scrambleColumn","paddingLeft","textColumn","breakpoints","up","minHeight","fixedHeight","title","flexGrow","select","text","primary","selectLabel","secondary","SingleSelect","state","dispatch","config","classes","radioValue","label","FormControl","component","className","FormLabel","RadioGroup","aria-label","value","onChange","evt","n","new_flags","new_config","JSON","stringify","fbPairSolvedSelector","fbdrSelector","type","content","row","FormControlLabel","key","control","Radio","labelPlacement","MultiSelect","handleChange","checked","useState","open","setOpen","handleClose","FormGroup","Checkbox","makeBox","noDialog","Box","Button","variant","borderWidth","onClick","fontSize","marginLeft","marginRight","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","DialogActions","hint","fontWeight","borderBottom","prompt","CmllTrainerView","clsx","useTheme","simBackground","panel","cmllSelector","cmllAufSelector","triggerSelector","orientationSelector","setReveal","reveal","alg","case","desc","moves_c","Grid","item","Paper","margin","elevation","lineHeight","Typography","whiteSpace","onFocus","blur","size","sm","md","Divider","sourceIcon","sourceIconWrap","fab","top","left","ConfigPanelGroup","ssSelector","ssPairOnlySelector","solutionNumSelector","fbOnlySelector","fbPieceSolvedSelector","BlockTrainerView","kind","getMask","alt_algs","spaceButtonText","algs","minMove","min","algText","scrSource","favSelected","setFav","justify","alignItems","icon","case_","solver","action","checkedIcon","root","flexWrap","justifyContent","textAlign","gridList","VisualCube","stage","sch","template","alt","PanoramaTable","GridList","cellHeight","cols","GridListTile","PanoramaView","table","minWidth","FavListView","play","favList","dialogID","setDialogID","dialogDelete","autoFocus","addDialogOpen","setAddDialogOpen","addString","setAddString","handleAddClose","dialogAdd","aria-labelledby","DialogContentText","TextField","multiline","fullWidth","event","onKeyDown","stopPropagation","trim","includes","parseAddString","Table","TableHead","TableRow","TableCell","align","rowSpan","IconButton","edge","TableBody","ENABLE_DEV","TabPanel","children","index","other","role","hidden","page","modes","_getInitialHashLocation","location","hash","AppView","useCallback","newValue","setValue","handleInfoClose","showFav","dividers","gutterBottom","AppBar","Tabs","scrollButtons","indicatorColor","Tab","theme_flag","paddingY","Container","maxWidth","initialFavList","initialConfig","arr_ori_flag","favListManager","cache","getFavList","localStorage","getItem","setFavList","setItem","configManager","getConfig","vers","item1","keys","item2","setConfig","partial","newConfig","assign","AbstractStateM","this","StateFactory","empty_alg","cmll_algs","trigger_algs","u_auf_algs","ori_algs","alg_generator","selector","algSet","lookup_algset","lookup","Set","get_active_names","prefix","has","Pruner","dist","encode","solved_states","max_depth","moveset","initialized","init","Uint8Array","frontier","total_expanded","log","new_frontier","newState","query","equal","cube2","fbdrPrunerConfig","pow","c1","c2","enc_c","e1","e2","e3","e4","fbPrunerConfig","enc_ce","t1","solve","min2phaseSolve","toMin2Phase","Solver","accum","min_depth","SState","MAX_STATE_COUNT","is_solved","pruners","state_count","prune_count","solve_depth","min_depth_","max_depth_","accum_","search","moveTable","depth","solution","STOP","CONTINUE","solutions","capacity","flag","sol","try_push","availableMoves","seen_encodings","new_cube","enc","st","expand","getAvailableMove","k","base","prepareNextMoveTable","depth_l","depth_r","getPruner","FbdrSolver","prunerConfig","pruner","FbSolver","SsSolver","is_front","v","ssPrunerConfig","Min2PhaseSolver","min2phase_init","transformed_cube","min2phase_solve","CachedSolver","BlockTrainerStateM","solverL","solverR","algdesc","solverName","updateSolutionOnly","_solve_min2phase","scramble","solutionCap","sort","getRandom","_solve","_updateCase","movestr","conf","_updateCap","m_premove","FbdrStateM","fbOnly","pairSolved","active","_get_pair_solved_front","_get_random_fs_back","_get_random_fs_front","SsStateM","_get_random_fb","FbStateM","is_l_only","centers","g_hard","pairs","cc_edges","_find_center_connected_edges","_get_random","CmllStateM","m2_away","algDesc","lse_cube","generator","trig_generator","u_auf_generator","ori_generator","trigger_alg","cmll_alg","u_auf_alg","alg_str","_get2PhaseSolution","history","_generateCase","SolvingStateM","SolvedStateM","getInitialState","initialStateName","cubejs","reducer","code","stateM","reduceByKey","reactToConfig","reduceByConfig","rem","replay","reduceByFavlist","createMuiTheme","main","error","red","A400","themeDark","addEventListener","keyCode","document","body","preventDefault","App","useReducer","downHandler","toUpperCase","removeEventListener","appTheme","ThemeProvider","CssBaseline","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","createArray","bitCount","get8Parity","get12Parity","binarySearch","mid","val","fact","perm3","ud2std","std2ud","Cnk","length1","length2","createArrays","move2str","urfMove","ckmv","ckmv2","getFlip","getFlipSym","FlipR2S","EdgeConjugate","SymInv","temps","FlipS2R","setFlip","bitOdd","getTwist","getTwistSym","TwistR2S","CornConjugate","TwistS2R","setTwist","twst","getUDSlice","setUDSlice","getMPerm","t","setMPerm","getMid3","idxA","idxB","setMid3","getURtoUL","getDRtoDL","setEdgePerm","getEdgePerm","getCPermSym","EPermR2S","get8Perm","e2c","CPermS2R","getEPermSym","EPermS2R","URFConjugate","CornMult","urf2","urf1","EdgeMult","invCubieCube","corn","cperm","twist","eperm","flip","set8Perm","cctemp","prod","oriA","oriB","ed","CubeSym","moveCube","SymMult","SymMove","Sym8Mult","Sym8Move","Sym8MultInv","SymMoveUD","MtoEPerm","merge","UDSliceMove","TwistMove","FlipMove","UDSliceConj","UDSliceTwistPrun","UDSliceFlipPrun","TwistFlipPrun","Mid3Move","Mid32MPerm","CParity","CPermMove","EPermMove","MPermMove","MPermConj","MCPermPrun","MEPermPrun","urfidx","csym","mid3","tsym","fsym","corn0","csym0","mid30","e10","e20","prun","maxlength2","valid1","valid2","phase1","maxl","lm","cornx","ex","get4Parity","esym","max","phase2","sb","urf","init2","slicex","twistx","tsymx","flipx","fsymx","midx","edgex","esymx","csymx","initialize","mc","temp","f2","u4","lr2","found","occ","CubieInit","SymState","SymStateF","check","done","sym","symF","fsymxx","idxx","symx","CoordInit","module","exports","cc","Solve","randomCube"],"mappings":"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","file":"static/js/main.89ebb661.chunk.js","sourcesContent":["export enum Face {\n    U = 0, D, F, B, L, R, X\n}\nconst U = Face.U;\nconst D = Face.D;\nconst F = Face.F;\nconst B = Face.B;\nconst L = Face.L;\nconst R = Face.R;\nexport {U, D, F, B, L, R};\n\nexport enum Typ {\n    C = 0, E, T\n}\nconst C = Typ.C;\nconst E = Typ.E;\nconst T = Typ.T;\nexport {C, E, T}\n\nexport type CubieT = {\n    co: Array<number>,\n    cp: Array<number>,\n    eo: Array<number>,\n    ep: Array<number>,\n    tp: Array<number>\n}\n\nexport type FaceletCube = Array<string>\n\nexport type CornerCoord = [Face, Face, Face]\nlet corners_coord : Array<CornerCoord> = [\n    [U,F,L], [U,L,B], [U,B,R], [U,R,F],\n    [D,L,F], [D,B,L], [D,R,B], [D,F,R]\n]\n\nexport type EdgeCoord = [Face, Face]\nlet edges_coord : Array<EdgeCoord> = [\n    [U,F], [U,L], [U,B], [U,R],\n    [D,F], [D,L], [D,B], [D,R],\n    [F,L], [B,L], [B,R], [F,R],\n]\n\nlet cstimer_corners_coord : Array<CornerCoord> = [\n    [U,R,F],[U,F,L], [U,L,B], [U,B,R],\n    [D,F,R],[D,L,F], [D,B,L], [D,R,B]\n]\n\nlet cstimer_edges_coord : Array<EdgeCoord> = [\n    [U, R], [U,F], [U,L], [U,B],\n    [D, R], [D,F], [D,L], [D,B],\n    [F, R], [F,L], [B,L], [B,R]\n]\n\nexport {corners_coord, edges_coord, cstimer_corners_coord, cstimer_edges_coord }\n\nexport type FaceletMapping = [Face[], Face[]][]\n\nexport type PermChg = [number, number]\nexport type OriChg = number\n\nexport type MoveT = {\n    cpc: Array<PermChg>,\n    coc: Array<OriChg>,\n    epc: Array<PermChg>,\n    eoc: Array<OriChg>,\n    tpc: Array<PermChg>,\n    name: string\n}\n\nlet u : MoveT = {\n    cpc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    coc: [0, 0, 0, 0],\n    epc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"U\"\n}\n\nlet f : MoveT = {\n    cpc: [[0, 3], [3, 7], [7, 4], [4, 0]],\n    coc: [1, 2, 1, 2],\n    epc: [[0, 11], [11, 4], [4, 8], [8, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"F\",\n}\n\nlet r : MoveT = {\n    cpc: [[3, 2], [2, 6], [6, 7], [7, 3]],\n    coc: [1, 2, 1, 2],\n    epc: [[3, 10], [10, 7], [7, 11], [11, 3]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"R\",\n}\n\nlet l : MoveT = {\n    cpc: [[0, 4], [4, 5], [5, 1], [1, 0]],\n    coc: [2, 1, 2, 1],\n    epc: [[1, 8], [8, 5], [5, 9], [9, 1]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"L\",\n}\n\nlet d : MoveT = {\n    cpc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    coc: [0, 0, 0, 0],\n    epc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"D\",\n}\n\nlet b : MoveT = {\n    cpc: [[1, 5], [5, 6], [6, 2], [2, 1]],\n    coc: [2, 1, 2, 1],\n    epc: [[2, 9], [9, 6], [6, 10], [10, 2]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"B\",\n}\n\nlet m : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[0, 4], [4, 6], [6, 2], [2, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 2], [2, 1], [1, 3], [3, 0]],\n    name: \"M\",\n}\n\nlet e : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[8, 9], [9, 10], [10, 11], [11, 8]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[2, 4], [4, 3], [3, 5], [5, 2]],\n    name: \"E\",\n}\n\nlet s : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[1, 3], [3, 7], [7, 5], [5, 1]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 5], [5, 1], [1, 4], [4, 0] ],\n    name: \"S\",\n}\n\nexport {u, d, f, b, l, r, m, e, s}\n\nexport type StickerT = [number, number, Typ]\nexport type StickerExtT = [number, number, Typ, Face]\nexport type FaceletT = Array<StickerT>\n\nlet u_face : FaceletT = [\n    [1, 0, C], [2, 0, E], [2, 0, C],\n    [1, 0, E], [0, 0, T], [3, 0, E],\n    [0, 0, C], [0, 0, E], [3, 0, C]\n  ]\n\nlet f_face : FaceletT = [\n    [0, 1, C], [0, 1, E], [3, 2, C],\n    [8, 0, E], [2, 0, T], [11,0, E],\n    [4, 2, C], [4, 1, E], [7, 1, C]\n]\n\nexport {u_face, f_face}\n\nconst FBpairPos : [number, number, number, number][] = [\n    [0, 0, 8, 1], [0, 1, 1, 0], [ 0, 2 , 0, 1],\n    [1, 1, 2, 0], [1, 2, 1, 1],\n    [2, 0, 10, 1], [2, 1, 3, 0], [2, 2, 2, 1],\n    [3, 0, 11, 0], [3, 1, 0, 0], [3, 2, 3, 1],\n    [4, 0, 8, 0], [4, 1, 4, 0],\n    [6, 0, 10, 0], [6, 1, 6, 0], [6, 2, 7, 1],\n    [7, 0, 11, 1], [7, 1, 7, 0], [7, 2, 4, 1]\n]\n\nexport {FBpairPos}\n\nexport type FaceletCubeT = Array<Array<Face>>\n\n// A Cube can be in two representations: cubieCube or faceletCube\n\nlet color_map =`\\\n   UUU\n   UUU\n   UUU\nLLLFFFRRRBBB\nLLLFFFRRRBBB\nLLLFFFRRRBBB\n   DDD\n   DDD\n   DDD`\n\nexport {color_map}\n\nconst defaultKeyMapping : { [key: string]: string } = {\n    \"I\": \"R\",\n    \"K\": \"R'\",\n    \"W\": \"B\",\n    \"O\": \"B'\",\n    \"S\": \"D\",\n    \"L\": \"D'\",\n    \"D\": \"L\",\n    \"E\": \"L'\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"H\": \"F\",\n    \"G\": \"F'\",\n    \";\": \"y\",\n    \"A\": \"y'\",\n    \"U\": \"r\",\n    \"R\": \"l'\",\n    \"M\": \"r'\",\n    \"V\": \"l\",\n    \"T\": \"x\",\n    \"Y\": \"x\",\n    \"N\": \"x'\",\n    \"B\": \"x'\",\n    \".\": \"M'\",\n    \"X\": \"M'\",\n    \"5\": \"M\",\n    \"6\": \"M\",\n    \"P\": \"z\",\n    \"Q\": \"z'\",\n    \"Z\": \"d\",\n    \"C\": \"u'\",\n    \",\": \"u\",\n    \"/\": \"d'\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n  }\n\nexport {defaultKeyMapping}","import React, { useEffect } from 'react'\n\nimport { FaceletCubeT, Face } from \"../lib/Defs\";\nimport * as THREE from 'three';\nimport { useTheme } from '@material-ui/core';\nimport { getConfig } from '../lib/Local';\n\ntype Config = {\n    cube: FaceletCubeT, width: number, height: number, colorScheme: Array<number>, facesToReveal: Face[],\n    bgColor?: string\n}\n\n/*\nHow to propagate control of keypress ..? maybe not here, in the app.\n\nLet's look at click analogy: if a user click on sub-component,\nthat message should be propagated upwards to the parent.\n\nThat is, \"keydown\" should transform to some kind of message, e.g. the resulting cube state\nto be passed to the App, which then decides whether to trigger state change or let the cube keep being solved\n\n*/\n\n\ntype AxesInfo = [THREE.Vector3, THREE.Euler]\nconst TAU = Math.PI * 2;\nconst axesInfo: [THREE.Vector3, THREE.Euler][] = [\n    [new THREE.Vector3(0, 1, 0), new THREE.Euler(-TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, -1, 0), new THREE.Euler(TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, 0, 1), new THREE.Euler(0, 0, 0)],\n    [new THREE.Vector3(0, 0, -1), new THREE.Euler(0, TAU / 2, 0)],\n    [new THREE.Vector3(-1, 0, 0), new THREE.Euler(0, -TAU / 4, 0)],\n    [new THREE.Vector3(1, 0, 0), new THREE.Euler(0, TAU / 4, 0)],\n];\n\nconst setup = function (width: number, height: number, colorScheme?: Array<number>, mode?: string,\n    faces?: Face[]) {\n    let facesToReveal = faces || [Face.L, Face.B, Face.D]\n    const scene = new THREE.Scene()\n    const camera = new THREE.PerspectiveCamera(70, width / height, 0.1, 1000)\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    const mag = 1.0\n    const alpha = 0.5\n    const enableBorder = true\n    const geo = new THREE.PlaneGeometry(0.89 * mag * 2, 0.89 * mag * 2)\n    const geo_border = new THREE.PlaneGeometry(1.0 * mag * 2, 1.0 * mag * 2)\n    //const geo_border = new THREE.EdgesGeometry(geo_border_0)\n    renderer.setPixelRatio(window.devicePixelRatio)\n\n    //let colorScheme_ = colorScheme || [0xffffff, 0xffff00,  0x00ff00, 0x0000ff, 0xff8800, 0xff0000]\n\n    mode = mode || \"FRU\"\n\n    if (mode === \"FRU\")\n        camera.position.copy(new THREE.Vector3(2.6 / 1.1, 3 / 1.1, 3 / 1.1))\n    else\n        camera.position.copy(new THREE.Vector3(0 / 1.1, 3 / 1.1, 3 / 1.1))\n\n    //camera.position.copy(new THREE.Vector3(2.5, 5, 5))\n    camera.lookAt(new THREE.Vector3(0, 0, 0))\n\n\n    let stickers_tmpl: THREE.Mesh[], stickerwrap_tmpl: THREE.Mesh\n\n    function updateFacesToReveal(faces: Face[]) {\n        facesToReveal = faces\n    }\n    function updateColorScheme(colorScheme: Array<number>) {\n        let colorScheme_ = colorScheme\n        //console.log(\"update color scheme \", colorScheme_)\n        let materials = Array(7).fill(0).map((_, i) => {\n            let mat = new THREE.MeshBasicMaterial({ color: colorScheme_[i], side: THREE.DoubleSide });\n            mat.alphaTest = alpha;\n            return mat\n        })\n\n        stickers_tmpl = materials.map((mat) => {\n            let mesh = new THREE.Mesh(geo, mat)\n            mesh.setRotationFromEuler(axesInfo[0][1])\n            return mesh\n        })\n\n        let materials_border = new THREE.MeshBasicMaterial({ color: 0x000000, side: THREE.FrontSide })\n        stickerwrap_tmpl = (() => {\n            let mesh = new THREE.Mesh(geo_border, materials_border)\n            mesh.setRotationFromEuler(axesInfo[0][1])\n            return mesh\n        })()\n    }\n\n    function drawCube(faces: FaceletCubeT): THREE.Group {\n        const cube = new THREE.Group();\n        for (let i = 0; i < 6; i++) {\n            const cubie = new THREE.Group();\n            const rot = new THREE.Matrix4().makeRotationFromEuler(axesInfo[i][1]);\n            const rot1 = new THREE.Matrix4().makeRotationFromEuler(axesInfo[1][1]);\n            cubie.setRotationFromMatrix(rot.multiply(rot1))\n            for (let z = -1; z <= 1; z++) {\n                for (let x = -1; x <= 1; x++) {\n                    let idx = (z + 1) * 3 + (x + 1)\n\n                    const curr_tmpl = stickers_tmpl[faces[i][idx]]\n                    const sticker = curr_tmpl.clone()\n                    const stickerwrap = stickerwrap_tmpl.clone()\n\n                    const eps = 0.05\n                    sticker.position.copy(new THREE.Vector3(x * 2, 3, z * 2))\n                    stickerwrap.position.copy(new THREE.Vector3(x * 2, 3 - eps, z * 2))\n\n                    if (facesToReveal.indexOf(i) > -1) { // (i === 5 && mode === \"UF\")) {\n                        const stickerhint = curr_tmpl.clone()\n                        stickerhint.position.copy(new THREE.Vector3(x * 2, 3 + 7 + 3, z * 2))\n                        cubie.add(stickerhint)\n\n                    }\n                    if (enableBorder)\n                        cubie.add(stickerwrap)\n\n                    cubie.add(sticker)\n                }\n\n            }\n            cube.add(cubie)\n        }\n        cube.scale.set(1 / 3, 1 / 3, 1 / 3)\n        return cube\n    }\n\n    let cubeG = new THREE.Group();\n    scene.add(cubeG)\n    const updateCube = (cube: FaceletCubeT) => {\n        scene.remove(cubeG)\n        cubeG = drawCube(cube)\n        scene.add(cubeG)\n    }\n\n    const renderScene = () => {\n        renderer.render(scene, camera)\n    }\n\n    const updateWidthHeight = (width: number, height: number, clearColor?: string) => {\n        const canvas = renderer.domElement;\n        const needResize = canvas.width !== width || canvas.height !== height;\n        if (needResize) {\n            renderer.setSize(width, height, true);\n            clearColor = clearColor || '#eeeeef';\n            //renderer.setViewport( 0, 0, width * window.devicePixelRatio, height * window.devicePixelRatio);\n            renderer.setClearColor(clearColor) // #70788a') //#5a606e') // '#373B43') // '#eeeeee')\n            camera.aspect = width / height;\n            camera.updateProjectionMatrix();\n        }\n    }\n\n\n    const cleanup = () => {\n        geo.dispose()\n        //materials.forEach(m => m.dispose())\n    }\n\n    //let defaultColorScheme = [ 0x00ff00, 0x0000ff, 0xff0000,0xff8800,0xffff00, 0xffffff]\n    updateWidthHeight(width, height)\n    //updateColorScheme(defaultColorScheme)\n    //updateCube(FaceletCube.from_cubie( CubieCube.id))\n\n\n    return {\n        domElement: () => { return renderer.domElement },\n        updateCube,\n        renderScene,\n        updateWidthHeight,\n        cleanup,\n        updateColorScheme,\n        updateFacesToReveal\n    }\n}\n\nlet cubeSim = setup(370, 370)\n\nfunction CubeSim(props: Config) {\n    const mount = React.useRef<HTMLDivElement | null>(null)\n    let { width, height } = props\n\n    useEffect(() => {\n        let dom = cubeSim.domElement()\n        let current = mount.current!\n\n        current.appendChild(dom)\n        cubeSim.updateFacesToReveal(props.facesToReveal)\n        cubeSim.updateWidthHeight(width, height, props.bgColor || \"#eeeeef\")\n        cubeSim.updateColorScheme(props.colorScheme)\n        cubeSim.updateCube(props.cube)\n        cubeSim.renderScene()\n\n        return () => {\n            current.removeChild(dom)\n        }\n    })\n\n    return <div\n        ref={mount}\n        style={{ width: props.width, height: props.height }}\n    />;\n}\n\nexport default CubeSim","let rand_int = (r: number) => {\n    return Math.floor(Math.random() * r)\n}\n\nlet rand_incl = (l: number, r: number) => {\n    return rand_int(r - l + 1) + l;\n}\nlet rand_choice = function<T>(arr: T[]) {\n    return arr[rand_int(arr.length)]\n}\n\nlet rand_shuffle = function<T>(arr: T[]) {\n    for (let i = 0, l = arr.length; i < l - 1; i++) {\n        let j = rand_incl(i, l - 1)\n        let tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp\n    }\n    return arr\n}\n\nlet getParity = (perm: number[]) => {\n    let visited = Array(perm.length).fill(false)\n    let follow = (i: number, cnt: number) : number => {\n        if (visited[i]) {\n            return 0\n        } else {\n            visited[i] = 1\n            if (visited[perm[i]]) {\n                return cnt;\n            } else\n                return follow(perm[i], cnt + 1)\n        }\n    }\n    let res = 0\n    for (let x of perm) {\n        res += follow(x, 0)\n    }\n    return res\n}\n\nlet arrayEqual = function<T>(arr1: T[], arr2: T[]) {\n    if (arr1.length !== arr2.length) return false;\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) return false;\n    }\n    return true;\n}\n\nlet encodeArr = function(base: number, rarr: number[]) {\n    let int = 0\n    for (let i = rarr.length - 1; i >= 0; i--)\n        int = rarr[i] + int * base\n    return int\n}\n\nexport {rand_int, rand_choice, rand_shuffle, getParity, arrayEqual, encodeArr}","import { MoveT, CubieT, OriChg, PermChg, StickerT, StickerExtT, CornerCoord, EdgeCoord, cstimer_corners_coord, cstimer_edges_coord } from \"./Defs\";\nimport { u, d, f, b, l, r, m, e, s} from \"./Defs\";\nimport { FaceletT, FaceletCubeT, corners_coord, edges_coord, u_face, f_face, color_map } from \"./Defs\";\nimport { Typ, Face, C, E, T, U, D, F, B, L, R } from \"./Defs\";\nimport { rand_int, rand_shuffle, getParity, rand_choice, arrayEqual } from \"./Math\";\n\nconst C_MOD = 3;\nconst E_MOD = 2;\nconst T_MOD = 1;\n\nlet CubieCube = (function () {\n    /*\n    Cube should be represented as a simple struct {cp, eo, ep, eo, tp}.\n    The addition of tp is not necessary, but helps us deal with slice moves in Roux during search and simcube.\n    */\n\n    /*\n    We will follow the programming pattern of returning an object with all the public functions.\n    These functions will mostly have no side effects, i.e. no 'this' will be used. instead, the object must pass itself\n    in as the first argument. This makes sense because cube moves usually changes the state representation by a lot,\n    and re-assigning the result to 'this' would be cumbersome.\n    */\n    let id: CubieT = {\n        // init state\n        cp: [0, 1, 2, 3, 4, 5, 6, 7],\n        co: [0, 0, 0, 0, 0, 0, 0, 0],\n        ep: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n        eo: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        tp: [0, 1, 2, 3, 4, 5] // UD FB LR\n    }\n\n    let apply_partial = (o: Array<number>, p: Array<number>, oc: Array<OriChg>, pc: Array<PermChg>, mod: number) => {\n        let o_new = [...o];\n        let p_new = [...p];\n        console.assert(oc.length === pc.length)\n\n        for (let i = 0; i < oc.length; i++) {\n            //let [src, dst] = pc[i];\n            let src = pc[i][0], dst = pc[i][1];\n            p_new[dst] = p[src];\n            o_new[dst] = (o[src] + oc[i]) % mod;\n        }\n        return [o_new, p_new]\n    }\n\n    let apply_one = (cube: CubieT, move: MoveT) => {\n        let [co, cp] = apply_partial(cube.co, cube.cp, move.coc, move.cpc, C_MOD)\n        let [eo, ep] = apply_partial(cube.eo, cube.ep, move.eoc, move.epc, E_MOD)\n        let toc = Array(move.tpc.length).fill(0)\n        let [, tp] = apply_partial([0, 0, 0, 0, 0, 0], cube.tp, toc, move.tpc, T_MOD)\n        return ({ co, cp, eo, ep, tp })\n    }\n\n    let apply = (cube: CubieT, move: MoveT | Array<MoveT>) => {\n        if (Array.isArray(move)) {\n            for (let i = 0; i < move.length; i++) {\n                cube = apply_one(cube, move[i])\n            }\n            return cube\n        } else {\n            return apply_one(cube, move)\n        }\n    }\n\n    let apply_str = (cube: CubieT, str: string) => {\n        return apply(cube, Move.parse(str))\n    }\n\n    let from_move = (move: MoveT | Array<MoveT>) => {\n        return apply(id, move)\n    }\n\n    let from_string = (str: string) => {\n        return from_move(Move.parse(str))\n    }\n\n    let clone = (cube: CubieT) => {\n        return {\n            co: [...cube.co],\n            cp: [...cube.cp],\n            eo: [...cube.eo],\n            ep: [...cube.ep],\n            tp: [...cube.tp]\n        }\n    }\n\n    let _rotate_coord = (fs: Face[]) => {\n        let faces = [...fs] as Face[]\n        let last_face = faces[faces.length - 1];\n        for (let i = faces.length - 1; i > 0; i--) {\n            faces[i] = faces[i - 1];\n        }\n        faces[0] = last_face\n        return faces\n    }\n    let _backward_rotate_coord = (fs: Face[]) => {\n        let faces = [...fs] as Face[]\n        let first_face = faces[0]\n        for (let i = 0; i < faces.length - 1; i++) {\n            faces[i] = faces[i + 1];\n        }\n        faces[faces.length - 1] = first_face\n        return faces\n    }\n\n    let to_facelet_mapping = (cube: CubieT,corners_coord: CornerCoord[], edges_coord: EdgeCoord[]) => {\n        let facelet_mapping : [Face[], Face[]][]= []\n\n        for (let i = 0; i < 8; i++) {\n            let pos = corners_coord[i] as Face[]\n            let piece = corners_coord[cube.cp[i]] as Face[]\n\n            for (let j = 0; j < cube.co[i];j++) {\n                piece = _rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i < 12; i++) {\n            let pos = edges_coord[i] as Face[]\n            let piece = edges_coord[cube.ep[i]] as Face[]\n            for (let j = 0; j < cube.eo[i];j++) {\n                piece = _rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        return facelet_mapping\n    }\n\n    let from_facelet_mapping = (fm: [Face[], Face[]][], custom_corners_coord: CornerCoord[], custom_edges_coord: EdgeCoord[]) : CubieT => {\n        let cube = CubieCube.clone(CubieCube.id)\n        let idxOf = (a_: CornerCoord[] | EdgeCoord[], target: Face[]) => {\n            let a = a_ as Face[][]\n            for (let i = 0; i < a.length; i++) {\n                if (arrayEqual(a[i], target)) return i;\n            }\n            return -1;\n        }\n        let getOriPerm =(a_: CornerCoord[] | EdgeCoord[], target: Face[]): [number, number]  => {\n            let ori = 0;\n            let perm = idxOf(a_, target)\n\n            while (perm === -1) {\n                ori++;\n                target = _backward_rotate_coord(target) as any\n                perm = idxOf(a_, target)\n\n                if (ori > 3) break;\n            }\n            return [ori, perm]\n        }\n\n        for (let coord_pair of fm) {\n            let pos = coord_pair[0], piece = coord_pair[1]\n            if (pos.length === 2) {\n                let newpos = idxOf(custom_edges_coord, pos);\n                let [newOri, newPerm] = getOriPerm(custom_edges_coord, piece);\n                cube.eo[newpos] = newOri;\n                cube.ep[newpos] = newPerm;\n            } else {\n                let newpos = idxOf(custom_corners_coord, pos);\n                let [newOri, newPerm] = getOriPerm(custom_corners_coord, piece);\n                cube.co[newpos] = newOri;\n                cube.cp[newpos] = newPerm;\n            }\n        }\n        return cube\n    }\n\n    let to_cstimer_cube = (cube: CubieT) => {\n        let facelet_mapping = to_facelet_mapping(cube, corners_coord, edges_coord)\n        let cstimer_cube = from_facelet_mapping(facelet_mapping, cstimer_corners_coord, cstimer_edges_coord)\n\n        return cstimer_cube\n    }\n\n    let is_solveable = (cube: CubieT) => {\n        if (cube.tp[0] !== 0) {\n            cube = CubieCube.apply(cube, Move.parse(\"M2\"))\n        }\n        let perm_correct = (getParity(cube.cp) + getParity(cube.ep)) % 2 === 0\n        let ori_correct = (cube.co.reduce((x, y) => x + y, 0) % 3 === 0) && (cube.eo.reduce((x, y) => x + y, 0) % 2 === 0)\n        return perm_correct && ori_correct\n    }\n\n    return {\n        id,\n        apply,\n        apply_str,\n        clone,\n        from_move,\n        from_string,\n        to_cstimer_cube,\n        is_solveable\n    }\n\n})()\n\n\n/* Moves */\n/* We will generate all the moves based on the base moves and rotations, and return them in an array */\nlet Move = function () {\n    let from_cube = (cube: CubieT, name: string): MoveT => {\n        let get_change = (p: Array<number>, o: Array<number>, acc_p: Array<PermChg>, acc_o: Array<OriChg>) => {\n            for (let i = 0; i < p.length; i++) {\n                if (i === p[i] && o[i] === 0) {\n                } else {\n                    acc_p.push([p[i], i]);\n                    acc_o.push(o[i]);\n                }\n            }\n        }\n        let cpc: Array<PermChg> = [];\n        let coc: Array<OriChg> = [];\n        let epc: Array<PermChg> = [];\n        let eoc: Array<OriChg> = [];\n        let tpc: Array<PermChg> = [];\n        get_change(cube.cp, cube.co, cpc, coc);\n        get_change(cube.ep, cube.eo, epc, eoc);\n        get_change(cube.tp, [0, 0, 0, 0, 0, 0], tpc, []);\n        return {\n            cpc, coc, epc, eoc, tpc, name\n        }\n    }\n    let from_moves = (moves: Array<MoveT>, name: string): MoveT => {\n        let move = from_cube(CubieCube.apply(CubieCube.id, moves), name)\n        return move\n    }\n    let make_rot_set = (move: MoveT): Array<MoveT> => {\n        return [move,\n            from_moves([move, move], move.name + \"2\"),\n            from_moves([move, move, move], move.name + \"'\")\n        ]\n    }\n    let add_auf = (moves: Array<MoveT>, auf_moves?: Array<MoveT | MoveT[]>): MoveT[] => {\n        auf_moves = auf_moves || [[], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n        let auf_move = auf_moves[Math.floor(Math.random() * auf_moves.length)]\n        if (Array.isArray(auf_move)) {\n            return moves.concat(auf_move)\n        } else {\n            moves.push(auf_move)\n            return moves\n        }\n    }\n\n    let generate_base_moves = () => {\n        let us = make_rot_set(u);\n        let fs = make_rot_set(f)\n        let rs = make_rot_set(r)\n        let ls = make_rot_set(l)\n        let ds = make_rot_set(d)\n        let bs = make_rot_set(b)\n        let ms = make_rot_set(m)\n        let es = make_rot_set(e);\n        let ss = make_rot_set(s);\n\n        let rw = from_moves([r, ms[2]], \"r\")\n        let rws = make_rot_set(rw)\n        let lw = from_moves([l, m], \"l\")\n        let lws = make_rot_set(lw)\n        let uw = from_moves([u, e], \"u\")\n        let uws = make_rot_set(uw)\n\n        let x = from_moves([r, ls[2], ms[2]], \"x\")\n        let xs = make_rot_set(x)\n        let y = from_moves([u, e, ds[2]], \"y\")\n        let ys = make_rot_set(y)\n        let z = from_moves([x, y, x, x, x], \"z\")\n        let zs = make_rot_set(z)\n        let moves = [\n            us, fs, rs, ls, ds, bs, ms, es, ss,\n            xs, ys, zs,\n            rws, lws, uws\n        ].flat()\n        let moves_dict: { [key: string]: MoveT } = Object.create({})\n        moves.forEach(m => moves_dict[m.name] = m)\n        return moves_dict\n    }\n\n    const moveCost = function() {\n        let pairs : [string, number][]= [\n            [\"U\", 1], [\"U'\", 1], [\"U2\", 1.4],\n            [\"R\", 1], [\"R'\", 1], [\"R2\", 1.4],\n            [\"r\", 1], [\"r'\", 1], [\"r2\", 1.5],\n            [\"L\", 1], [\"L'\", 1], [\"L2\", 1.4],\n            [\"F\", 1.4], [\"F'\", 1.4], [\"F2\", 1.8],\n            [\"B\", 1.6], [\"B'\", 1.6], [\"B2\", 2.2],\n            [\"D\", 1.4], [\"D'\", 1.4], [\"D2\", 1.7],\n            [\"M\", 1.5], [\"M'\", 1.2], [\"M2\", 1.8],\n            [\"S\", 1.7], [\"S'\", 1.7], [\"S2\", 3.0],\n            [\"E\", 1.5], [\"E'\", 1.5], [\"E2\", 2.4],\n        ]\n        let costMap = new Map(pairs)\n        return costMap\n    }()\n    function evaluate(moves : MoveT[]) {\n        let sum = 0\n        for (let m of moves) {\n            const value = (moveCost.get(m.name)) || 1.4\n            sum += value\n        }\n        return sum\n    }\n\n    let all_moves = generate_base_moves()\n    let parse = (str: string) => {\n        let tokens = []\n        let token = \"\"\n        for (let i = 0; i < str.length; i++) {\n            let ch = str[i]\n            if (ch === '2' || ch === '\\'') {\n                if (token.length === 1) {\n                    token += str[i];\n                    tokens.push(token)\n                    token = \"\"\n                }\n            } else if (ch === ' ') {\n                if (token.length > 0) {\n                    tokens.push(token); token = \"\";\n                }\n            } else {\n                const ord = ch.charCodeAt(0)\n                if ( (65 <= ord && ord < 65 + 26) || (97 <= ord && ord < 97 + 26)) {\n                    if (token.length > 0) {\n                        tokens.push(token)\n                        token = \"\"\n                    }\n                    token += str[i]\n                }\n            }\n        }\n        if (token.length > 0) tokens.push(token);\n\n        let res: MoveT[] = []\n        for (let token of tokens) {\n            let move = all_moves[token]\n            if (move) {\n                res.push(move)\n            } else {\n                return []\n                //throw Error(\"Invalid move sequence \" + move)\n            }\n        }\n        return res\n    }\n\n    let combine = (move1: MoveT, move2: MoveT) : MoveT[] => {\n        const getCnt = (name : string) => {\n            if (name.length === 1) return 1\n            return name[1] === \"2\" ? 2 : 3\n        }\n        const getStr = (cnt : number) => {\n            return (cnt === 1) ? \"\" : (cnt === 2 ? \"2\" : \"'\")\n        }\n        if (move1.name[0] === move2.name[0]) {\n            let cnt = (getCnt(move1.name) + getCnt(move2.name)) % 4\n            if (cnt === 0) return []\n            else return [ all_moves[move1.name[0] + getStr(cnt)] ]\n        } else {\n            return [move1, move2]\n        }\n    }\n    let collapse = (moves: MoveT[]) : MoveT[] => {\n        let newMoves : MoveT[] = []\n        while (moves.length > 0) {\n            const nextMove = moves.shift()!\n            if (newMoves.length === 0) {\n                newMoves.push(nextMove)\n            } else {\n                const move = newMoves.pop()!\n                const combined = combine(move, nextMove)\n                for (let m of combined)\n                    newMoves.push(m)\n            }\n        }\n        return newMoves;\n    }\n    let inv = (move: MoveT | MoveT[]): MoveT[] => {\n        if (move === undefined || move === null) {\n            return []\n        }\n        if (Array.isArray(move)) {\n            return move.slice(0).reverse().map(inv).flat()\n        } else {\n            let name: string\n            switch (move.name[move.name.length - 1]) {\n                case \"'\": name = move.name.slice(0, move.name.length - 1); break\n                case \"2\": name = move.name; break\n                default: name = move.name + \"'\"\n            }\n            return [all_moves[name]]\n        }\n    }\n\n    let to_string = (move: MoveT | MoveT[]): string => {\n        if (Array.isArray(move)) {\n            return move.map(to_string).join(\" \") + \" \"\n        } else {\n            return move.name\n        }\n    }\n    \n    return {\n        all: all_moves,\n        parse: parse,\n        inv: inv,\n        add_auf: add_auf,\n        to_string: to_string,\n        from_moves,\n        from_cube,\n        evaluate,\n        collapse,\n    }\n}()\n\n/* Faces */\nlet FaceletCube = function () {\n    let mult_move = (face: FaceletT, move: MoveT): FaceletT => {\n        let face_new: FaceletT = [...face]\n        let mod_for_typ = (typ: Typ) => {\n            switch (typ) {\n                case C: return 3;\n                case E: return 2;\n                case T: return 1\n            }\n        }\n        let work = (p: PermChg, o: number, typ: Typ) => {\n            let mod = mod_for_typ(typ)\n            let [p1, p2] = p\n            for (let i = 0; i < face.length; i++) {\n                let [p_curr, o_curr, typ_curr] = face[i];\n                if (typ_curr === typ && p_curr === p1) {\n                    face_new[i] = [p2, (o_curr + o) % mod, typ]\n                }\n            }\n        }\n        for (let i = 0; i < move.cpc.length; i++) {\n            work(move.cpc[i], move.coc[i], C)\n        }\n        for (let i = 0; i < move.epc.length; i++) {\n            work(move.epc[i], move.eoc[i], E)\n        }\n        for (let i = 0; i < move.tpc.length; i++) {\n            work(move.tpc[i], 0, T)\n        }\n        return face_new\n    }\n    let color_of_c = (p: number, o1: number, o2: number) =>\n    corners_coord[p][(3 - o1 + o2) % 3];\n    let color_of_e = (p: number, o1: number, o2: number) =>\n        edges_coord[p][(2 - o1 + o2) % 2];\n    let color_of_t = (p: number) => [U, D, F, B, L, R][p]\n\n    let color_of_sticker = (cube: CubieT, sticker: StickerT) => {\n        let [p, o, typ] = sticker\n        if (typ === C) {\n            return color_of_c(cube.cp[p], cube.co[p], o)\n        } else if (typ === E) {\n            return color_of_e(cube.ep[p], cube.eo[p], o)\n        } else if (typ === T) {\n            return color_of_t(cube.tp[p])\n        } else {\n            throw Error(\"unidentified type \" + typ)\n        }\n    }\n\n    let from_cubie_partial = (cube: CubieT, facelet: FaceletT) => {\n        return facelet.map(s => color_of_sticker(cube, s))\n    }\n    let from_cubie_partial_masked = (cube: CubieT, facelet: FaceletT, mask: Mask) => {\n        return facelet.map(([p, o, typ]) => {\n            if (typ === C) {\n                if (mask.cp[cube.cp[p]] === 1)\n                    return color_of_c(cube.cp[p], cube.co[p], o)\n                else\n                    return Face.X\n            } else if (typ === E) {\n                if (mask.ep[cube.ep[p]] === 1)\n                    return color_of_e(cube.ep[p], cube.eo[p], o)\n                else\n                    return Face.X\n            } else if (typ === T) {\n                if (mask.tp && mask.tp[cube.tp[p]] === 0)\n                    return Face.X\n                else\n                    return color_of_t(cube.tp[p])\n            } else {\n                throw Error(\"unidentified type \" + typ)\n            }\n        })\n    }\n\n    let moves = Move.all\n    let generate_base_facelets = () => {\n        let d_face = mult_move(f_face, moves[\"x'\"])\n        let l_face = mult_move(f_face, moves[\"y\"])\n        let r_face = mult_move(f_face, moves[\"y'\"])\n        let b_face = mult_move(f_face, moves[\"y2\"])\n        return {\n            d_face, l_face, r_face, b_face\n        }\n    }\n    let { d_face, l_face, r_face, b_face } = generate_base_facelets()\n\n    let from_cubie = (cube: CubieT, mask?: Mask): FaceletCubeT => {\n        //console.log(\"converting from cube\", cube)\n        let faces = [u_face, d_face, f_face, b_face, l_face, r_face]\n        if (mask)\n            return faces.map((facelet) => from_cubie_partial_masked(cube, facelet, mask))\n        else\n            return faces.map((facelet) => from_cubie_partial(cube, facelet))\n    }\n\n    let to_unfolded_cube_str = (faceletCube: FaceletCubeT): String => {\n        let face_count = [0, 0, 0, 0, 0, 0];\n        let str_face_map: { [key: string]: Face } = {\n            \"U\": U, \"D\": D, \"F\": F, \"B\": B, \"L\": L, \"R\": R\n        }\n        let face_str_map = \"UDFBLR\"\n        let color_cube = \"\"\n        for (let i = 0; i < color_map.length; i++) {\n            let face_char = color_map[i];\n            if (str_face_map.hasOwnProperty(face_char)) {\n                let face: number = str_face_map[face_char] as number;\n                let count = face_count[face];\n                let color = faceletCube[face][count]\n                color_cube += face_str_map[color]\n                face_count[face] += 1;\n            } else {\n                color_cube += color_map[i];\n            }\n        }\n        return color_cube;\n    }\n\n    let to_cubejs_str = (faceletCube: FaceletCubeT) : String => {\n        let face_order = [U, R, F, D, L, B];\n        let face_str_map = \"UDFBLR\";\n        let s = \"\";\n        for (let face of face_order) {\n            for (let i = 0 ; i < 9; i++) {\n                s += face_str_map[faceletCube[face][i]]\n            }\n        }\n        return s\n    }\n\n    return {\n        from_cubie,\n        to_unfolded_cube_str,\n        to_cubejs_str,\n        color_of_sticker,\n        faces: {\n            u_face, d_face, l_face, r_face, f_face, b_face\n        }\n    }\n}()\n\ntype Mask = {\n    co?: number[],\n    eo?: number[],\n    tp?: number[],\n    cp: number[],\n    ep: number[],\n}\nfunction mask_copy (m: Mask) {\n    return {\n        co: m.co && [...m.co],\n        eo: m.eo && [...m.eo],\n        tp: m.tp && [...m.tp],\n        cp: [...m.cp],\n        ep: [...m.ep]\n    }\n}\n\nconst lse_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n}\n\nconst solved_mask : Mask = {\n    cp: [1, 1, 1, 1,  1, 1, 1, 1],\n    ep:[1, 1, 1, 1,  1, 1, 1, 1, 1, 1, 1, 1],\n}\nconst empty_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\nconst dl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]\n}\nconst db_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]\n}\nconst fs_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]\n}\nconst fs_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0]\n}\nconst fb_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst zhouheng_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst fbdr_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst sb_mask : Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst cmll_mask : Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nlet CubeUtil = (() => {\n    let is_cube_solved = (cube: CubieT) => {\n        let id = CubieCube.id\n        return arrayEqual(cube.co, id.co) &&\n               arrayEqual(cube.eo, id.eo) &&\n               arrayEqual(cube.cp, id.cp) &&\n               arrayEqual(cube.ep, id.ep)\n    }\n\n    function ext(stickers: StickerT[], f: Face) : StickerExtT[] {\n        return stickers.map(x => {\n            let [a, b, c] = x;\n            return [a,b,c,f]\n        })\n    }\n\n    let { u_face, d_face, l_face, r_face, f_face, b_face } = FaceletCube.faces\n    let stickers = [ ...ext(u_face, U), ...ext(d_face, D),\n        ...ext(l_face, L), ...ext(r_face, R), ...ext(f_face,F),  ...ext(b_face, B)]\n\n    let find_pairs = function() {\n        // enumerate each sticker\n        let edge_stickers = stickers.filter(s => s[2] === Typ.E)\n        let corner_stickers = stickers.filter(s => s[2] === Typ.C)\n\n        let ep_stickers : StickerExtT[][] = Array(12).fill(0).map(_ => Array(0))\n        edge_stickers.map(s => ep_stickers[s[0]].push(s) )\n\n        let cp_stickers : StickerExtT[][] = Array(8).fill(0).map(_ => Array(0))\n        corner_stickers.map(s => cp_stickers[s[0]].push(s))\n\n        const epcp_pairs : [number, number][] = []\n        for (let e = 0; e < 12; e++) {\n            for (let c = 0; c < 8; c++) {\n                let efs = ep_stickers[e]\n                let cfs = cp_stickers[c]\n\n                let match = 0;\n                efs.forEach( (e) => {\n                    cfs.forEach( (c) => { if (e[3] === c[3]) match++ })\n                })\n                if (match === 2) {\n                    epcp_pairs.push( [e, c] )\n                }\n            }\n        }\n\n\n        let get_color = (cube: CubieT, s: StickerExtT) => {\n            return FaceletCube.color_of_sticker(cube, [s[0], s[1], s[2]] )\n        }\n        let func = (cube: CubieT) => {\n            // now we process the cube\n            let connected_pairs : [number, number][]= []\n            //console.log(\"All neighboring pairs \", epcp_pairs)\n            for (let [ep, cp] of epcp_pairs) {\n                let efs = ep_stickers[ep]\n                let cfs = cp_stickers[cp]\n                let cnt = 0;\n                efs.forEach( (e) => {\n                    const c = cfs.filter( (c) => e[3] === c[3])[0]\n                    if (get_color(cube, e) === get_color(cube, c)) cnt++;\n                })\n                if (cnt === 2) {\n                    connected_pairs.push([ep, cp])\n                }\n            }\n            return connected_pairs\n        }\n        return func\n    }()\n\n    let is_mask_solved = (cube: CubieT, { co, eo, cp, ep }: Mask, premove: (MoveT | MoveT[])[]) => {\n        //let moves = [ [], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"] ]\n        co = co || cp\n        eo = eo || ep\n        for (let move of premove) {\n            let cube1 = CubieCube.apply(cube, move)\n            let solved = true\n            for (let i = 0; i < 8 && solved; i++) {\n                if ((co[i] && cube1.co[i] !== 0)\n                    || (cp[i] && cube1.cp[i] !== i)) {\n                    solved = false;\n                }\n            }\n            for (let i = 0; i < 12 && solved; i++) {\n                if ((eo[i] && cube1.eo[i] !== 0)\n                    || (ep[i] && cube1.ep[i] !== i)) {\n                    solved = false;\n                }\n            }\n            if (solved) return true;\n        }\n        return false;\n    }\n\n    const u_premove = [[], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n    const m2_premove = [[], Move.all[\"M2\"]]\n    //let m2u_premove = [[], Move.parse(\"U\"), Move.parse(\"U'\"), Move.parse(\"U2\"),\n    //Move.parse(\"M2\"), Move.parse(\"M2U\"), Move.parse(\"M2U'\"), Move.parse(\"M2U2\")]\n\n    let is_cmll_solved = (cube: CubieT) => {\n        return is_mask_solved(cube, lse_mask, u_premove)\n    }\n\n    let get_random_with_mask = ({ co, eo, cp, ep }: Mask): CubieT => {\n        co = co || cp\n        eo = eo || ep\n        // get_random -- figure out which masks are 0, and assign random to these\n        let random_ori = (ori_mask: number[], typ: Typ) => {\n            let ori = Array(ori_mask.length).fill(0)\n            let mod = (typ === C) ? 3 : 2\n            let sum: number\n            do {\n                sum = 0\n                for (let i in ori_mask) {\n                    if (ori_mask[i] === 0) {\n                        ori[i] = rand_int(mod)\n                        sum += ori[i]\n                    }\n                }\n            } while (sum % mod > 0)\n            return ori\n        }\n        let random_perm = (perm_mask: number[]) => {\n            let perm: number[] = Array(perm_mask.length).fill(0)\n            let undecided: number[] = []\n            for (let i = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    undecided.push(i)\n                } else {\n                    perm[i] = i\n                }\n            }\n            rand_shuffle(undecided)\n            for (let i = 0, cnt = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    perm[i] = undecided[cnt]\n                    cnt += 1\n                }\n            }\n            return perm\n        }\n        let cp_rand, ep_rand, par\n        do {\n            [cp_rand, ep_rand] = [random_perm(cp), random_perm(ep)]\n            par = (getParity(cp_rand) + getParity(ep_rand)) & 1\n        } while (par > 0)\n\n        return {\n            co: random_ori(co, C),\n            cp: cp_rand,\n            eo: random_ori(eo, E),\n            ep: ep_rand,\n            tp: [0, 1, 2, 3, 4, 5]\n        }\n    }\n\n    let get_random_lse = (): CubieT => {\n        let cube = get_random_with_mask(lse_mask)\n        return CubieCube.apply(cube, rand_choice(m2_premove))\n    }\n\n    const ori_to_color_scheme = (() => {\n        // UDFBLR\n        // specify the colors for uf\n        // how to do this?\n        const arr: [string, number][] = [\n            [\"G\", 0x00ff00],\n            [\"B\", 0x0000ff],\n            [\"R\", 0xff0000],\n            [\"O\", 0xff8800],\n            [\"Y\", 0xffff00],\n            [\"W\", 0xffffff],\n            [\"X\", 0xcccccc]\n        ]\n        const colorMap = new Map<string, number>(arr)\n        // UDFBLR from UF\n        // INFERR UFR from UF?\n        const valid_schemes = [\n            \"WYGBOR\",\n            \"WYBGRO\",\n            \"WYROGB\",\n            \"WYORBG\",\n            \"YWGBRO\",\n            \"YEBGOR\",\n            \"YWROBG\",\n            \"YWORGB\",\n\n            \"GBWYRO\",\n            \"GBYWOR\",\n            \"GBROYW\",\n            \"GBORWY\",\n            \"BGWYOR\",\n            \"BGYWRO\",\n            \"BGROWY\",\n            \"BGORYW\",\n\n            \"ORWYGB\",\n            \"ORYWBG\",\n            \"ORGBYW\",\n            \"ORBGWY\",\n            \"ROWYBG\",\n            \"ROYWGB\",\n            \"ROGBWY\",\n            \"ROBGYW\",\n        ]\n        const valid_scheme_mapper: { [key: string]: number[] } = Object.create({})\n        valid_schemes.forEach(s => {\n            let arr = s.split('').map(ch => colorMap.get(ch)!)\n            arr.push(colorMap.get(\"X\")!)\n            valid_scheme_mapper[s[0] + s[2]] = arr\n        })\n\n        const mapper = (sel: string) => {\n            return valid_scheme_mapper[sel]\n        }\n\n        return mapper\n    })()\n\n    return {\n        is_cmll_solved,\n        get_random_lse,\n        get_random_with_mask,\n        ori_to_color_scheme,\n        is_cube_solved,\n        find_pairs,\n        stickers\n    }\n})()\n\nlet Mask = {\n    lse_mask, fs_back_mask, fs_front_mask, fbdr_mask, fb_mask, sb_mask, cmll_mask, ss_front_mask, ss_back_mask,\n    empty_mask, dl_solved_mask, db_solved_mask, solved_mask, zhouheng_mask,\n    copy: mask_copy\n}\n\nexport { CubieCube, Move, FaceletCube, CubeUtil, Mask }\n","export type Selector = {\n    names: string[],\n    flags: number[],\n    kind: string,\n    label?: string\n}\n\nfunction getActiveNames(s : Selector) {\n    let ans = []\n    for (let i = 0; i < s.flags.length; i++) {\n        if (s.flags[i] === 1) {\n            ans.push(s.names[i])\n        }\n    }\n    return ans\n}\n\nfunction getActiveName(s : Selector) {\n    for (let i = 0; i < s.flags.length; i++) {\n        if (s.flags[i] === 1) {\n            return (s.names[i])\n        }\n    }\n    return null\n}\n\nexport {getActiveNames, getActiveName}\n","import React from 'react'\n\nimport {\n    FormControlLabel, FormGroup, Button, makeStyles, Box,\n    FormControl, FormLabel, RadioGroup, Checkbox, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport Radio from '@material-ui/core/Radio';\n\nimport { AppState, Config, Action } from '../Types';\nimport { Selector } from '../lib/Selector';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        flexGrow: 1,\n    },\n    select: {\n      color: theme.palette.text.primary\n    },\n    selectLabel: {\n      color: theme.palette.text.secondary\n    }\n\n}))\n\nfunction SingleSelect(props: {state: AppState, dispatch: React.Dispatch<Action>,\n    select: (c: Config) => Selector, label?: string}) {\n    let { state, dispatch, select } = props\n    let { config } = state\n    let sel = select(config)\n    let classes = useStyles()\n\n    const handleChange = (evt: { target: { value: string; }; }) => {\n      let { names } = sel\n      let n = names.length\n      let new_flags = Array(n).fill(0)\n\n      for (let i = 0; i < names.length; i++) {\n        if (names[i] === evt.target.value) {\n          new_flags[i] = 1\n        }\n      }\n      let new_config = JSON.parse(JSON.stringify(config))\n      select(new_config).flags = new_flags\n      if (new_config.fbPairSolvedSelector.flags[1] === 1) {\n        new_config.fbdrSelector.flags = [1, 0, 0]\n      }\n      dispatch( { type: \"config\", content: new_config })\n    }\n\n    let radioValue = function() {\n      let { names, flags } = sel\n      for (let i = 0; i < flags.length; i++) {\n        if (flags[i] === 1) return names[i]\n      }\n      return \"\"\n    }()\n\n    let label = sel.label || props.label || \"\"\n    return (\n      <FormControl component=\"fieldset\" className={classes.select}>\n      <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n      <RadioGroup aria-label=\"position\" name=\"position\" value={radioValue} onChange={handleChange} row>\n        {\n          sel.names.map(name => (\n            <FormControlLabel\n              key={name}\n              value={name}\n              control={<Radio color=\"primary\" />}\n              label={name}\n              labelPlacement=\"end\"\n            />\n          ))\n        }\n      </RadioGroup>\n    </FormControl>)\n  }\n\n\n\n  function MultiSelect(props: {state: AppState, dispatch: React.Dispatch<Action>, select: (c: Config) => Selector, label?: string, noDialog?: boolean }) {\n    let { state, dispatch, select } = props\n    let { config } = state\n\n    let classes = useStyles()\n    let sel = select(config)\n    const handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n      let { names, flags } = sel\n      let new_flags = [...flags]\n\n      for (let i = 0; i < names.length; i++) {\n        if (names[i] === evt.target.value) {\n          new_flags[i] = (evt.target.checked)? 1 : 0\n        }\n      }\n      let new_config = JSON.parse(JSON.stringify(config))\n      select(new_config).flags = new_flags\n      dispatch( { type: \"config\", content: new_config })\n    }\n\n    let makeBox = (name: string, checked: boolean) => {\n      return (\n      <FormControlLabel\n          control={\n          <Checkbox color=\"primary\" checked={checked} onChange={handleChange} />\n          }\n          label={name}\n          key={name}\n          value={name}\n      />)\n    }\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    }\n    let label = sel.label || props.label || \"\"\n    const content = (\n      <FormGroup row>\n      {sel.names.map( (name, i) => makeBox(name, !!sel.flags[i]))}\n      </FormGroup>\n    )\n\n    if (props.noDialog)\n    return (\n      <FormControl component=\"fieldset\" className={classes.select}>\n        <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n        {content}\n      </FormControl>\n    )\n\n    return (\n    <div>\n      <FormLabel component=\"legend\">{label}</FormLabel>\n      <Box height={8}/>\n      <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n      <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n        SET\n      </Button>\n      <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n        <DialogTitle>Color Scheme</DialogTitle>\n        <DialogContent>\n          {content}\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Ok\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n    )\n  }\n\n  export { SingleSelect, MultiSelect }","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Divider, makeStyles, useTheme, FormControl, FormLabel, Typography, Button} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport { FaceletCube, CubeUtil, Move } from '../lib/CubeLib';\n\nimport { AppState, Action, Config } from \"../Types\";\nimport clsx from 'clsx';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\nimport { MultiSelect } from './Select';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 300,\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        fontSize: 18,\n        borderBottom: \"2px solid\",\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    button: {\n      width: \"100%\"\n    },\n\n  }))\n\n\nfunction CmllTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n    const canvasPaper = clsx(classes.canvasPaper, classes.fixedHeight);\n    let facelet = FaceletCube.from_cubie(cube)\n\n    const theme = useTheme()\n    const simBackground = getActiveName(state.config.theme) === \"bright\" ? \"#eeeeef\" : theme.palette.background.paper\n\n    const cmll = (c: Config) => c.cmllSelector;\n    const cmllauf = (c: Config) => c.cmllAufSelector;\n    const trigger = (c: Config) => c.triggerSelector;\n    const ori = (c: Config) => c.orientationSelector;\n\n    const panel = (\n      <Fragment>\n        <MultiSelect {...{state, dispatch, select: cmll, label: \"CMLL Case\", noDialog: true}} />\n        <MultiSelect {...{state, dispatch, select: cmllauf, label: \"CMLL Auf\", noDialog: true}} />\n        <MultiSelect {...{state, dispatch, select: trigger, label: \"SB Last Pair Trigger (Uncheck all for pure CMLL)\", noDialog: true}} />\n        <MultiSelect {...{state, dispatch, select: ori}} />\n      </Fragment>\n    )\n\n    React.useEffect( () =>  {\n      setReveal(false)\n    }, [ state ])\n    const [reveal, setReveal] = React.useState(false)\n    const handleClick = () => {\n      setReveal(true)\n    }\n    const handleNext = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n    }\n\n\n    let alg = \"\"\n    let setup = \"\"\n    if (state.case.desc.length === 4) {\n      setup = state.case.desc[3].alg\n    }\n    if (reveal && state.case.desc.length >= 3) {\n      const moves = Move.parse(state.case.desc[1].alg +state.case.desc[2].alg)\n      let moves_c = Move.collapse(moves)\n      if (moves_c.length > 0) {\n        if (moves_c[0].name[0] === \"U\") {\n          alg += \"(\" + moves_c[0].name + \") \";\n          moves_c = moves_c.slice(1)\n        }\n        alg += Move.to_string(moves_c)\n      }\n    }\n    return (\n    <Box className={classes.container}>\n    <Grid container >\n      <Grid item xs={12} >\n            <Paper className={canvasPaper}>\n              <Box margin=\"auto\">\n              <CubeSim\n                width={300}\n                height={300}\n                cube={facelet}\n                colorScheme={CubeUtil.ori_to_color_scheme(props.state.cube.ori)}\n                bgColor={simBackground}\n                facesToReveal={[Face.L]}\n              />\n              </Box>\n            </Paper>\n      </Grid>\n    </Grid>\n\n    <Box height = {5}/>\n\n    <Paper className={classes.paper} elevation={2}>\n    <Grid container spacing={2}>\n\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Scramble\n              </Box> </Box>\n      </Box>\n      </Grid>\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { setup }\n          </Typography>\n        </Box>\n\n      </Grid>\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Case\n              </Box> </Box>\n      </Box>\n      </Grid>\n      { (!reveal) ?\n      <Grid item xs={3}>\n      <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n      size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClick}> { /* className={classes.margin}>  */ }\n          Show\n      </Button>\n      </Grid>\n      :\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { alg }\n          </Typography>\n        </Box>\n\n      </Grid>\n      }\n    </Grid>\n    <Box height={30}/>\n\n    <Grid container spacing={0}>\n        <Grid item xs={4} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n          size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\n              Next\n          </Button>\n        </Grid>\n    </Grid>\n    </Paper>\n\n\n    <Box height={20}/>\n      <Divider/>\n    <Box height={20}/>\n    { panel }\n\n    <Box height={20}/>\n      <Divider/>\n    <Box height={15}/>\n\n    <Box>\n    <FormControl component=\"fieldset\" className={classes.prompt}>\n      <FormLabel component=\"legend\">\n         Usage: Press space for next case. Enter to redo.\n      </FormLabel>\n      </FormControl>\n    </Box>\n\n    </Box>\n    );\n}\n\nexport default CmllTrainerView\n\n\n","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, makeStyles, Divider, Typography, useTheme } from '@material-ui/core';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport CreateIcon from '@material-ui/icons/Create';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nimport { FaceletCube, CubeUtil, Mask, Move } from '../lib/CubeLib';\n\nimport { AppState,  Action, Config, FavCase} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport clsx from 'clsx';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\n\nimport { SingleSelect, MultiSelect } from './Select';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default,\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    sourceIcon : {\n        color: theme.palette.text.hint,\n        fontSize: 18,\n        padding: 0\n    },\n    sourceIconWrap : {\n        height: 32,\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n  }))\n\n\nfunction getMask(state: AppState) : Mask {\n    if (state.mode === \"fbdr\") {\n      const fbOnly = (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\")\n      //   getActiveName(state.config.fbOnlySelector) === \"FB Last Pair\"\n      return fbOnly ? Mask.fb_mask : Mask.fbdr_mask\n    }\n    else if (state.mode === \"ss\") {\n      if (state.case.desc.length === 0) return Mask.sb_mask\n      if (state.case.desc[0].kind === \"ss-front\")\n        return Mask.ss_front_mask\n      else\n        return Mask.ss_back_mask\n    }\n    else if (state.mode === \"fb\") {\n      if (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\") {\n        return Mask.fb_mask\n      }\n      else if (state.case.desc[0].kind === \"fbdr\") {\n        return Mask.fbdr_mask\n      } else {\n        return Mask.solved_mask\n      }\n    }\n    else return Mask.sb_mask\n}\n\nfunction BlockTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n\n    let facelet = FaceletCube.from_cubie(cube, getMask(state))\n\n    let desc = state.case.desc[0] || { alg: \"\", setup:\"Press next for new case\"}\n    let { alg, setup, alt_algs } = desc\n\n    let spaceButtonText = (state.name === \"hiding\") ? \"Reveal\" : \"Next\"\n    let algs = (alt_algs !== undefined) ? ( [alg, ...alt_algs] ) : [alg]\n\n    // For debug\n    // let alg_scores = algs.map(a => a + \",\" + Move.evaluate(Move.parse(a)).toFixed(2) )\n\n    let minMove = algs.map(a => Move.parse(a).length).reduce( (a, b) => Math.min(a, b), 100 )\n    let algText = (state.name === \"hiding\") ? `(Best = ${minMove} STM)`\n      : (state.name === \"revealed\" && alg.length > 0) ? algs.join(\"\\n\") : \"\"\n\n    const handleSpace = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n      if (spaceButtonText === \"Next\") {\n        setFav(false)\n      }\n    }\n\n    const theme = useTheme()\n    const simBackground = getActiveName(state.config.theme) === \"bright\" ? \"#eeeeef\" : theme.palette.background.paper\n\n    // source\n    const sourceSelected = state.scrSource === \"input\"\n    const handleSource = (evt: any) => {\n      if (sourceSelected)\n        dispatch({type: \"scrSource\", content: \"random\"})\n      else\n        dispatch({type: \"scrSource\", content: \"input\"})\n    }\n    const [favSelected, setFav] = React.useState(false)\n    const handleFav = () => {\n      if (state.case.desc.length === 0) return\n      const case_ : FavCase = {\n        mode: state.mode,\n        solver: state.case.desc[0].kind,\n        setup: state.case.desc[0].setup!\n      }\n      if (!favSelected){\n        setFav(true)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"add\"})\n      } else {\n        setFav(false)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"remove\" })\n      }\n    }\n\n    return (\n    <Box className={classes.container}>\n\n      <Grid container>\n        <Grid item xs={12}>\n        <Paper className={ clsx(classes.canvasPaper, classes.fixedHeight) }>\n          <Box margin=\"auto\">\n            <CubeSim\n              width={250}\n              height={250}\n              cube={facelet}\n              colorScheme={CubeUtil.ori_to_color_scheme(props.state.cube.ori)}\n              bgColor={simBackground}\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            />\n          </Box>\n        </Paper>\n        </Grid>\n      </Grid>\n\n      <Paper className={classes.paper} elevation={2}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6} className={classes.scrambleColumn} >\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12} className={classes.infoColumn} >\n            <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Scramble\n              </Box> </Box>\n            <Box flexGrow={0.2}></Box>\n            <Box >\n            {/* <Checkbox  className={classes.sourceIconWrap}\n              icon={<CreateIcon />}\n              checked={sourceSelected}\n              onChange = {handleSource}\n              checkedIcon={<CreateIcon color=\"primary\" />}\n              name=\"source\" /> */}\n\n            <Checkbox  className={classes.sourceIconWrap}\n              icon={<FavoriteIcon />}\n              checked={favSelected}\n              onChange = {handleFav}\n              checkedIcon={<FavoriteIcon color=\"primary\" />}\n              name=\"fav\" />\n\n            </Box>\n\n            </Box>\n\n          </Grid>\n\n          <Grid item xs={12}  >\n            <Box paddingBottom={1} lineHeight={1} className={classes.textColumn}>\n            <Typography style={{whiteSpace: 'pre-line', fontSize: 20, fontWeight: 400}}>\n                {setup}\n              </Typography>\n\n            </Box>\n          </Grid>\n\n\n        </Grid>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12}className={classes.infoColumn} >\n            <Box display=\"flex\" >\n                <Box className={classes.title} >\n                  Solution\n                </Box>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} className={classes.textColumn} >\n            <Box paddingBottom={2} lineHeight={1}>\n              <Typography style={{whiteSpace: 'pre-line', fontSize: 16}} >\n                {algText}\n              </Typography>\n            </Box>\n\n          </Grid>\n        </Grid>\n        </Grid>\n\n      </Grid>\n\n      <Grid container spacing={0}>\n        <Grid item xs={4} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button} size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleSpace}> { /* className={classes.margin}>  */ }\n              {spaceButtonText}\n          </Button>\n        </Grid>\n      </Grid>\n\n      </Paper>\n\n      <Box height={20}/>\n      <Divider/>\n      <Box height={20}/>\n\n      <ConfigPanelGroup {...{state, dispatch} } />\n    </Box>\n    );\n}\n\n\n\nfunction ConfigPanelGroup(props: {state: AppState, dispatch: React.Dispatch<Action> }) {\n  let { state, dispatch } = props\n  if (state.mode === \"ss\") {\n    let select1 = (config: Config) => { return config.ssSelector }\n    let select2 = (config: Config) => { return config.ssPairOnlySelector }\n    let select3 = (config: Config) => { return config.solutionNumSelector }\n    let select4 = (config: Config) => { return config.orientationSelector }\n    return (\n      <Fragment>\n      <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n      <MultiSelect {...{state, dispatch, select: select4}}> </MultiSelect>\n      </Fragment>\n    )\n  } else if (state.mode === \"fbdr\") {\n    let select1 = (config: Config) => { return config.fbdrSelector }\n    let select2 = (config: Config) => { return config.fbOnlySelector }\n    let select3 = (config: Config) => { return config.fbPairSolvedSelector }\n    let select4 = (config: Config) => { return config.solutionNumSelector }\n    let select5 = (config: Config) => { return config.orientationSelector }\n    return (\n      <Fragment>\n      <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select4}}> </SingleSelect>\n      <MultiSelect {...{state, dispatch, select: select5}}> </MultiSelect>\n      </Fragment>\n    )\n  } else if (state.mode === \"fb\") {\n    let select3 = (config: Config) => { return config.fbPieceSolvedSelector }\n    let select4 = (config: Config) => { return config.solutionNumSelector }\n    let select5 = (config: Config) => { return config.orientationSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <MultiSelect {...{ state, dispatch, select: select5 }}> </MultiSelect>\n      </Fragment>\n    )\n   } else return <Fragment/>\n}\n\n\n\nexport default BlockTrainerView\n\n\n","import React, { Dispatch } from 'react'\n\nimport { makeStyles } from '@material-ui/core';\nimport { Grid, GridList, GridListTile, Paper, Container } from '@material-ui/core';\n\nimport { AlgDesc } from \"../lib/Algs\";\nimport { AppState, Action } from '../Types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n      },\n    container: {\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n      },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      gridList: {\n        width: 600,\n        height: 450,\n      },\n}))\n\ntype VisualCubeConfig = {\n    alg: string;\n    stage: string;\n    sch: string; //yrbwog\n}\nfunction VisualCube(props: VisualCubeConfig) {\n  let { alg, stage, sch } = props\n  const template =\n  `http://localhost:8000/visualcube.php?fmt=svg&r=y30x-24&size=150&co=40&fo=100&cc=ccc`\n    + `&stage=${stage}&sch=${sch}&case=${alg}`\n  return <img src={template} alt=\"\"/>\n}\n\nfunction PanoramaTable(props: {algs: AlgDesc[]}){\n    let classes = useStyles()\n    let { algs } = props\n    return <GridList cellHeight={160} className={classes.gridList} cols={3}>\n            {algs.map((alg) => (\n                <GridListTile key={alg.id} cols={1}>\n                    <VisualCube alg={alg.alg} stage=\"f2b\" sch=\"yrbwog\"/>\n                </GridListTile>\n            ))}\n        </GridList>\n}\n\nexport default function PanoramaView(props: { state: AppState, dispatch: Dispatch<Action> }) {\n    let classes = useStyles()\n    let algs : AlgDesc[] = [\n        \"RUR\", \"RU'R'\"\n    ].map( str => ({\n        id: str,\n        alg: str,\n        kind: \"sb\"\n    }))\n\n    return <div className={classes.root}>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n    </div>\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  Button,\n  Checkbox, IconButton, DialogContent, TextField, DialogContentText\n} from '@material-ui/core';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { Table, Paper, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\n\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport AddIcon from '@material-ui/icons/Add';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { AppState, Action, FavCase } from '../Types';\n\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    width: '100%',\n    minWidth: 200,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport function warnDialog(props: { confirm: () => void} ) {\n\n}\n\nfunction parseAddString(state: AppState, s : string) : [ FavCase[], boolean] {\n  const res : FavCase[] = []\n  for (const line of s.split('\\n')) {\n    let cols = line.split(',')\n    if (cols.length !== 2) continue\n    let solver = cols[0].trim()\n    let setup = cols[1].trim()\n    if ([\"fb\", \"fbdr\", \"ss-front\", \"ss-back\"].includes(solver)) {\n      let case_ : FavCase = {\n        mode: state.mode,\n        solver,\n        setup\n      }\n      res.push(case_)\n    }\n  }\n  if (res.length > 0) return [res, true]\n  else return [ [], false]\n}\n\nexport default function FavListView(props: { state: AppState, dispatch: React.Dispatch<Action> }) {\n  const {state, dispatch} = props\n  const classes = useStyles();\n  const play = (i: number) => () => {\n    dispatch({ type: \"favList\", content: [ state.favList[i] ], action: \"replay\" })\n  }\n  const remove = () => {\n    if (dialogID >= 0 && dialogID < state.favList.length)\n    dispatch({ type: \"favList\", content: [ state.favList[dialogID] ], action: \"remove\" })\n  }\n  const favList = state.favList.filter(c => c.mode === state.mode)\n\n  const [ dialogID, setDialogID ] = React.useState(-1)\n\n  const handleClose = () => setDialogID(-1)\n  const handleRemove = () => { remove(); setDialogID(-1); }\n  const dialogDelete = (<Dialog open={dialogID >= 0} onClose={handleClose} >\n    <DialogTitle id=\"alert-dialog-title\">{\"Delete this alg from favorites?\"}</DialogTitle>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        No\n    </Button>\n      <Button onClick={handleRemove} color=\"primary\" autoFocus>\n        Yes\n    </Button>\n    </DialogActions>\n  </Dialog>)\n\n  const [ addDialogOpen, setAddDialogOpen ] = React.useState(false)\n  const [ addString, setAddString ] = React.useState(\"\")\n  const handleAdd = () => setAddDialogOpen(true)\n  const handleAddClose = () => setAddDialogOpen(false)\n  const handleAddSuccess = () => {\n    let [res, status] = parseAddString(state, addString)\n    if (status) {\n      dispatch({ type: \"favList\", content: res, action: \"add\" })\n    }\n    handleAddClose()\n  }\n  const handleTextChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\n    setAddString(event.target.value)\n  }\n  const dialogAdd = <Dialog open={addDialogOpen} onClose={handleAddClose} aria-labelledby=\"form-dialog-title\">\n    <DialogTitle id=\"form-dialog-title\">Add New Cases</DialogTitle>\n    <DialogContent>\n      <DialogContentText>\n        Input your cases here. (one per line) <br></br>\n        Format: [category], [setup algorithm].\n        category := fb | fbdr | ss-front | ss-back\n      </DialogContentText>\n      <TextField\n        autoFocus\n        multiline\n        margin=\"dense\"\n        id=\"name\"\n        fullWidth\n        onChange={handleTextChange}\n        onKeyDown={ (event) => { event.stopPropagation() } }\n      />\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleAddClose} color=\"primary\">\n        Cancel\n    </Button>\n      <Button onClick={handleAddSuccess} color=\"primary\">\n        Add All\n    </Button>\n    </DialogActions>\n  </Dialog>\n\n\n  return (\n    <div>\n    {dialogDelete}\n    {dialogAdd}\n    <Paper>\n      <Table className={classes.table} size=\"small\" >\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"> Scramble </TableCell>\n            <TableCell align=\"center\" rowSpan={1}>\n              <IconButton   onClick={handleAdd} component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <AddIcon />\n              </IconButton>\n            {/* <IconButton component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <FileCopyIcon />\n              </IconButton> */}\n             </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {favList.map((value, i) => {\n            //const labelId = `favlist-label-${i}`;\n            return (\n              <TableRow key={i}>\n                {/* <TableCell align=\"center\" >\n                  {/* padding=checkbox <Checkbox></Checkbox> */}\n\n                <TableCell align=\"center\"> {value.solver + \" , \" + value.setup} </TableCell>\n                <TableCell align=\"center\">\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={play(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <PlaylistPlayIcon />\n                  </IconButton>\n\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => setDialogID(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <DeleteOutlineIcon />\n                  </IconButton>\n\n                </TableCell>\n              </TableRow>\n            )\n          })}</TableBody>\n      </Table>\n    </Paper>\n    </div>\n  )\n}","export const ENABLE_DEV = false","import React from 'react'\nimport { AppState, Mode, Action } from \"../Types\";\n\nimport { Box, AppBar, Typography,Button,  Tabs, Tab, makeStyles } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { Grid, Container } from '@material-ui/core';\n\nimport CmllTrainerView from './CmllTrainerView';\nimport BlockTrainerView from './BlockTrainerView';\nimport PanoramaView from './PanoramaView';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\nimport InfoIcon from '@material-ui/icons/Info';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\n\nimport 'typeface-roboto';\n\nimport FavListView from './FavListView';\n\nimport { ENABLE_DEV } from '../settings';\n\ninterface TabPanelProps {\n  value: number,\n  index: number,\n  children: any,\n  [key: string]: any\n}\nfunction TabPanel(props: TabPanelProps ) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </Typography>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  page: {\n    backgroundColor: theme.palette.background.default\n  },\n  container: {\n    display: \"flex\"\n  },\n  icon: {\n    minWidth: 0\n  },\n  root: {\n    display: \"flex\"\n  }\n}))\n\n\nconst modes : Mode[] = [\"fbdr\", \"ss\", \"fb\", \"cmll\", \"experimental\"]\n\nfunction _getInitialHashLocation() {\n  if (window.location.hash) {\n    let idx = (modes as string[]).indexOf(window.location.hash.slice(1))\n    if (idx === -1) {\n      window.location.hash = \"\";\n      return 0;\n    } else {\n      return idx;\n    }\n  } else {\n    return 0\n  }\n}\n\n\n// TODO: Write getter and setter for config items, and also write handlers that map to setters\nfunction AppView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n  //const [locations, setLocations] = React.useState([])\n  let { state, dispatch } = props\n  let classes = useStyles()\n\n  const handleChange = React.useCallback( (_:any, newValue:number) => {\n    if (newValue < modes.length) {\n      setValue(newValue)\n      let mode = modes[newValue]\n      dispatch({type: \"mode\", content: mode})\n    }\n  }, [dispatch])\n\n  const [ open, setOpen ] = React.useState(false)\n\n  const [value, setValue] = React.useState(_getInitialHashLocation());\n  React.useEffect( () => {\n    dispatch({type: \"mode\", content: modes[_getInitialHashLocation()]})\n  }, [])\n\n  const handleInfoOpen = () => { setOpen(true) }\n  const handleInfoClose = () => { setOpen(false) }\n\n  const toggleBright = () => {\n    const theme_flag = [...state.config.theme.flags]\n    theme_flag[0] = 1 - theme_flag[0]\n    theme_flag[1] = 1 - theme_flag[1]\n    dispatch({ type: \"config\", content: {\n      theme: {\n        ...state.config.theme,\n        flags: theme_flag\n    }}})\n  }\n  const toggleFav = () => {\n    setFav(!showFav)\n  }\n\n  const [ showFav, setFav ] = React.useState(false)\n\n  return (\n    <main>\n      <Dialog open={open} onClose={handleInfoClose} >\n      <DialogTitle>About</DialogTitle>\n      <DialogContent dividers>\n        <Typography gutterBottom style={{whiteSpace: 'pre-line', fontSize: '1.3rem'}}>\n          Welcome to my awesome roux block trainer.\n        </Typography>\n        <br/>\n\n        <Typography gutterBottom style={{whiteSpace: 'pre-line'}}>\n\n        A bunch of shortcuts: <br/>\n        - Space for the next scramble. <br/>\n        - Enter to reset the virtual cube to current scramble. <br/>\n        - Cstimer style virtual cube control. <br/>\n\n        <br/>\n        </Typography>\n\n        {/* <Typography gutterBottom style={{whiteSpace: 'pre-line'}} variant=\"subtitle2\">\n        Currently supporting: FB+DR, SS, CMLL\n        </Typography> */}\n\n        <Typography gutterBottom style={{whiteSpace: 'pre-line'}} variant=\"body2\">\n\n        Feature requests are most definitely welcome. :)\n        </Typography>\n\n        <Typography gutterBottom variant=\"overline\">\n\n        --onionhoney(Zhouheng Sun)\n        </Typography>\n\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={handleInfoClose}>\n          Got it!\n        </Button>\n      </DialogActions>\n      </Dialog>\n\n      <AppBar color=\"primary\" position=\"static\">\n        <Tabs value={value} onChange={handleChange} scrollButtons=\"on\" variant=\"scrollable\" indicatorColor=\"secondary\" >\n          <Tab onFocus={e => e.target.blur() } label=\"FBDR Trainer\" id='tab0' />\n          <Tab onFocus={e => e.target.blur() } label=\"SSquare Trainer\" id='tab1' />\n          <Tab onFocus={e => e.target.blur() } label=\"FB Trainer\" id='tab2' />\n          <Tab onFocus={e => e.target.blur() } label=\"CMLL Trainer\" id='tab3'/>\n          { ENABLE_DEV ?\n          <Tab onFocus={e => e.target.blur() } label=\"...\" id='tab4'/> : null }\n          <div style={{ flexGrow: 1 }}/>\n\n\n          <Tab onFocus={e => e.target.blur() } id='icon2' onClick={toggleFav} icon={ <BookmarkIcon /> } className={classes.icon} />\n          <Tab onFocus={e => e.target.blur() } id='icon0' onClick={toggleBright} icon={ <Brightness6Icon /> } className={classes.icon} />\n          <Tab onFocus={e => e.target.blur() } id='icon1' onClick={handleInfoOpen} icon={ <InfoIcon /> } className={classes.icon} />\n\n        </Tabs>\n      </AppBar>\n\n      <Box paddingY={2}>\n      <Container maxWidth={showFav ? \"md\" : \"sm\" }>\n\n      {\n      value === 4?\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item md={12} sm={12} xs={12}>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <PanoramaView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      :\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item hidden={!showFav} md={4} sm={4} xs={12} >\n        <FavListView {...{state, dispatch}} />\n        </Grid>\n\n        <Grid item md={showFav ? 8 : 12} sm={showFav ? 8 : 12} xs={12}>\n        <TabPanel value={value} index={0} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={1} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={2} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={3} className={classes.page}>\n          <CmllTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      }\n      </Container></Box>\n\n\n\n    </main>\n  )\n}\nexport default AppView","\nimport { Config, FavCase } from \"./Types\"\nexport const initialFavList : FavCase[] = []\nexport const initialConfig : Config = (() => {\n    let arr_ori_flag = Array(24).fill(0)\n    arr_ori_flag[7] = 1 // YR\n    return {\n        theme: {\n            names: [\"bright\", \"dark\"],\n            flags: [1,0],\n            kind: \"theme\"\n        },\n        cmllSelector: {\n            names: [\"o\", \"s\", \"as\", \"t\", \"l\", \"u\", \"pi\", \"h\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"cmll\",\n        },\n        cmllAufSelector: {\n            names: [\"None\", \"U\", \"U'\", \"U2\"],\n            flags: [1, 1, 1, 1],\n            kind: \"u_auf\"\n        },\n        triggerSelector: {\n            names: [\"RUR'\", \"RU'R'\", \"R'U'R\", \"R'UR\"],\n            flags: [0, 0, 0, 0],\n            kind: \"trigger\"\n        },\n        orientationSelector: {\n            label: \"Color Scheme (U-F)\",\n            names: [\n                \"WG\", \"WB\", \"WO\", \"WR\",\n                \"YG\", \"YB\", \"YO\", \"YR\",\n                \"BW\", \"BY\", \"BO\", \"BR\",\n                \"GW\", \"GY\", \"GO\", \"GR\",\n                \"OW\", \"OY\", \"OB\", \"OG\",\n                \"RW\", \"RY\", \"RB\", \"RG\",\n            ],\n            flags: arr_ori_flag,\n            kind: \"orientation\"\n        },\n        fbdrSelector: {\n            label: \"Position of square\",\n            names: [\"FS at back\", \"FS at front\", \"Both\"],\n            flags: [1, 0, 0],\n            kind: \"fbdr\"\n        },\n        fbOnlySelector: {\n            label: \"Solve w/wo DR\",\n            names: [\"FB+DR\", \"FB Last Pair\"],\n            flags: [1, 0],\n            kind: \"fb-only\"\n        },\n        fbPairSolvedSelector: {\n            label: \"Last Pair\",\n            names: [\"Random\", \"Solved(FS at back only)\"],\n            flags: [1, 0],\n            kind: \"fb-pair-solved\"\n        },\n        ssSelector: {\n            label: \"Position of square\",\n            names: [\"SS at front\", \"SS at back\", \"Both\"],\n            flags: [1, 0, 0],\n            kind: \"ss\"\n        },\n        ssPairOnlySelector: {\n            label: \"Solve w/wo DR\",\n            names: [\"SS\", \"SB First Pair\"],\n            flags: [1, 0],\n            kind: \"sb-pair-only\"\n        },\n        solutionNumSelector: {\n            label: \"Number of solutions\",\n            names: [\"5\", \"10\", \"25\"],\n            flags: [1, 0, 0],\n            kind: \"solution-num\"\n        },\n        fbPieceSolvedSelector: {\n            label: \"Difficulty\",\n            names: [\"Hard over x2y(Scramble only)\", \"Hard\", \"DL Solved\", \"BL Solved\", \"Random\"],\n            flags: [1, 0, 0, 0, 0],\n            kind: \"fb-piece-solved\"\n        }\n    }\n})()\n","import { Config, FavCase } from \"../Types\"\nimport { version } from \"../Version\"\nimport { initialConfig, initialFavList } from \"../Config\"\n\nlet favListManager = function() {\n    const key = \"fav\"\n    let cache : FavCase[] | null = null\n    let getFavList = () => {\n        if (cache) return cache\n        const item = window.localStorage.getItem(key)\n        const item1 : FavCase[] = item ? JSON.parse(item) : initialFavList\n        return item1\n    }\n    let setFavList = (item : FavCase[]) => {\n        window.localStorage.setItem(key, JSON.stringify(item));\n        cache = item\n    }\n    return {\n        getFavList,\n        setFavList\n    }\n}()\n\nlet configManager = function() {\n    const key = \"config\"\n    const versionKey = \"version\"\n    let cache : Config | null = null\n\n    let getConfig = () => {\n        if (cache) {\n            return cache\n        }\n        const item = window.localStorage.getItem(key);\n        const vers = window.localStorage.getItem(versionKey)\n\n        const item1 : Partial<Config> = item ? JSON.parse(item) : initialConfig\n\n        if ( vers !== version) {\n            // version out of date\n            // let's preserve orientation\n            let config = initialConfig\n            if (item1.orientationSelector) {\n                config = {...initialConfig, orientationSelector: item1.orientationSelector}\n            }\n            window.localStorage.setItem(key, JSON.stringify(config));\n            window.localStorage.setItem(versionKey, version)\n\n            return config\n        }\n\n        // In rare cases we want to update new attributes but maintain previous version\n        if ( (item1 === null) || (item1 === undefined) || Object.keys(item1).length === 0) {\n            window.localStorage.setItem(key, JSON.stringify(initialConfig));\n            return initialConfig\n        }\n        // we will also add in unseen fields\n        if (Object.keys(item1).length < Object.keys(initialConfig).length) {\n            const item2 = {...initialConfig, ...item1}\n            window.localStorage.setItem(key, JSON.stringify(item2));\n            return item2\n        }\n        return item1 as Config\n    }\n\n    let setConfig = (partial: Partial<Config>) => {\n        let newConfig : Config = Object.assign(getConfig(), partial)\n        window.localStorage.setItem(key, JSON.stringify(newConfig));\n        cache = newConfig\n    }\n\n    return {\n        getConfig,\n        setConfig\n    }\n}()\n\nlet getConfig = configManager.getConfig\nlet setConfig = configManager.setConfig\nlet getFavList = favListManager.getFavList\nlet setFavList = favListManager.setFavList\n\nexport {\n    getConfig, setConfig, getFavList, setFavList\n}\n","const version = \"0.3.3\"\n\nexport {version}","import { AppState, Mode, Config, FavCase } from \"../Types\";\n/* State Manager\n * \"Passively\" updates localstorage in reduce.\n * Action types\n *  - move: respond to cube move\n *  - replay: replay case\n *  - reactToConfig: respond to changes in config\n */\nexport abstract class AbstractStateM {\n    state: AppState;\n    constructor(state: AppState) {\n        this.state = state;\n    }\n    abstract move(s: string): AppState;\n    abstract reactToConfig(conf: Config): AppState;\n    abstract control(s: string): AppState;\n\n    replay(case_: FavCase): AppState {\n        return this.state;\n    }\n}\n\nexport class StateFactory {\n    static create = (state: AppState) => {\n        let filler = ( (()=>1) as unknown ) as (state: AppState) => AbstractStateM;\n        return filler(state);\n    }\n}","// source: \"https://sites.google.com/view/kianroux/cmll\" and https://github.com/AshleyF/briefcubing/blob/master/algs.js\n\n//type oll_case = \"o\"|\"h\"|\"pi\"|\"u\"|\"t\"|\"s\"|\"as\"|\"l\"\nimport { Selector } from \"../lib/Selector\";\nimport { rand_choice } from \"./Math\";\n\nconst get_active_names = (sel : Selector) => {\n    let res = []\n    for (let i = 0; i < sel.names.length; i++) {\n        if (sel.flags[i]) {\n            res.push(sel.names[i]);\n        }\n    }\n    return res\n}\n\nexport type AlgDesc = {\n    id: string,\n    alg: string,\n    alt_algs?: string[],\n    setup?: string,\n    kind: string\n}\n\nconst empty_alg : AlgDesc = {\n    id: \"empty\",\n    alg: \"\",\n    kind: \"any\"\n}\n\nconst cmll_algs : AlgDesc[] = [\n    { id: \"o_adjacent_swap\", alg: \"R U R' F' R U R' U' R' F R2 U' R'\", kind: \"cmll\" },\n    { id: \"o_diagonal_swap\", alg: \"F R U' R' U' R U R' F' R U R' U' R' F R F'\", kind: \"cmll\" },\n    { id: \"h_columns\", alg: \"R U R' U R U' R' U R U2 R'\", kind: \"cmll\" },\n    { id: \"h_rows\", alg: \"F R U R' U' R U R' U' R U R' U' F'\", kind: \"cmll\" },\n    { id: \"h_column\", alg: \"U R U2' R2' F R F' U2 R' F R F'\", kind: \"cmll\" },\n    { id: \"h_row\", alg: \"r U' r2' D' r U' r' D r2 U r'\", kind: \"cmll\" },\n    { id: \"pi_right_bar\", alg: \"F R U R' U' R U R' U' F'\", kind: \"cmll\" },\n    { id: \"pi_back_slash\", alg: \"U F R' F' R U2 R U' R' U R U2' R'\", kind: \"cmll\" },\n    { id: \"pi_x_checkerboard\", alg: \"U' R' F R U F U' R U R' U' F'\", kind: \"cmll\" },\n    { id: \"pi_forward_slash\", alg: \"R U2 R' U' R U R' U2' R' F R F'\", kind: \"cmll\" },\n    { id: \"pi_columns\", alg: \"U' r U' r2' D' r U r' D r2 U r'\", kind: \"cmll\" },\n    { id: \"pi_left_bar\", alg: \"U' R' U' R' F R F' R U' R' U2 R\", kind: \"cmll\" },\n    { id: \"u_forward_slash\", alg: \"U2 R2 D R' U2 R D' R' U2 R'\", kind: \"cmll\" },\n    { id: \"u_back_slash\", alg: \"R2' D' R U2 R' D R U2 R\", kind: \"cmll\" },\n    { id: \"u_front_row\", alg: \"R2' F U' F U F2 R2 U' R' F R\", kind: \"cmll\" },\n    { id: \"u_rows\", alg: \"U' F R2 D R' U R D' R2' U' F'\", kind: \"cmll\" },\n    { id: \"u_x_checkerboard\", alg: \"U2 r U' r' U r' D' r U' r' D r\", kind: \"cmll\" },\n    { id: \"u_back_row\", alg: \"U' F R U R' U' F'\", kind: \"cmll\" },\n    { id: \"t_left_bar\", alg: \"U' R U R' U' R' F R F'\", kind: \"cmll\" },\n    { id: \"t_right_bar\", alg: \"U L' U' L U L F' L' F\", kind: \"cmll\" },\n    { id: \"t_rows\", alg: \"F R' F R2 U' R' U' R U R' F2\", kind: \"cmll\" },\n    { id: \"t_front_row\", alg: \"r' U r U2' R2' F R F' R\", kind: \"cmll\" },\n    { id: \"t_back_row\", alg: \"r' D' r U r' D r U' r U r'\", kind: \"cmll\" },\n    { id: \"t_columns\", alg: \"U2 r2' D' r U r' D r2 U' r' U' r\", kind: \"cmll\" },\n    { id: \"s_left_bar\", alg: \"U R U R' U R U2 R'\", kind: \"cmll\" },\n    { id: \"s_x_checkerboard\", alg: \"U L' U2 L U2' L F' L' F\", kind: \"cmll\" },\n    { id: \"s_forward_slash\", alg: \"U F R' F' R U2 R U2' R'\", kind: \"cmll\" },\n    { id: \"s_Columns\", alg: \"U2 R' U' R U' R2' F' R U R U' R' F U2' R\", kind: \"cmll\" },\n    { id: \"s_right_bar\", alg: \"U' R U R' U R' F R F' R U2' R'\", kind: \"cmll\" },\n    { id: \"s_back_slash\", alg: \"U R U' L' U R' U' L\", kind: \"cmll\" },\n    { id: \"as_right_bar\", alg: \"U R' U' R U' R' U2' R\", kind: \"cmll\" },\n    { id: \"as_columns\", alg: \"U' R2 D R' U R D' R' U R' U' R U' R'\", kind: \"cmll\" },\n    { id: \"as_back_slash\", alg: \"U' F' L F L' U2' L' U2 L\", kind: \"cmll\" },\n    { id: \"as_x_checkerboard\", alg: \"U' R U2' R' U2 R' F R F'\", kind: \"cmll\" },\n    { id: \"as_forward_slash\", alg: \"U' L' U R U' L U R'\", kind: \"cmll\" },\n    { id: \"as_left_bar\", alg: \"U R U2' R' F R' F' R U' R U' R'\", kind: \"cmll\" },\n    { id: \"l_mirror\", alg: \"F R U' R' U' R U R' F'\", kind: \"cmll\" },\n    { id: \"l_inverse\", alg: \"F R' F' R U R U' R'\", kind: \"cmll\" },\n    { id: \"l_pure\", alg: \"R U2 R' U' R U R' U' R U R' U' R U' R'\", kind: \"cmll\" },\n    { id: \"l_front_commutator\", alg: \"R U2 R D R' U2 R D' R2'\", kind: \"cmll\" },\n    { id: \"l_diag\", alg: \"R' U' R U R' F' R U R' U' R' F R2\", kind: \"cmll\" },\n    { id: \"l_back_commutator\", alg: \"U R' U2 R' D' R U2 R' D R2\", kind: \"cmll\" }\n]\n\nlet trigger_algs: AlgDesc[] = [\n    { id: \"RUR'_1\", alg: \"R U R'\", kind:\"trigger\"},\n    { id: \"RUR'_2\", alg: \"r U r'\", kind:\"trigger\"},\n    { id: \"RU'R'_1\", alg: \"R U' R'\", kind:\"trigger\"},\n    { id: \"RU'R'_2\", alg: \"r U' r'\", kind:\"trigger\"},\n    { id: \"R'U'R_1\", alg: \"R' U' R\", kind:\"trigger\"},\n    { id: \"R'U'R_2\", alg: \"r' U' r\", kind:\"trigger\"},\n    { id: \"R'UR_1\", alg: \"R' U R\", kind:\"trigger\"},\n    { id: \"R'UR_2\", alg: \"r' U r\", kind:\"trigger\"}\n]\n\nlet u_auf_algs: AlgDesc[] = [\n    { id: \"U\", alg: \"U\", kind: \"u_auf\"},\n    { id: \"U'\", alg: \"U'\", kind: \"u_auf\"},\n    { id: \"U2\", alg: \"U2\", kind: \"u_auf\"},\n    { id: \"None\", alg: \"\", kind: \"u_auf\"},\n]\n\nlet ori_algs: AlgDesc[] =\n    [\"WG\", \"WB\", \"WO\", \"WR\",\n    \"YG\", \"YB\", \"YO\", \"YR\",\n    \"BW\", \"BY\", \"BO\", \"BR\",\n    \"GW\", \"GY\", \"GO\", \"GR\",\n    \"OW\", \"OY\", \"OB\", \"OG\",\n    \"RW\", \"RY\", \"RB\", \"RG\"].map(s => ({id: s, alg: \"\", kind:\"orientation\" }))\n\nlet lookup_algset = (kind : string) => {\n    switch (kind) {\n        case \"cmll\": return cmll_algs;\n        case \"trigger\": return trigger_algs;\n        case \"orientation\": return ori_algs;\n        case \"u_auf\": return u_auf_algs;\n        default: return []\n    }\n}\n\nlet alg_generator = (selector: Selector) => {\n    let algSet = lookup_algset(selector.kind)\n    let lookup = new Set(get_active_names(selector))\n    let get_prefix = (id: string) => {\n        return id.split(\"_\", 1)[0]\n    }\n    let algs : AlgDesc[] = (() => {\n        return algSet.filter(alg => {\n            let prefix = get_prefix(alg.id);\n            return lookup.has(prefix)\n        })\n    })()\n\n    let next = () => {\n        if (algs.length === 0) {\n            return empty_alg\n        } else {\n            return rand_choice(algs)\n        }\n    }\n    return next\n}\n\nexport { alg_generator }","import { CubieCube, Move } from './CubeLib';\nimport { CubieT, MoveT } from './Defs';\nexport type PrunerConfig = {\n    size: number,\n    encode: (cube : CubieT) => number,\n    solved_states: CubieT[],\n    max_depth: number,\n    moveset: MoveT[]\n}\nexport type PrunerT = {\n    init: () => void,\n    query: (c : CubieT) => number,\n    equal: (c1 : CubieT, c2: CubieT) => boolean,\n    encode: (c : CubieT) => number\n}\n\nexport function Pruner(config: PrunerConfig) : PrunerT {\n    let dist: Uint8Array;\n    let { size, encode, solved_states, max_depth, moveset} = config\n    let initialized = false\n    function init() {\n        if (initialized) return\n        initialized = true\n        dist = new Uint8Array(size).fill(255)\n        for (let state of solved_states) {\n            dist[encode(state)] = 0\n        }\n        let frontier = [...solved_states]\n        let total_expanded = frontier.length\n        for (let i = 0; i < max_depth; i++) {\n            console.log(\"pruner: expanding depth \", i)\n            let new_frontier = []\n            for (let state of frontier) {\n                for (let move of moveset) {\n                    let newState = CubieCube.apply(state, move)\n                    let idx = encode(newState)\n                    if (dist[idx] === 255) {\n                        dist[idx] = i + 1;\n                        new_frontier.push(newState)\n                    }\n                }\n            }\n            frontier = new_frontier\n            total_expanded += frontier.length\n        }\n        console.log(\"Initialization complete. size = \", total_expanded)\n    }\n    function query(cube: CubieT) {\n        let d = dist[encode(cube)]\n        if (d === 255) return max_depth + 1;\n        return d\n    }\n    function equal(cube1: CubieT, cube2: CubieT) {\n        return encode(cube1) === encode(cube2)\n    }\n    return  {\n        init,\n        query,\n        equal,\n        encode\n    }\n}\n\n\n\n\nlet fbdrPrunerConfig : PrunerConfig = function() {\n    const esize = Math.pow(24, 4)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n\n    function encode(cube:CubieT) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        if (cube.cp[i] === 4) {\n          c1 = i * 3 + cube.co[i]\n        } else if (cube.cp[i] === 5) {\n          c2 = i * 3 + cube.co[i];\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0, e4 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n              case 7 : e4 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24 * 24) + e2 * (24 * 24) + e3 * 24 + e4\n      return enc_c + 24 * 24 * enc_e\n    }\n\n    const moves = [[]] //, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")]\n    const solved_states = moves.map( (move : MoveT[]) => CubieCube.apply(CubieCube.id, move))\n\n    const max_depth = 4\n    const moveset : MoveT[] = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\n\nlet fbPrunerConfig : PrunerConfig = function() {\n    const esize = Math.pow(24, 3)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize * 6\n\n    function encode(cube:CubieT) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        if (cube.cp[i] === 4) {\n          c1 = i * 3 + cube.co[i]\n        } else if (cube.cp[i] === 5) {\n          c2 = i * 3 + cube.co[i];\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24 ) + e2 * (24 ) + e3\n      const enc_ce = enc_c + 24 * 24 * enc_e\n\n      let t1 = 0\n      for (let i = 0; i < 5; i++) {\n          if (cube.tp[i] === 4) { t1 = i }\n      }\n      const enc = enc_ce * 6 + t1\n      return enc\n    }\n\n    const moves = [[]] //, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")]\n    const solved_states = moves.map( (move : MoveT[]) => CubieCube.apply(CubieCube.id, move))\n\n    const max_depth = 4\n    const moveset : MoveT[] = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"] /* \"E\", \"E'\", \"E2\", \"S\", \"S'\", \"S2\" ]*/\n    .map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\n\n\n\nlet ssPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 3)\n\n    const c1 = is_front ? 7 : 6;\n    const e1 = is_front ? 11 : 10\n    const e2 = 7\n    function encode(cube:CubieT) {\n      let v = [0 ,0, 0]\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v[0] = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n          if (cube.ep[i] === e1) v[1] = i * 2 + cube.eo[i];\n          else if (cube.ep[i] === e2) v[2] = i * 2 + cube.eo[i]\n      }\n      return v[0] + v[1] * 24 + v[2] * 24 * 24\n    }\n\n    const moves = [[]] //, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")]\n    const solved_states = moves.map( (move : MoveT[]) => CubieCube.apply(CubieCube.id, move))\n\n    const max_depth = 5\n    const moveset : MoveT[] = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n        \"r\", \"r'\", \"r2\", \"M\", \"M'\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\n\nexport { fbdrPrunerConfig, ssPrunerConfig, fbPrunerConfig }","import {initialize, solve as min2phaseSolve, Min2PhaseCube} from \"./min2phase.js\"\nimport { CubieT } from \"../Defs.js\";\n\nexport {initialize}\n\nfunction toMin2Phase(state: CubieT): Min2PhaseCube {\n  // Note: this is its own inverse.\n  // const conjugate = {\n  //   EDGE: { permutation: [ 1, 0, 3, 2, 5, 4, 7, 6, 8, 9, 11, 10 ],\n  //           orientation: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CORNER: { permutation: [ 0, 3, 2, 1, 4, 5, 6, 7 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CENTER: { permutation: [ 0, 1, 2, 3, 4, 5 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0 ] }\n  // };\n  // const pseudo = Combine(def, Combine(def, conjugate, Invert(def, state)), conjugate);\n\n  return {\n    cp: state.cp,\n    co: state.co,\n    ep: state.ep,\n    eo: state.eo\n  }\n}\n\nexport function solve(state: CubieT): string {\n  return min2phaseSolve(toMin2Phase(state));\n}\n","import { CubieCube, CubeUtil, Move } from './CubeLib';\nimport { CubieT, MoveT } from './Defs';\nimport { arrayEqual } from './Math';\n\nimport { Pruner, PrunerT, fbdrPrunerConfig, ssPrunerConfig, fbPrunerConfig } from './Pruner';\n\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\n\n\ntype SolverConfig = {\n    is_solved: (cube : CubieT) => boolean,\n    moveset: MoveT[],\n    pruners: PrunerT[],\n}\n\ntype Accumulator = {\n    solutions: MoveT[][],\n    capacity: number\n}\n\nexport type SolverT = {\n    solve: (cube : CubieT, l : number, r : number, c : number) => MoveT[][],\n    is_solved: (cube : CubieT) => boolean,\n    getPruner: () => PrunerT[]\n}\nfunction Solver(config: SolverConfig) : SolverT{\n    const MAX_STATE_COUNT = 1000000\n    let { moveset, is_solved, pruners } = config\n    let state_count = 0, prune_count = 0;\n    let accum : Accumulator\n    let max_depth : number\n    let min_depth : number\n\n    enum SState {\n        CONTINUE,\n        STOP\n    };\n\n    function solve_depth(cube: CubieT, min_depth_: number, max_depth_: number, accum_: Accumulator) {\n        accum = accum_\n        max_depth = max_depth_\n        min_depth = min_depth_\n        state_count = 0\n        prune_count = 0\n        search(cube, 0, [])\n        return accum\n    }\n\n    let moveTable = Object.create({})\n    function prepareNextMoveTable() {\n        function getAvailableMove(name : string) {\n            switch (name[0]) {\n                case \"U\": return moveset.filter(k => k.name[0] !== \"U\");\n                case \"D\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\");\n                case \"R\": {\n                    let base = moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"r\");\n                    if (name === \"R\") return base.filter(k => k.name !== \"M'\")\n                    if (name === \"R'\") return base.filter(k => k.name !== \"M\")\n                    if (name === \"R2\") return base.filter(k => k.name !== \"M2\")\n                    return base\n                }\n                case \"L\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"r\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"M\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"F\": return moveset.filter(k => k.name[0] !== \"F\");\n                case \"B\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\");\n\n                case \"E\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\" && k.name[0] !== \"E\");\n                case \"S\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\" && k.name[0] !== \"S\");\n            }\n        }\n        for (let move of moveset) {\n            moveTable[move.name] = getAvailableMove(move.name)\n        }\n    }\n    prepareNextMoveTable()\n\n    function expand(cube: CubieT, depth: number, solution: MoveT[]) : SState{\n        const availableMoves = solution.length > 0 ? moveTable[solution[solution.length - 1].name] : moveset\n        const seen_encodings = new Set()\n        seen_encodings.add(pruners[0].encode(cube))\n        for (let move of availableMoves) {\n            let new_cube = CubieCube.apply(cube, move)\n            let enc = pruners[0].encode(new_cube)\n            let redundant = seen_encodings.has(enc)\n            if (!redundant) {\n                seen_encodings.add(enc)\n                solution.push(move);\n                let st : SState = search(new_cube, depth + 1, solution);\n                solution.pop();\n                if (st === SState.STOP) {\n                    return SState.STOP\n                }\n            }\n        }\n        return SState.CONTINUE\n    }\n\n    function try_push(solution: MoveT[], depth: number) {\n        if (depth < min_depth) return SState.CONTINUE\n        if (accum.solutions.length < accum.capacity) {\n            let flag = true\n            for (let sol of accum.solutions) {\n                if (arrayEqual(sol, solution)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                accum.solutions.push([...solution])\n            }\n        }\n\n        if (accum.solutions.length === accum.capacity) {\n            return SState.STOP\n        } else {\n            return SState.CONTINUE\n        }\n    }\n\n    function search(cube: CubieT, depth: number, solution: MoveT[]) : SState {\n        state_count++;\n        if (state_count > MAX_STATE_COUNT) {\n            return SState.STOP\n        }\n        if (is_solved(cube)) {\n            return try_push(solution, depth)\n        } else {\n            if (depth >= max_depth) return SState.CONTINUE;\n            let d = pruners[0].query(cube)\n            if (d + depth > max_depth) {\n                prune_count++;\n                return SState.CONTINUE\n            } else {\n                return expand(cube, depth, solution)\n            }\n        }\n    }\n\n    function solve(cube: CubieT, depth_l: number, depth_r: number, capacity: number) {\n        let accum : Accumulator = {\n            solutions: [],\n            capacity\n        }\n        for (let i = depth_l; i <= depth_r; i++) {\n            accum = solve_depth(cube, depth_l, i, accum)\n            if (accum.solutions.length === accum.capacity) {\n                break;\n            }\n        }\n        console.log(`Number of states = ${state_count}, pruned = ${prune_count}`);\n        return accum.solutions\n    }\n\n    function getPruner() {\n        return pruners\n    }\n    return { solve, is_solved, getPruner }\n};\n\nlet FbdrSolver = function() {\n    let prunerConfig = fbdrPrunerConfig\n    let pruner = Pruner(prunerConfig)\n    pruner.init()\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    function is_solved(cube: CubieT) {\n        return pruner.query(cube) === 0;\n    }\n\n    let config = {\n        is_solved,\n        moveset: prunerConfig.moveset,\n        pruners: [pruner],\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nlet FbSolver = function() {\n    let prunerConfig = fbPrunerConfig\n    let pruner = Pruner(prunerConfig)\n    pruner.init()\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    function is_solved(cube: CubieT) {\n        return pruner.query(cube) === 0;\n    }\n\n    let config = {\n        is_solved,\n        moveset: prunerConfig.moveset,\n        pruners: [pruner],\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nlet SsSolver = function(is_front: boolean) {\n    let prunerConfig = ssPrunerConfig(is_front)\n    let pruner = Pruner(prunerConfig)\n    pruner.init()\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    function is_solved(cube: CubieT) {\n        return pruner.query(cube) === 0;\n    }\n\n    let config = {\n        is_solved,\n        moveset: prunerConfig.moveset,\n        pruners: [pruner],\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nlet Min2PhaseSolver : () => SolverT = function() {\n    // polyfill for min2phase\n\n    min2phase_init();\n    function solve(cube : CubieT, l : number, r : number, c : number) {\n        console.assert(arrayEqual(cube.tp, CubieCube.id.tp))\n        const transformed_cube = CubieCube.to_cstimer_cube(cube)\n        console.assert( CubieCube.is_solveable(transformed_cube), \"Cube must be solveable\")\n        let solution = min2phase_solve(transformed_cube);\n        return [Move.parse(solution)]\n    }\n    function is_solved(cube: CubieT) {\n        return true\n    }\n    function getPruner() {\n        return []\n    }\n    return {\n        solve,\n        is_solved,\n        getPruner\n    }\n}\n\nexport { FbdrSolver, FbSolver, SsSolver, Min2PhaseSolver }","import { FbdrSolver, SolverT, SsSolver, FbSolver, Min2PhaseSolver } from './Solver';\n\nlet CachedSolver = function() {\n    let cache : Map<string, SolverT> = new Map()\n    function get(s: string) {\n        if (!cache.has(s)) {\n            switch (s) {\n                case \"fbdr\": cache.set(s, FbdrSolver()); break\n                case \"fb\": cache.set(s, FbSolver()); break\n                case \"ss-front\": cache.set(s, SsSolver(true)); break\n                case \"ss-back\": cache.set(s, SsSolver(false)); break\n                case \"min2phase\": cache.set(s, Min2PhaseSolver()); break\n            }\n        }\n        return cache.get(s) as SolverT\n    }\n    return {get}\n}()\n\nexport {CachedSolver}","import { AppState, Config, FavCase } from \"../Types\";\nimport { alg_generator, AlgDesc } from \"../lib/Algs\";\nimport { MoveT, CubieT, Face, Typ, FBpairPos } from \"../lib/Defs\";\nimport { CubieCube, Move, CubeUtil, Mask, FaceletCube } from '../lib/CubeLib';\nimport { getActiveName, getActiveNames } from '../lib/Selector';\nimport { CachedSolver } from \"../lib/CachedSolver\";\nimport { rand_choice, arrayEqual } from '../lib/Math';\nimport { AbstractStateM, StateFactory } from \"./AbstractStateM\";\n\nabstract class BlockTrainerStateM extends AbstractStateM {\n    abstract solverL: number;\n    abstract solverR: number;\n    abstract getRandom(): [CubieT, string];\n\n    _solve_min2phase(cube: CubieT) : AppState  {\n\n        const state = this.state\n        const ori = alg_generator(state.config.orientationSelector)().id;\n        let algdesc: AlgDesc = {\n            id: `min2phase`,\n            alg: \"\",\n            alt_algs: [],\n            setup: Move.to_string( CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0] ),\n            kind: `min2phase`\n        };\n        return {\n            ...state,\n            cube: {\n                ...state.cube,\n                state: cube,\n                ori\n            },\n            case: {\n                state: cube,\n                desc: [algdesc]\n            }\n        };\n    }\n    _solve(cube: CubieT, solverName: string, updateSolutionOnly?: boolean) {\n        if (solverName === \"min2phase\") {\n            if (!updateSolutionOnly)\n                return this._solve_min2phase(cube)\n            return this.state\n        }\n        const solver = CachedSolver.get(solverName);\n        const state = this.state;\n        const scramble = solver.solve(cube, this.solverL, this.solverR, 1)[0];\n        //console.log(cube, solverName, scramble, this.solverL, this.solverR)\n        const magnification = 4;\n        const solutionCap = +(getActiveName(state.config.solutionNumSelector) || 5);\n        // not using solutionCap for now\n        const setup = Move.to_string(Move.inv(scramble));\n        let solution = solver.solve(cube, 0, this.solverR, solutionCap * magnification);\n        solution.sort((a, b) => Move.evaluate(a) - Move.evaluate(b));\n        const alg = Move.to_string(solution[0]);\n        const alt_algs = solution.slice(1, solutionCap).map((s: MoveT[]) => Move.to_string(s));\n        const ori = (updateSolutionOnly) ? this.state.cube.ori : alg_generator(state.config.orientationSelector)().id;\n        let algdesc: AlgDesc = {\n            id: `${solverName}`,\n            alg,\n            alt_algs,\n            setup,\n            kind: `${solverName}`\n        };\n        const name = updateSolutionOnly ? this.state.name : \"hiding\";\n        // console.log(\"algdesc\", algdesc)\n        return {\n            ...state,\n            name: name,\n            cube: {\n                ...state.cube,\n                state: cube,\n                ori\n            },\n            case: {\n                state: cube,\n                desc: [algdesc]\n            }\n        };\n    }\n    _updateCase(): AppState {\n        const state = this.state;\n        const [cube, solverName] = this.getRandom();\n        return this._solve(cube, solverName);\n    }\n    _updateCap(): AppState {\n        const state = this.state;\n        if (state.case.desc.length === 0) {\n            return state;\n        }\n        const [cube, solverName] = [state.cube.state, state.case.desc[0]!.kind];\n        return this._solve(cube, solverName, true);\n    }\n    replay(case_: FavCase): AppState {\n        const cube = CubieCube.from_move(Move.parse(case_.setup));\n        const solverName = case_.solver;\n        const state1 = this._solve(cube, solverName);\n        return {\n            ...state1,\n            mode: case_.mode\n        };\n    }\n    control(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            if (state.name === \"revealed\") {\n                return this._updateCase();\n            }\n            else {\n                return {\n                    ...state,\n                    name: \"revealed\"\n                };\n            }\n        }\n        else if (s === \"#enter\") {\n            return {\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                }\n            };\n        }\n        else {\n            return state;\n        }\n    }\n    move(movestr: string): AppState {\n        let state = this.state;\n        let move = Move.parse(movestr)[0];\n        let cube = CubieCube.apply(state.cube.state, move);\n        return {\n            ...state,\n            cube: {\n                ...state.cube,\n                state: cube\n            }\n        };\n    }\n    reactToConfig(conf: Config): AppState {\n        // see if solution cap changed\n        let changed = !arrayEqual(this.state.config.solutionNumSelector.flags, conf.solutionNumSelector.flags);\n        if (changed) {\n            return (StateFactory.create({ ...this.state, config: conf }) as BlockTrainerStateM)._updateCap();\n        }\n        else {\n            return this.state;\n        }\n    }\n}\nconst m_premove = [[], Move.all[\"M\"], Move.all[\"M'\"], Move.all[\"M2\"]];\nexport class FbdrStateM extends BlockTrainerStateM {\n    solverL: number;\n    solverR: number;\n    _get_pair_solved_front() {\n        let [cp, co, ep, eo] = rand_choice(FBpairPos);\n        //let mask = Mask.copy(Mask.fs_front_mask)\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 8; i++) {\n            if (cube.cp[i] === 4) {\n                cube.cp[i] = cube.cp[cp];\n                cube.co[i] = cube.co[cp];\n                cube.cp[cp] = 4;\n                cube.co[cp] = co;\n            }\n        }\n        for (let i = 0; i < 12; i++) {\n            if (cube.ep[i] === 8) {\n                cube.ep[i] = cube.ep[ep];\n                cube.eo[i] = cube.eo[ep];\n                cube.ep[ep] = 8;\n                cube.eo[ep] = eo;\n            }\n        }\n        return cube;\n    }\n    _get_random_fs_back() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    _get_random_fs_front() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    getRandom(): [CubieT, string] {\n        const fbOnly = getActiveName(this.state.config.fbOnlySelector) === \"FB Last Pair\";\n        const pairSolved = getActiveName(this.state.config.fbPairSolvedSelector) !== \"Random\";\n        const solverName = fbOnly ? \"fb\" : \"fbdr\";\n        let active = getActiveNames(this.state.config.fbdrSelector)[0];\n        //console.log(\"active\", active)\n        //[\"FP at front\", \"FP at back\", \"Both\"],\n        if (active === \"FS at back\") {\n            if (pairSolved) {\n                return [this._get_pair_solved_front(), solverName];\n            }\n            else\n                return [this._get_random_fs_back(), solverName];\n        }\n        else if (active === \"FS at front\") {\n            return [this._get_random_fs_front(), solverName];\n        }\n        else\n            return [rand_choice([this._get_random_fs_back, this._get_random_fs_front])(),\n                solverName];\n    }\n    constructor(state: AppState) {\n        super(state);\n        this.solverL = 8;\n        this.solverR = 10;\n    }\n}\nexport class SsStateM extends BlockTrainerStateM {\n    solverL: number;\n    solverR: number;\n    _get_random_fb() {\n        let active = getActiveName(this.state.config.ssPairOnlySelector);\n        let mask = (active === \"SS\") ? Mask.fb_mask : Mask.fbdr_mask;\n        let cube = CubeUtil.get_random_with_mask(mask);\n        return cube;\n    }\n    getRandom(): [CubieT, string] {\n        let active = getActiveNames(this.state.config.ssSelector)[0];\n        //[\"FP at front\", \"FP at back\", \"Both\"],\n        let cube = this._get_random_fb();\n        let solver;\n        if (active === \"SS at front\") {\n            solver = \"ss-front\";\n        }\n        else if (active === \"SS at back\") {\n            solver = \"ss-back\";\n        }\n        else {\n            solver = rand_choice([\"ss-back\", \"ss-front\"]);\n        }\n        return [cube, solver];\n    }\n    constructor(state: AppState) {\n        super(state);\n        this.solverL = 9;\n        this.solverR = 10;\n    }\n}\nexport class FbStateM extends BlockTrainerStateM {\n    solverL: number;\n    solverR: number;\n    _find_center_connected_edges(cube: CubieT, is_l_only: boolean) {\n        let centers = is_l_only ? [ Face.L ] : [ Face.F, Face.B, Face.L, Face.R]\n        let edges = CubeUtil.stickers.filter(c => c[2] === Typ.E && centers.includes(c[3])\n            && FaceletCube.color_of_sticker(cube, [c[0], c[1], c[2]]) === c[3]);\n        return edges;\n    }\n    _get_random(): [CubieT, string] {\n        let active = getActiveName(this.state.config.fbPieceSolvedSelector);\n        let mask;\n        if (active === \"Random\")\n            mask = Mask.empty_mask;\n        else if (active === \"DL Solved\")\n            mask = Mask.dl_solved_mask;\n        else if (active === \"DB Solved\")\n            mask = Mask.db_solved_mask;\n        else if (active === \"Zhouheng Variant\")\n            mask = Mask.zhouheng_mask;\n        else\n            mask = Mask.empty_mask;\n        let cube = CubeUtil.get_random_with_mask(mask);\n\n        let solver = \"fb\";\n        if (active === \"Zhouheng Variant\") {\n            // B F'\n            cube = CubieCube.apply(cube, Move.parse(\"B F'\"));\n            solver = \"fbdr\";\n        }\n        const g_hard = \"Hard over x2y(Scramble only)\"\n        if (active === g_hard) {\n            solver = \"min2phase\";\n        }\n        if (active !== \"HARD\" && active !== g_hard) {\n            return [cube, solver];\n        }\n        let n = 0;\n        let is_l_only = active === \"HARD\"\n        while (true) {\n            let pairs = CubeUtil.find_pairs(cube);\n            let cc_edges = this._find_center_connected_edges(cube, is_l_only);\n            n++;\n            if (pairs.length === 0 && cc_edges.length === 0) {\n                console.log(\"Successful after \" + n + \" tries \");\n                return [cube, solver];\n            }\n            cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        }\n    }\n    getRandom(): [CubieT, string] {\n        let [cube, solver] = this._get_random();\n        return [cube, solver];\n    }\n    constructor(state: AppState) {\n        super(state);\n        this.solverL = 9;\n        this.solverR = 11;\n    }\n}\n","import { AppState, StateT, Config } from \"../Types\";\nimport { alg_generator, AlgDesc } from \"../lib/Algs\";\nimport { MoveT, CubieT } from \"../lib/Defs\";\nimport { CubieCube, Move, CubeUtil, FaceletCube } from '../lib/CubeLib';\nimport { AbstractStateM } from \"./AbstractStateM\";\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\nimport { arrayEqual } from \"../lib/Math\";\n\nexport abstract class CmllStateM extends AbstractStateM {\n    _get2PhaseSolution(cube: CubieT): AlgDesc {\n        // Aha! f = g(b) but you modified b later, and f won't update!\n\n        let m2_away = false\n        if (cube.tp[0] !== 0) {\n            m2_away = true\n            cube = CubieCube.apply_str(cube, \"M2\")\n        }\n        console.assert(arrayEqual(cube.tp, CubieCube.id.tp))\n\n        const transformed_cube = CubieCube.to_cstimer_cube(cube)\n        console.assert( CubieCube.is_solveable(transformed_cube), \"Cube must be solveable\")\n        min2phase_init();\n        let  solution = min2phase_solve(transformed_cube);\n        if (m2_away) {\n            solution += \" M2\"\n        }\n        //const alg = Move.to_string(Move.inv(Move.parse(solution)));\n        //const solver = Cube.initSolver();\n        //const ccube = Cube.fromString(fcube_str);\n        //const solution = Move.parse(ccube.solve())\n        const algDesc: AlgDesc = ({\n            id: `scramble`,\n            alg: solution,\n            kind: 'scramble'\n        });\n        console.log(solution);\n        return algDesc;\n    }\n    _generateCase(): AppState {\n        let state = this.state;\n        let { config } = state;\n        let { cmllSelector, triggerSelector, cmllAufSelector, orientationSelector } = config;\n        let generator = alg_generator(cmllSelector);\n        let trig_generator = alg_generator(triggerSelector);\n        let u_auf_generator = alg_generator(cmllAufSelector);\n        let ori_generator = alg_generator(orientationSelector);\n        let trigger_alg: AlgDesc = trig_generator();\n        let cmll_alg: AlgDesc = generator();\n        let u_auf_alg: AlgDesc = u_auf_generator();\n        let alg_str = trigger_alg.alg + \" \" + u_auf_alg.alg + \" \" + cmll_alg.alg;\n        let moves: MoveT[] = Move.inv(Move.parse(alg_str));\n        //console.log(\"moves\", Move.to_string(moves))\n\n        let lse_cube: CubieT\n        while (true) {\n            let cube = CubeUtil.get_random_lse();\n            lse_cube = CubieCube.apply(cube, moves);\n            if (CubieCube.is_solveable(lse_cube)) {\n                break;\n            }\n        }\n        let solution = this._get2PhaseSolution(lse_cube);\n        // ori based on ...?\n        let ori: string = ori_generator().id;\n        //console.log(\"current ori selector's ori \", ori)\n        return ({\n            ...state,\n            name: \"solving\",\n            cube: {\n                state: lse_cube,\n                ori,\n                history: [],\n            },\n            case: {\n                state: lse_cube,\n                desc: [trigger_alg, u_auf_alg, cmll_alg, solution]\n            },\n        });\n    }\n    control(s: string): AppState {\n        let state = this.state;\n        let { config } = state;\n        let { cmllSelector, triggerSelector, cmllAufSelector, orientationSelector } = config;\n        let generator = alg_generator(cmllSelector);\n        let trig_generator = alg_generator(triggerSelector);\n        let u_auf_generator = alg_generator(cmllAufSelector);\n        let ori_generator = alg_generator(orientationSelector);\n        if (s === \"#space\") {\n            // SCRAMBLE\n            // enter cleared solving state based on selection\n            return this._generateCase();\n        }\n        else if (s === \"#enter\") {\n            // REDO\n            return ({\n                ...state,\n                name: \"solving\",\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                    history: []\n                },\n                case: {\n                    ...state.case,\n                }\n            });\n        }\n        else {\n            throw new Error(\"Unrecognized control code\");\n        }\n    }\n    reactToConfig(conf: Config): AppState {\n        return this.state;\n    }\n}\nexport class SolvingStateM extends CmllStateM {\n    move(move: string): AppState {\n        let state = this.state;\n        let moves = Move.parse(move);\n        if (moves.length > 0) {\n            let move = moves[0];\n            let cube = CubieCube.apply(state.cube.state, move);\n            let cmll_solved = CubeUtil.is_cmll_solved(cube);\n            let newState: StateT = cmll_solved ? \"solved\" : \"solving\";\n            return ({\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: CubieCube.apply(state.cube.state, move),\n                    history: [...state.cube.history, move],\n                },\n                name: newState\n            });\n        }\n        else {\n            // Nothing to apply\n            return state;\n        }\n    }\n}\nexport class SolvedStateM extends CmllStateM {\n    move(move: string): AppState {\n        return this.state;\n    }\n}\n","import { AbstractStateM, StateFactory} from './AbstractStateM';\nimport { AppState, Mode } from '../Types';\nimport { FbdrStateM, SsStateM, FbStateM} from './BlockTrainerStateM';\nimport { SolvingStateM, SolvedStateM } from './CmllStateM';\n\nStateFactory.create = function(state: AppState) {\n        let mode: Mode = state.mode;\n        switch (mode) {\n            case \"fbdr\":\n                return new FbdrStateM(state);\n            case \"ss\":\n                return new SsStateM(state);\n            case \"fb\":\n                return new FbStateM(state);\n            case \"cmll\": {\n                switch (state.name) {\n                    case \"solving\": return new SolvingStateM(state);\n                    case \"solved\": return new SolvedStateM(state);\n                    default: throw new Error(\"impossible\");\n                }\n            }\n            case \"experimental\":\n                return new FbStateM(state);\n        }\n        ;\n    }\n\nexport { StateFactory };","\nimport { AppState, StateT, Action, Mode, Config, FavListAction } from \"../Types\"\nimport { CubieCube } from '../lib/CubeLib';\nimport { setConfig, getConfig, getFavList, setFavList} from '../lib/Local';\nimport { getActiveName } from '../lib/Selector';\nimport { StateFactory } from \"./StateFactory\";\n\nexport const getInitialState = (mode?: Mode) : AppState => {\n    mode = mode || \"fbdr\"\n    let initialStateName : StateT = function() {\n        switch (mode){\n            case \"cmll\": return \"solved\"\n            case \"fbdr\":\n            case \"ss\":\n            case \"fb\":\n                return \"revealed\"\n            case \"experimental\":\n                return \"revealed\"\n        }\n    }()\n    let ori = getActiveName(getConfig().orientationSelector) || \"YR\"\n    return {\n        name: initialStateName,\n        mode,\n        scrSource: \"random\",\n        cube: {\n            state: CubieCube.id,\n            ori,\n            history: [],\n        },\n        case: {\n            state: CubieCube.id,\n            desc: []\n        },\n        cubejs: {\n            initialized: false\n        },\n        config: getConfig(),\n        favList: getFavList()\n    }\n}\n\nfunction reduceByFavlist(state: AppState, action: FavListAction) {\n    let favList = state.favList;\n\n    switch (action.action) {\n        case \"add\":\n            favList = [...action.content, ...favList]\n            setFavList(favList)\n            break;\n        case \"remove\": {\n        // only remove one at a time for now\n            const rem = action.content[0]\n            favList = favList.filter((value) => {\n                return !(value.mode === rem.mode && value.setup === rem.setup && value.solver === rem.solver)\n            })\n            setFavList(favList)\n            break;\n        };\n        case \"replay\": {\n            return StateFactory.create(state).replay(action.content[0])\n        }\n    }\n    return {\n        ...state,\n        favList\n    }\n}\n\nexport function reducer(state: AppState, action: Action): AppState {\n    // todo: cache values based on this\n    // console.log(\"prev state\", state)\n    switch (action.type) {\n        case \"key\": {\n            let newState = reduceByKey(state, action.content)\n            return newState\n        };\n        case \"config\": {\n            // LESSON: Object.assign is dangerous\n            let newConfig = {...state.config, ...action.content}\n            setConfig(newConfig)\n            let newState = reduceByConfig(state, newConfig)\n            return {\n                ...newState,\n                config: newConfig\n            }\n        };\n        case \"mode\": {\n            let mode = action.content\n            window.location.hash = mode\n            state = getInitialState(mode)\n            return state\n        };\n        case \"scrSource\":\n            return {\n                ...state,\n                scrSource: action.content\n            }\n        case \"favList\":\n            return reduceByFavlist(state, action)\n        default:\n            return state\n        }\n}\n\n\nfunction reduceByKey(state: AppState, code: string): AppState {\n    if (code === \"\") return state;\n\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    if (code[0] === \"#\") {\n        return stateM.control(code)\n    } else {\n        return stateM.move(code)\n    }\n}\nfunction reduceByConfig(state: AppState, conf: Config): AppState {\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    return stateM.reactToConfig(conf)\n}","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  name: \"bright\",\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#d32f2f',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#eeeeef',\n      paper: '#fff'\n    },\n    text: {\n      primary: '#000',\n      secondary: '#888',\n      hint: '#556cd6'\n    }\n  },\n\n});\nconst themeDark = createMuiTheme({\n  name: \"dark\",\n  palette: {\n    primary: {\n      main: '#9FA4C2', // '#757575',\n    },\n    secondary: {\n      main: '#ffffff', //f55057',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#121212',\n      paper: '#252525' //#424242'\n    },\n    text: {\n      primary: '#fff',\n      secondary: '#ddd',\n      hint: '#eee'\n    }\n  },\n\n});\n\nexport { theme, themeDark };","import React from 'react'\nimport { defaultKeyMapping } from \"../lib/Defs\";\nimport AppView from \"../components/AppView\"\nimport { reducer, getInitialState } from '../reducers/Reducer'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme, themeDark } from '../theme';\nimport { getActiveName } from '../lib/Selector';\n\nwindow.addEventListener('keypress', function(e) {\n  if(e.keyCode === 32 && e.target === document.body) {\n    e.preventDefault();\n  }\n});\n\nfunction App(props: {}) {\n  const [state, dispatch] = React.useReducer( reducer, getInitialState() )\n\n  // Add event listeners\n  React.useEffect(() => {\n    function downHandler({ key }: { key : string}) {\n      key = key.toUpperCase()\n      if (defaultKeyMapping.hasOwnProperty(key)) {\n        dispatch({\n          type: \"key\", content: defaultKeyMapping[key] }\n        );\n      }\n    }\n    window.addEventListener('keydown', downHandler);\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n    };\n  });\n\n  const appTheme = getActiveName(state.config.theme) === \"bright\" ? theme : themeDark\n  return (\n    <ThemeProvider theme={appTheme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <AppView state={state} dispatch={dispatch} />\n    </ThemeProvider>\n  )\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function createArray(length) {\n\tconst arr = Array(length);\n\tfor (var i=0; i<length; i++) {\n\t\tarr[i] = 0;\n\t}\n\treturn arr;\n}\n\nfunction createArrays(length1, length2) {\n\tconst arr = Array(length1);\n\tfor (var i=0; i<length1; i++) {\n\t\tarr[i] = Array(length2);\n\t\tfor (var j=0; j<length2; j++) {\n\t\t\tarr[i][j] = 0;\n\t\t}\n\t}\n\treturn arr;\n}\n\nfunction bitOdd(i) {\n\ti ^= i >>> 1;\n\ti ^= i >>> 2;\n\ti ^= i >>> 4;\n\ti ^= i >>> 8;\n\treturn i & 1;\n}\n\nfunction bitCount(i) {\n\ti = i - ((i >>> 1) & 0x55555555);\n\ti = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n\treturn (i + (i >>> 8) + (i >>> 4)) & 0x0f;\n}\n\nfunction get4Parity(idx) {\n\tvar p = 0;\n\tfor (var i=2; i>=0; i--) {\n\t\tp += idx % (4-i);\n\t\tidx = ~~(idx / (4-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get8Parity(idx) {\n\tvar p = 0;\n\tfor (var i=6; i>=0; i--) {\n\t\tp += idx % (8-i);\n\t\tidx = ~~(idx / (8-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get12Parity(idx) {\n\tvar p = 0;\n\tfor (var i=10; i>=0; i--) {\n\t\tp += idx % (12-i);\n\t\tidx = ~~(idx / (12-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\n\nfunction binarySearch(arr, key) {\n\tvar length = arr.length;\n\tif (key <= arr[length-1]) {\n\t\tvar l = 0;\n\t\tvar r = length-1;\n\t\twhile (l <= r) {\n\t\t\tvar mid = (l+r)>>>1;\n\t\t\tvar val = arr[mid];\n\t\t\tif (key > val) {\n\t\t\t\tl = mid + 1;\n\t\t\t} else if (key < val) {\n\t\t\t\tr = mid - 1;\n\t\t\t} else {\n\t\t\t\treturn (mid);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0xffff;\n}\n\nvar fact = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600];\nvar perm3 = [[11, 10, 9], [10, 11, 9], [11, 9, 10], [9, 11, 10], [10, 9, 11], [9, 10, 11]];\nvar ud2std = [0, 1, 2, 4, 7, 9, 10, 11, 13, 16];\nvar std2ud = createArray(18);\nvar Cnk = createArrays(12, 13);\nvar move2str = [\"U \", \"U2\", \"U'\", \"R \", \"R2\", \"R'\", \"F \", \"F2\", \"F'\", \"D \", \"D2\", \"D'\", \"L \", \"L2\", \"L'\", \"B \", \"B2\", \"B'\"];\nvar urfMove = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17], \n\t\t\t\t\t\t\t\t\t\t\t[6, 7, 8, 0, 1, 2, 3, 4, 5,15,16,17, 9,10,11,12,13,14],\n\t\t\t\t\t\t\t\t\t\t\t[3, 4, 5, 6, 7, 8, 0, 1, 2,12,13,14,15,16,17, 9,10,11],\n\t\t\t\t\t\t\t\t\t\t\t[2, 1, 0, 5, 4, 3, 8, 7, 6,11,10, 9,14,13,12,17,16,15], \n\t\t\t\t\t\t\t\t\t\t\t[8, 7, 6, 2, 1, 0, 5, 4, 3,17,16,15,11,10, 9,14,13,12],\n\t\t\t\t\t\t\t\t\t\t\t[5, 4, 3, 8, 7, 6, 2, 1, 0,14,13,12,17,16,15,11,10, 9]];\nfor (var i=0; i<12; i++) {\n\tCnk[i][0] = 1;\n\tCnk[i][i] = 1;\n\tCnk[i][i+1] = 0;\n\tfor (var j=1; j<i; j++) {\n\t\tCnk[i][j] = (Cnk[i-1][j-1] + Cnk[i-1][j]);\n\t}\n}\nfor (var i=0; i<10; i++) {\n\tstd2ud[ud2std[i]] = i;\n}\n\nvar ckmv = Array(19);//new boolean[19][18];\nvar ckmv2 = Array(11);//new boolean[11][10];\nckmv[18] = Array(18);\nckmv2[10] = Array(10);\nfor (var i=0; i<18; i++) {\n\tckmv[i] = Array(18);\n\tfor (var j=0; j<18; j++) {\n\t\tckmv[i][j] = (~~(i/3) == ~~(j/3)) || ((~~(i/3)%3 == ~~(j/3)%3) && (i>=j));\n\t}\n\tckmv[18][i] = false;\n}\nfor (var i=0; i<10; i++) {\n\tckmv2[i] = Array(10);\n\tfor (var j=0; j<10; j++) {\n\t\tckmv2[i][j] = ckmv[ud2std[i]][ud2std[j]];\n\t}\n\tckmv2[10][i] = false;\n}\n\n\n//********************************************************************************//\n\nfunction CubieCube() {\n\tthis.cp = [0, 1, 2, 3, 4, 5, 6, 7];\n\tthis.co = [0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.ep = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\tthis.eo = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.getFlip = function getFlip() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tidx |= this.eo[i] << i;\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getFlipSym = function getFlipSym() {\n\t\tif (FlipR2S != 0) {\n\t\t\treturn FlipR2S[this.getFlip()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(FlipS2R, temps.getFlip());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tthis.setFlip = function setFlip(idx) {\n\t\tthis.eo[11] = bitOdd(idx);\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tthis.eo[i] = idx & 1;\n\t\t\tidx >>>= 1;\n\t\t}\n\t}\n\t\n\tthis.getTwist = function getTwist() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<7; i++) {\n\t\t\tidx *= 3;\n\t\t\tidx += this.co[i];\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getTwistSym = function getTwistSym() {\n\t\tif (TwistR2S != null) {\n\t\t\treturn TwistR2S[this.getTwist()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tlet idx = binarySearch(TwistS2R, temps.getTwist());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\n\tthis.setTwist = function setTwist(idx) {\n\t\tvar twst = 0;\n\t\tfor (var i=6; i>=0; i--) {\n\t\t\ttwst += this.co[i] = idx % 3;\n\t\t\tidx = ~~(idx/3);\n\t\t}\n\t\tthis.co[7] = (15 - twst) % 3;\n\t}\n\t\n\tthis.getUDSlice = function getUDSlice() {\n\t\tvar idx = 0;\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (this.ep[i] >= 8) {\n\t\t\t\tidx += Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t}\n\n\tthis.setUDSlice = function setUDSlice(idx) {\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (idx >= Cnk[11-i][r]) {\n\t\t\t\tidx -= Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t\tthis.ep[i] = (11-r);\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (i+r-4);\n\t\t\t}\n\t\t}\n\t}\n\tthis.getMPerm = function getMPerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=8; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\n\t}\t\n\tthis.setMPerm = function setMPerm(idx) {\n\t\tthis.ep[11] = 8;\n\t\tfor (var i=10; i>=8; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i) + 8);\n\t\t\tidx = ~~(idx / (12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getMid3 = function getMid3() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] >= 9) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\n\t}\n\t\n\tthis.setMid3 = function setMid3(idxA) {\n\t\tvar edge = perm3[idxA % 6];\n\t\tidxA = ~~(idxA / 6);\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (idxA >= Cnk[i][r]) {\n\t\t\t\tidxA -= Cnk[i][r--];\n\t\t\t\tthis.ep[i] = edge[2-r];\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (8-i+r);\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getURtoUL = function getURtoUL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] <= 2) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\n\n\tthis.getDRtoDL = function getDRtoDL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (4 <= this.ep[i] && this.ep[i] <= 6) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\t\n\n\tthis.setEdgePerm = function setEdgePerm(idx) {\n\t\tthis.ep[11] = 0;\n\t\tfor (var i=10; i>=0; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i));\n\t\t\tidx = ~~(idx/(12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\t\t\n\t}\n\t\n\tthis.getEdgePerm = function getEdgePerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=0; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\t\t\n\t}\n\n\tthis.getCPermSym = function getCPermSym() {\n\t\tif (EPermR2S != null) {\n\t\t\tvar idx = EPermR2S[get8Perm(this.cp)];\n\t\t\tidx ^= e2c[idx&0x0f];\n\t\t\treturn idx;\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(CPermS2R, get8Perm(temps.cp));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tthis.getEPermSym = function getEPermSym() {\t\n\t\tif (EPermR2S != null) {\n\t\t\treturn EPermR2S[get8Perm(this.ep)];\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(EPermS2R, get8Perm(temps.ep));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\t\n\n\tthis.URFConjugate = function URFConjugate() {\n\t\tCornMult(urf2, this, temps);\n\t\tCornMult(temps, urf1, this);\t\t\n\t\tEdgeMult(urf2, this, temps);\n\t\tEdgeMult(temps, urf1, this);\t\t    \t\t\n\t}\n\t\n\tthis.invCubieCube = function invCubieCube() {\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.ep[this.ep[edge]] = edge;\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.eo[edge] = this.eo[temps.ep[edge]];\n\t\tfor (var corn=0; corn<8; corn++)\n\t\t\ttemps.cp[this.cp[corn]] = corn;\n\t\tfor (var corn=0; corn<8; corn++) {\n\t\t\tvar ori = this.co[temps.cp[corn]];\n\t\t\ttemps.co[corn] = -ori;\n\t\t\tif (temps.co[corn] < 0)\n\t\t\t\ttemps.co[corn] += 3;\n\t\t}\n\t\tthis.copy(temps);\n\t}\n\n\n\tthis.init = function init(cperm, twist, eperm, flip) {\n\t\tset8Perm(this.cp, cperm);\n\t\tthis.setTwist(twist);\n\t\tthis.setEdgePerm(eperm);\n\t\tthis.setFlip(flip);\n\t}\n\t\n\tthis.copy = function copy(c) {\n\t\tfor (var i=0; i<8; i++) {\n\t\t\tthis.cp[i] = c.cp[i];\n\t\t\tthis.co[i] = c.co[i];\n\t\t}\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tthis.ep[i] = c.ep[i];\n\t\t\tthis.eo[i] = c.eo[i];\n\t\t}\n\t}\n}\n\nconst cctemp = new CubieCube();\nconst temps = new CubieCube();\n\nfunction set8Perm(arr, idx) {\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar p = fact[7-i];\n\t\tvar v = ~~(idx / p);\n\t\tidx %= p;\n\t\tv <<= 2;\n\t\tarr[i] = ((val >> v) & 7);\n\t\tvar m = (1 << v) - 1;\n\t\tval = (val & m) + ((val >> 4) & ~m);\n\t}\n\tarr[7] = val;\n}\n\nfunction get8Perm(arr) {\n\tvar idx = 0;\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar v = arr[i] << 2;\n\t\tidx = (8 - i) * idx + ((val >> v) & 7);\n\t\tval -= 0x11111110 << v;\n\t}\n\treturn idx;\t\n}\n\nfunction CornMult(a, b, prod) {\n\tfor (var corn=0; corn<8; corn++) {\n\t\tprod.cp[corn] = a.cp[b.cp[corn]];\n\t\tvar oriA = a.co[b.cp[corn]];\n\t\tvar oriB = b.co[corn];\n\t\tvar ori = oriA;\n\t\tori += (oriA<3) ? oriB : 3-oriB;\n\t\tori %= 3;\n\t\tif (oriA < 3 ^ oriB < 3) {\n\t\t\tori += 3;\n\t\t}\n\t\tprod.co[corn] = ori;\n\t}\n}\t\n\nfunction EdgeMult(a, b, prod) {\n\tfor (var ed=0; ed<12; ed++) {\n\t\tprod.ep[ed] = a.ep[b.ep[ed]];\n\t\tprod.eo[ed] = (b.eo[ed] ^ a.eo[b.ep[ed]]);\n\t}\n}\n\nfunction CornConjugate(a, idx, b) {\n\tCornMult(CubeSym[SymInv[idx]], a, cctemp);\n\tCornMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nfunction EdgeConjugate(a, idx, b) {\n\tEdgeMult(CubeSym[SymInv[idx]], a, cctemp);\n\tEdgeMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nvar CubeSym = Array(16);\nvar moveCube = Array(18);\nvar SymInv = Array(16);\nvar SymMult = Array(16);\nvar SymMove = Array(16);\nvar Sym8Mult = Array(8);\nvar Sym8Move = Array(8);\nvar Sym8MultInv = Array(8);\nvar SymMoveUD = Array(16);\nvar FlipS2R = Array(336);\nvar TwistS2R = Array(324);\nvar CPermS2R = Array(2768);\nvar EPermS2R = CPermS2R;\nvar FlipR2S = Array(2048);\nvar TwistR2S = Array(2187);\nvar EPermR2S = createArray(40320);\nfor (var i=0; i<40320; i++) {\n\tEPermR2S[i] = 0;\n}\nvar MtoEPerm = Array(40320);\nvar merge = Array(56);\nvar e2c = [0, 0, 0, 0, 1, 3, 1, 3, 1, 3, 1, 3, 0, 0, 0, 0];\nconst urf1 = new CubieCube();\nurf1.init(2531, 1373, 67026819, 1877);\nconst urf2 = new CubieCube();\nurf2.init(2089, 1906, 322752913, 255);\n\n\nfunction CubieInit() {\n\tvar mc = Array(6);\n\tmc[0] = new CubieCube();\n\tmc[0].init(15120, 0, 119750400, 0);\n\tmc[1] = new CubieCube();\n\tmc[1].init(21021, 1494, 323403417, 0);\n\tmc[2] = new CubieCube();\n\tmc[2].init(8064, 1236, 29441808, 802);\n\tmc[3] = new CubieCube();\n\tmc[3].init(9, 0, 5880, 0);\n\tmc[4] = new CubieCube();\n\tmc[4].init(1230, 412, 2949660, 0);\n\tmc[5] = new CubieCube();\n\tmc[5].init(224, 137, 328552, 1160);\n\tfor (var m=0; m<6; m++) {\n\t\tmoveCube[m*3] = mc[m];\n\t\tfor (var p=0; p<2; p++) {\n\t\t\tmoveCube[m*3+p+1] = new CubieCube();\n\t\t\tEdgeMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t\tCornMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t}\n\t}\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar temp;\n\tvar f2 = new CubieCube();\n\tf2.init(28783, 0, 259268407, 0);\n\tvar u4 = new CubieCube();\n\tu4.init(15138, 0, 119765538, 1792);\n\tvar lr2 = new CubieCube();\n\tlr2.init(5167, 0, 83473207, 0);\n\tlr2.co = [ 3, 3, 3, 3, 3, 3, 3, 3 ];\n\tfor (var i=0; i<16; i++) {\n\t\tSymMult[i] = Array(16);\n\t\tSymMove[i] = Array(18);\n\t\tSymMoveUD[i] = Array(10);\n\t\tCubeSym[i] = new CubieCube();\n\t\tCubeSym[i].copy(c);\n\t\tCornMult(c, u4, d);\n\t\tEdgeMult(c, u4, d);\n\t\ttemp = d;\td = c;\tc = temp;\n\t\tif (i % 4 == 3) {\n\t\t\tCornMult(c, lr2, d);\n\t\t\tEdgeMult(c, lr2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\t\t\t\t\n\t\t}\n\t\tif (i % 8 == 7) {\n\t\t\tCornMult(c, f2, d);\n\t\t\tEdgeMult(c, f2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\n\t\t}\n\t}\n\n\tfor (var j=0; j<16; j++) {\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornMult(CubeSym[j], CubeSym[k], c);\n\t\t\tif (c.cp[0] == 0 && c.cp[1] == 1 && c.cp[2] == 2) {\n\t\t\t\tSymInv[j] = k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i=0; i<16; i++) {\n\t\tfor (var j=0; j<16; j++) {\n\t\t\tCornMult(CubeSym[i], CubeSym[j], c);\n\t\t\tfor (var k=0; k<16; k++) {\n\t\t\t\tif (CubeSym[k].cp[0] == c.cp[0] && CubeSym[k].cp[1] == c.cp[1] && CubeSym[k].cp[2] == c.cp[2]) {\n\t\t\t\t\tSymMult[i][j] = k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tCornConjugate(moveCube[j], SymInv[s], c);\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar found = 1;\n\t\t\t\tfor (var i=0; i<8; i++) {\n\t\t\t\t\tif (c.cp[i] != moveCube[m].cp[i] || c.co[i] != moveCube[m].co[i]) {\n\t\t\t\t\t\tfound = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found) {\n\t\t\t\t\tSymMove[s][j] = m;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<10; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tSymMoveUD[s][j] = std2ud[SymMove[s][ud2std[j]]];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tSym8Mult[j] = Array(8);\n\t\tSym8Move[j] = Array(18);\n\t\tSym8MultInv[j] = Array(8);\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Mult[j][s] = (SymMult[j<<1][s<<1]>>>1);\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Move[s][j] = SymMove[s<<1][j];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8MultInv[j][s] = Sym8Mult[j][SymInv[s<<1]>>1];\n\t\t}\n\t}\n\n\tconst occ = new Array(1260);\n\n\tvar count = 0;\n\tfor (var i=0; i<64; occ[i++] = 0);\n\n\tfor (var i=0; i<2048; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setFlip(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = d.getFlip();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tFlipR2S[idx] = ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tFlipS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\tcount = 0;\n\tfor (var i=0; i<69; occ[i++] = 0);\n\tfor (var i=0; i<2187; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setTwist(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tCornConjugate(c, s, d);\n\t\t\t\tvar idx = d.getTwist();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tTwistR2S[idx] =  ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tTwistS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\n\tvar mask = Array(56);\n\tfor (var i=0; i<56; i++) {\n\t\tmask[i] = Array(2);\n\t\tmerge[i] = Array(56);\n\t}\n\tfor (var i=0; i<40320; i++) {\n\t\tset8Perm(c.ep, i);\n\t\tvar a = ~~(c.getURtoUL() / 6);\n\t\tvar b = ~~(c.getDRtoDL() / 6);\n\t\tmask[a][b>>>5] |= 1 << (b&0x1f);\n\t}\n\t\n\tfor (var i=0; i<56; i++) {\n\t\tcount = 0;\n\t\tfor (var j=0; j<56; j++) {\n\t\t\tif ((mask[i][j>>>5]&(1<<(j&0x1f))) != 0) {\n\t\t\t\tmerge[i][j] = count++;\n\t\t\t}\n\t\t}\n\t}\n\tcount = 0;\n\tfor (var i=0; i<1260; occ[i++] = 0);\n\tfor (var i=0; i<40320; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tset8Perm(c.ep, i);\n\t\t\tfor (var s=0; s<16; s++) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = get8Perm(d.ep);\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tvar a = d.getURtoUL();\n\t\t\t\tvar b = d.getDRtoDL();\n\t\t\t\tvar m = (merge[~~(a/6)][~~(b/6)] * 4032 + a * 12 + b % 6 * 2 + get8Parity(idx));\n\t\t\t\tMtoEPerm[m] = (count << 4 | s);\n\t\t\t\tEPermR2S[idx] = (count << 4 | s);\n\t\t\t}\n\t\t\tEPermS2R[count++] = i;\n\t\t}\n\t}\n}\n\nvar UDSliceMove = Array(495);//new char[495][18];\nvar TwistMove = Array(324);//new char[324][18];\nvar FlipMove = Array(336);//new char[336][18];\nvar UDSliceConj = Array(495);//new char[495][8];\nvar UDSliceTwistPrun = Array(495*324);//new byte[495 * 324];\nvar UDSliceFlipPrun = Array(495*336);//new byte[495 * 336];\n\t\nvar TwistFlipPrun = Array(336*324*8);//new byte[336 * 324 * 8];\n\t\n\t//phase1to2\nvar Mid3Move = Array(1320);//new char[1320][18];\nvar Mid32MPerm = Array(24);//new byte[24];\nvar CParity = Array(87);//new byte[2768/8];\n\n\t//phase2\nvar CPermMove = Array(2768);//new char[2768][18];\nvar EPermMove = Array(2768);//new char[2768][10];\nvar MPermMove = Array(24);//new byte[24][10];\nvar MPermConj = Array(24);//new byte[24][16];\nvar MCPermPrun = Array(24*2768);//new byte[24*2768];\nvar MEPermPrun = Array(24*2768);//new byte[24*2768];\n\n\nfunction CoordInit() {\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar i, j;\n\tfor (i=0; i<2768; i++) {\n\t\tCPermMove[i] = Array(18);\n\t\tset8Perm(c.cp, CPermS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tCPermMove[i][j] = d.getCPermSym();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<2768; i++) {\n\t\tEPermMove[i] = Array(10);\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tEPermMove[i][j] = d.getEPermSym();\n\t\t}\n\t}\n\tfor (i=0; i<336; i++) {\n\t\tFlipMove[i] = Array(18);\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tFlipMove[i][j] = d.getFlipSym();\n\t\t}\n\t}\n\tfor (i=0; i<324; i++) {\n\t\tTwistMove[i] = Array(18);\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tTwistMove[i][j] = d.getTwistSym();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceMove[i] = Array(18);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tUDSliceMove[i][j] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceConj[i] = Array(8);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<16; j+=2) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tUDSliceConj[i][j>>>1] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<1320; i++) {\n\t\tMid3Move[i] = Array(18);\n\t\tc.setMid3(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tMid3Move[i][j] = d.getMid3();\n\t\t}\n\t}\t\n\tfor (i=0; i<24; i++) {\n\t\tc.setMPerm(i);\n\t\tMid32MPerm[c.getMid3() % 24] = i;\n\t}\n\tfor (i=0; i<2768; i++) {\n\t\tCParity[i>>>3] |= (get8Parity(CPermS2R[i])) << (i & 7);\n\t}\n\tfor (i=0; i<24; i++) {\n\t\tMPermMove[i] = Array(10);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tMPermMove[i][j] = d.getMPerm();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<24; i++) {\n\t\tMPermConj[i] = Array(16);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<16; j++) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tMPermConj[i][j] = d.getMPerm();\n\t\t}\n\t}\n\t\n\tvar SymState = Array(324);\n\tfor (i=0; i<324; i++) {\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tCornConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(TwistS2R, d.getTwist()) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tvar SymStateF = Array(324);\n\tfor (i=0; i<336; i++) {\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tEdgeConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(FlipS2R, d.getFlip()) != 0xffff) {\n\t\t\t\tSymStateF[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\t\t\n\tfor (i=0; i<336*324*8; i++) {\n\t\tTwistFlipPrun[i] = -1;\n\t}\n\tfor (i=0; i<8; i++) {\n\t\tTwistFlipPrun[i] = 0;\n\t}\n\tvar depth = 0;\n\tvar done = 8;\n\tvar inv;\n\tvar select;\n\tvar check;\n\t\n\twhile (done < 336*324*8) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<336*324*8; i++) {\n\t\t\tif (TwistFlipPrun[i] != select)\n\t\t\t\tcontinue;\n\t\t\tvar twist = ~~(i / 2688);\n\t\t\tvar flip = i % 2688;\n\t\t\tvar fsym = i & 7;\n\t\t\tflip >>>= 3;\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\tvar tsymx = twistx & 7;\n\t\t\t\ttwistx >>>= 3;\n\t\t\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\t\t\tvar fsymx = Sym8MultInv[Sym8Mult[flipx & 7][fsym]][tsymx];\n\t\t\t\tflipx >>>= 3;\n\t\t\t\tvar idx = twistx * 2688 + (flipx << 3 | fsymx);\n\t\t\t\tif (TwistFlipPrun[idx] == check) {\n\t\t\t\t\tdone++;\n\t\t\t\t\tif (inv) {\n\t\t\t\t\t\tTwistFlipPrun[i] = depth;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTwistFlipPrun[idx] = depth;\n\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\tvar symF = SymStateF[flipx];\n\t\t\t\t\t\tif (sym != 1 || symF != 1) {\n\t\t\t\t\t\t\tfor (var j=0; j<8; j++, symF >>= 1) {\n\t\t\t\t\t\t\t\tif ((symF & 1) == 1) {\n\t\t\t\t\t\t\t\t\tvar fsymxx = Sym8MultInv[fsymx][j];\n\t\t\t\t\t\t\t\t\tfor (var k=0; k<8; k++) {\n\t\t\t\t\t\t\t\t\t\tif ((sym & (1 << k)) != 0) {\n\t\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymxx][k]);\n\t\t\t\t\t\t\t\t\t\t\tif (TwistFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tTwistFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n\tfor (i=0; i<495*324; i++) {\n\t\tUDSliceTwistPrun[i] = -1;\n\t}\n\tUDSliceTwistPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 324) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*324; i++) {\n\t\t\tif (UDSliceTwistPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar twist = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\t\tvar symx = twistx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\ttwistx >>>= 3;\n\t\t\t\t\tvar idx = twistx * 495 + slicex;\n\t\t\t\t\tif (UDSliceTwistPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceTwistPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceTwistPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceTwistPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceTwistPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\n\tfor (i=0; i<495*336; i++) {\n\t\tUDSliceFlipPrun[i] = -1;\n\t}\n\tUDSliceFlipPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 336) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*336; i++) {\n\t\t\tif (UDSliceFlipPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar flip = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar flipx = FlipMove[flip][m];\n\t\t\t\t\tvar symx = flipx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\tflipx >>>= 3;\n\t\t\t\t\tvar idx = flipx * 495 + slicex;\n\t\t\t\t\tif (UDSliceFlipPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceFlipPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceFlipPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymStateF[flipx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = flipx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tdepth++;\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\n\t\n\tSymState = Array(2768);\n\tfor (i=0; i<2768; i++) {\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=1; j<16; j++) {\n\t\t\tEdgeConjugate(c, j, d);\n\t\t\tif (binarySearch(EPermS2R, get8Perm(d.ep)) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tfor (i=0; i<24*2768; i++) {\n\t\tMEPermPrun[i] = -1;\n\t}\n\tMEPermPrun[0] = 0;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MEPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar edge = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar edgex = EPermMove[edge][m];\n\t\t\t\t\tvar symx = edgex & 15;\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tedgex >>>= 4;\n\t\t\t\t\tvar idx = edgex * 24 + midx;\n\t\t\t\t\tif (MEPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMEPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMEPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[edgex];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = edgex * 24 + MPermConj[midx][j];\n\t\t\t\t\t\t\t\t\t\tif (MEPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMEPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\t\t\n\tfor (i=0; i<24*2768; i++) {\n\t\tMCPermPrun[i] = -1;\n\t}\n\tMCPermPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MCPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar corn = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar cornx = CPermMove[corn][ud2std[m]];\n\t\t\t\t\tvar symx = (cornx & 15);\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tcornx >>>= 4;\n\t\t\t\t\tvar idx = cornx * 24 + midx;\n\t\t\t\t\tif (MCPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMCPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMCPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[cornx];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = cornx * 24 + MPermConj[midx][j ^ e2c[j]];\n\t\t\t\t\t\t\t\t\t\tif (MCPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMCPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n}\t\t\t\t\t\n\nfunction randomCube() {\n\tvar eperm;\n\tvar cperm;\n\tdo {\n\t\teperm = ~~(Math.random() * 479001600);\n\t\tcperm = ~~(Math.random() * 40320);\n\t} while (((get8Parity(cperm) ^ get12Parity(eperm))) != 0);\n\tvar c = new CubieCube();\n\tc.init(cperm, ~~(Math.random() * 2187), eperm, ~~(Math.random() * 2048));\n\treturn c;\n}\n\nvar move = Array(31);\n\nvar corn = Array(20);\nvar csym = Array(20);\nvar mid3 = Array(20);\nvar e1 = Array(20);\nvar e2 = Array(20);\nvar urfidx;\n\nvar twist = Array(6);\nvar tsym = Array(6);\nvar flip = Array(6);\nvar fsym = Array(6);\nvar slice = Array(6);\nvar corn0 = Array(6);\nvar csym0 = Array(6);\nvar mid30 = Array(6);\nvar e10 = Array(6);\nvar e20 = Array(6);\nvar prun = Array(6);\n\nvar length1 = 0;\nvar maxlength2 = 0;\nvar sol = 999;\nvar valid1 = 0;\nvar valid2 = 0;\nvar solution = \"\";\nvar useSeparator = false;\n\nfunction Solve(c) {\n\tc.temps = new CubieCube();\n\tfor (var i=0; i<6; i++) {\n\t\ttwist[i] = c.getTwistSym();\n\t\ttsym[i] = twist[i] & 7;\n\t\ttwist[i] >>>= 3;\n\t\tflip[i] = c.getFlipSym();\n\t\tfsym[i] = flip[i] & 7;\n\t\tflip[i] >>>= 3;\n\t\tslice[i] = c.getUDSlice();\n\t\tcorn0[i] = c.getCPermSym();\n\t\tcsym0[i] = corn0[i] & 15;\n\t\tcorn0[i] >>>= 4;\n\t\tmid30[i] = c.getMid3();\n\t\te10[i] = c.getURtoUL();\n\t\te20[i] = c.getDRtoDL();\n\t\tprun[i] = Math.max(Math.max(UDSliceTwistPrun[twist[i] * 495 + UDSliceConj[slice[i]][tsym[i]]],\n\t\t\t\t\t\tUDSliceFlipPrun[flip[i] * 495 + UDSliceConj[slice[i]][fsym[i]]]),\n\t\t\t\t\t\tTwistFlipPrun[twist[i] * 2688 + (flip[i] << 3 | Sym8MultInv[fsym[i]][tsym[i]])]);\n\t\tc.URFConjugate();\n\t\tif (i==2) {\n\t\t\tc.invCubieCube();\n\t\t}\n\t}\n\tsolution = null;\n\tsol = 22;\n\tfor (length1=0; length1<sol; length1++) {\n\t\tmaxlength2 = Math.min(sol/2+1, sol-length1);\n\t\tfor (urfidx=0; urfidx<6; urfidx++) {\n\t\t\tcorn[0] = corn0[urfidx];\n\t\t\tcsym[0] = csym0[urfidx];\n\t\t\tmid3[0] = mid30[urfidx];\n\t\t\te1[0] = e10[urfidx];\n\t\t\te2[0] = e20[urfidx];\n\t\t\tif ((prun[urfidx] <= length1)\n\t\t\t\t\t&& phase1(twist[urfidx], tsym[urfidx], flip[urfidx], fsym[urfidx],\n\t\t\t\t\t\t\t\tslice[urfidx], length1, 18)) {\n\t\t\t\tif (solution == null) {\n\t\t\t\t\treturn \"Error 8\";\n\t\t\t\t} else {\n\t\t\t\t\treturn solution;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn \"Error 7\";\n}\n\nfunction phase1(twist, tsym, flip, fsym, slice, maxl, lm) {\n\tif (twist==0 && flip==0 && slice==0 && maxl < 5) {\n\t\treturn maxl == 0 && init2();\n\t}\n\tfor (var m=0; m<18; m++) {\n\t\tif (ckmv[lm][m]) {\n\t\t\tm+=2;\n\t\t\tcontinue;\n\t\t}\n\t\tvar slicex = UDSliceMove[slice][m];\n\t\tvar twistx = TwistMove[twist][Sym8Move[tsym][m]];\n\t\tvar tsymx = Sym8Mult[twistx & 7][tsym];\n\t\ttwistx >>>= 3;\n\t\tif (UDSliceTwistPrun[twistx * 495 + UDSliceConj[slicex][tsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\tvar fsymx = Sym8Mult[flipx & 7][fsym];\n\t\tflipx >>>= 3;\n\t\tif (TwistFlipPrun[twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymx][tsymx])] >= maxl\n\t\t\t\t||UDSliceFlipPrun[flipx * 495 + UDSliceConj[slicex][fsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[length1-maxl] = m;\n\t\tvalid1 = Math.min(valid1, length1-maxl);\n\t\tif (phase1(twistx, tsymx, flipx, fsymx, slicex, maxl-1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction init2() {\n//\tif (System.currentTimeMillis() > timeOut) {\n//\t\treturn true;\n//\t}\n\tvalid2 = Math.min(valid2, valid1);\n\tfor (var i=valid1; i<length1; i++) {\n\t\tvar m = move[i];\n\t\tcorn[i+1] = CPermMove[corn[i]][SymMove[csym[i]][m]];\n\t\tcsym[i+1] = SymMult[corn[i+1] & 15][csym[i]];\n\t\tcorn[i+1] >>>= 4;\n\t\tmid3[i+1] = Mid3Move[mid3[i]][m];\n\t}\n\tvalid1 = length1;\n\tvar mid = Mid32MPerm[mid3[length1] % 24];\n\tvar prun = MCPermPrun[corn[length1] * 24 + MPermConj[mid][csym[length1]]];\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\tfor (var i=valid2; i<length1; i++) {\n\t\te1[i+1] = Mid3Move[e1[i]][move[i]];\n\t\te2[i+1] = Mid3Move[e2[i]][move[i]];\n\t}\n\tvalid2 = length1;\n\tvar cornx = corn[length1];\n\tvar ex = merge[~~(e1[length1]/6)][~~(e2[length1]/6)] * 4032\n\t\t\t\t + e1[length1] * 12 + e2[length1] % 6 * 2 + (((CParity[cornx>>>3]>>>(cornx&7))&1) ^ get4Parity(mid));\n\tvar edge = MtoEPerm[ex];\n\tvar esym = edge & 15;\n\tedge >>>= 4;\n\t\tprun = Math.max(MEPermPrun[edge * 24 + MPermConj[mid][esym]], prun);\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\t\tvar lm = length1==0 ? 10 : std2ud[~~(move[length1-1]/3)*3+1];\n\tfor (var i=prun; i<maxlength2; i++) {\n\t\tif (phase2(edge, esym, corn[length1], csym[length1], mid, i, length1, lm)) {\n\t\t\tsol = length1 + i;\n\t\t\tvar sb = \"\";\n\t\t\tvar urf = urfidx;\n//\t\t\tif (inverse) {\n\t\t\t\turf = (urf + 3) % 6;\n//\t\t\t}\n\t\t\tif (urf < 3) {\n\t\t\t\tfor (var s=0; s<length1; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1; s<sol; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var s=sol-1; s>=length1; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1-1; s>=0; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// sb += \"(\" + sol + \"f)\";\n\t\t\tsolution = sb;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction phase2(edge, esym, corn, csym, mid, maxl, depth, lm) {\n\tif (edge==0 && corn==0 && mid==0) {\n\t\treturn true;\n\t}\n\tfor (var m=0; m<10; m++) {\n\t\tif (ckmv2[lm][m]) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar midx = MPermMove[mid][m];\n\t\tvar edgex = EPermMove[edge][SymMoveUD[esym][m]];\n\t\tvar esymx = SymMult[edgex & 15][esym];\n\t\tedgex >>>= 4;\n\t\tif (MEPermPrun[edgex * 24 + MPermConj[midx][esymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar cornx = CPermMove[corn][SymMove[csym][ud2std[m]]];\n\t\tvar csymx = SymMult[cornx & 15][csym];\n\t\tcornx >>>= 4;\n\t\tif (MCPermPrun[cornx * 24 + MPermConj[midx][csymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[depth] = ud2std[m];\n\t\tif (phase2(edgex, esymx, cornx, csymx, midx, maxl-1, depth+1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nvar initialized = false;\n\nfunction initialize() {\n\tif (initialized) {\n\t\treturn;\n\t}\n\tCubieInit();\n\tCoordInit();\n\tinitialized = true;\n}\n\nfunction solve(c) {\n\tinitialize();\n\tconst cc = new CubieCube();\n\tcc.cp = c.cp;\n\tcc.co = c.co;\n\tcc.ep = c.ep;\n\tcc.eo = c.eo;\n\treturn Solve(cc);\n};\n\nmodule.exports.initialize = initialize;\nmodule.exports.solve = solve;\nmodule.exports.randomCube = randomCube;\n"],"sourceRoot":""}