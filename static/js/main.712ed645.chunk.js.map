{"version":3,"sources":["lib/Defs.tsx","lib/Math.ts","components/CubeSim.tsx","lib/CubeLib.tsx","lib/Selector.tsx","components/Select.tsx","components/Input.tsx","components/CmllTrainerView.tsx","components/ScrambleInputView.tsx","components/BlockTrainerView.tsx","components/PanoramaView.tsx","lib/Pruner.tsx","lib/min2phase/min2phase-wrapper.ts","lib/Solver.tsx","lib/CachedSolver.tsx","components/FavListView.tsx","components/TopBarView.tsx","lib/Evaluator.tsx","lib/Analyzer.ts","components/AnalyzerView.tsx","lib/Worker.ts","components/AppView.tsx","Initialization.tsx","lib/LocalStorage.tsx","Version.tsx","reducers/AbstractStateM.tsx","lib/Algs.tsx","reducers/BlockTrainerStateM.tsx","reducers/LSETrainerStateM.tsx","reducers/CmllStateM.tsx","reducers/StateFactory.tsx","KeyMapping.tsx","reducers/InitialState.tsx","reducers/Reducer.tsx","theme.js","app/App.tsx","serviceWorker.js","index.js","lib/min2phase/min2phase.js"],"names":["Face","Typ","U","D","F","B","L","R","C","E","T","corners_coord","edges_coord","centers_coord","cstimer_corners_coord","cstimer_edges_coord","u","cpc","coc","epc","eoc","tpc","name","f","r","l","d","b","m","e","s","u_face","f_face","FBpairPos","color_map","rand_int","Math","floor","random","rand_incl","rand_choice","arr","length","cartesianProduct","allEntries","reduce","results","entries","map","result","entry","concat","subResults","getParity","perm","visited","Array","fill","follow","i","cnt","res","arrayEqual","arr1","arr2","TAU","PI","axesInfo","THREE","roundedFace","rounded","cornerRadius","geo","cornerVertices","cornerCenter","squareCorner","degree","push","clone","add","cos","sin","multiplyScalar","vertices","x","applyAxisAngle","Vector3","i1","face","faces","redraw_cube","cube","config","width","height","colorScheme","mode","theme","hintDistance","enableControl","bgColor","facesToReveal","scene","camera","renderer","antialias","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","controls","OrbitControls","domElement","enabled","stickers_tmpl","stickerwrap_tmpl","angleScale","scale","cameraPosition","position","copy","aspect","lookAt","geos","geo_border","materials_border","color","side","mesh","setRotationFromEuler","rounded_patterns","drawCube","materials","_","mat","vertexColors","alphaTest","pattern","set","flat","hint_mesh","chroma","hex","cubie","rot","makeRotationFromEuler","rot1","setRotationFromMatrix","multiply","z","idx","sticker","stickerwrap","indexOf","stickerhint","cubeG","render","update","frameID","animate","requestAnimationFrame","updateCubeAndColor","remove","getRenderer","cleanupFunc","forEach","g","dispose","cancelAnimationFrame","renderControls","config_cache","painter","CubeSim","props","mount","React","useRef","cubePainter","useMemo","useMediaQuery","useTheme","breakpoints","up","useEffect","dom","current","appendChild","removeChild","ref","style","zIndex","CubieCube","value","cp","co","ep","eo","tp","this","Id","obj","JSON","parse","stringify","o","p","oc","pc","mod","o_new","p_new","console","assert","src","dst","move","_apply_partial","toc","isArray","MoveSeq","moves","apply_one","apply","facelet_mapping","pos","piece","j","_rotate_coord","fm","custom_corners_coord","custom_edges_coord","custom_centers_coord","match_pos_piece","coord","parity","expected","Map","toString","ori","has","_backward_rotate_coord","warn","get","coord_pair","newOri","newpos","newPerm","_to_facelet_mapping","_from_facelet_mapping","perm_correct","ori_correct","y","transformed_mapping","mapping","face_mapping","Object","fromEntries","face_pos","face_target","fs","last_face","first_face","Move","arg","from_moves","from_cube","get_change","acc_p","acc_o","slice","all","generate_base_moves","make_rot_set","us","rs","ls","ds","bs","ms","es","ss","rws","lws","uws","xs","ys","zs","moves_dict","create","rotset","Set","shift","str","tokens","token","comment_idx","search","ch","ord","charCodeAt","split","parse_line","newMoves","nextMove","pop","combined","_combine","reverse","inv","useMetric","join","move1","move2","getCnt","getStr","auf_moves","auf_move","FaceletCube","mult_move","face_new","work","typ","mod_for_typ","p1","p2","p_curr","o_curr","color_of_c","o1","o2","color_of_e","color_of_t","color_of_sticker","Error","d_face","l_face","r_face","b_face","from_cubie","mask","facelet","X","from_cubie_partial_masked","from_cubie_partial","to_unfolded_cube_str","faceletCube","face_count","str_face_map","color_cube","face_char","hasOwnProperty","count","lse_mask","CubeUtil","ext","stickers","find_pairs","edge_stickers","filter","corner_stickers","ep_stickers","cp_stickers","epcp_pairs","c","efs","cfs","match","get_color","connected_pairs","u_premove","m2_premove","get_random_with_mask","cp_rand","ep_rand","par","random_ori","ori_mask","sum","random_perm","perm_mask","undecided","tmp","rand_shuffle","is_cmll_solved","premove","cube1","solved","is_mask_solved2","is_solved","co_","eo_","tp_","every","get_random_lse","is_cube_solved","id","ColorScheme","suppressLoad","colors","load","newScheme","save","_setDefault","default_colors","valid_schemes_map","localStorage","setItem","serialize","item","getItem","deserialize","valid_schemes","Mask","fs_back_mask","fs_front_mask","fbdr_mask","fb_mask","sb_mask","cmll_mask","ss_front_mask","ss_back_mask","empty_mask","dl_solved_mask","bl_solved_mask","solved_mask","zhouheng_mask","lse_4c_mask","getActiveNames","ans","flags","names","getActiveName","useStyles","makeStyles","container","paddingTop","spacing","paddingBottom","backgroundColor","palette","background","default","button","paper","padding","display","overflow","flexDirection","canvasPaper","infoColumn","scrambleColumn","paddingLeft","textColumn","minHeight","fixedHeight","title","flexGrow","select","text","primary","selectLabel","secondary","SingleSelect","state","dispatch","sel","classes","radioValue","label","FormControl","component","className","FormLabel","RadioGroup","aria-label","onChange","evt","n","new_flags","target","new_config","fbPairSolvedSelector","fbdrSelector","type","content","row","FormControlLabel","key","control","Radio","labelPlacement","MultiSelectContent","options","handleChange","checked","useState","manipChecked","setManipChecked","manipulator_row","manipulators","FormGroup","manip","enableIdx","Checkbox","fillValue","makeManipulator","Fragment","makeBox","MultiSelect","open","setOpen","handleClose","noDialog","Box","Button","variant","borderWidth","onClick","fontSize","marginLeft","marginRight","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","DialogActions","ColorSetter","toUserInput","setText","TextField","defaultValue","helperText","event","fullWidth","size","ColorPanel","orientationSelector","Divider","hint","fontWeight","borderBottom","prompt","CmllTrainerView","clsx","_getMask","cmllCubeMaskSelector","hyperori","hyperOriSelector","panel","cmllSelector","cmllAufSelector","triggerSelector","setReveal","reveal","downHandler","keyMapping","handle","addEventListener","removeEventListener","alg","setup","case","desc","algs","moves_c","collapse","Grid","Paper","margin","getColorsForOri","elevation","lineHeight","Typography","whiteSpace","onFocus","blur","sm","md","setupEdit","down","ScrambleInputView","editing","setEditing","scrambles","setValue","textField","onKeyPress","stopPropagation","trim","startIcon","onKeyDown","onKeyUp","onEntered","focus","inputRef","multiline","rowsMax","rows","InputProps","transition","marginBottom","borderRadius","condGap","fgap","flexShrink","flexBasis","minWidth","sourceIcon","sourceIconWrap","fab","top","left","ConfigPanelGroup","ssSelector","ssPairOnlySelector","solutionNumSelector","showCube","ssPosSelector","LPEdgeManip","fbOnlySelector","fbdrScrambleSelector","fbdrPosSelector1","fbdrPosSelector3","fbPieceSolvedSelector","fsSelector","lseStageSelector","lseMCSelector","lseBarSelector","lseEOSelector","lseEOLRMCSelector","lseBarbieSelector","lseEOLRScrambleSelector","BlockTrainerView","kind","getMask","spaceButtonText","algText","minMove","a","remove_setup","min","describe_hide","get_algs","describe_reveal","setFav","favSelected","canvas_wh","alignItems","flexWrap","scrambleInput","case_","solver","action","endIcon","alignSelf","justifyContent","fontFamily","root","textAlign","gridList","VisualCube","stage","sch","template","alt","PanoramaTable","GridList","cellHeight","cols","GridListTile","PanoramaView","PrunerPiece","S","I","prunerFactory","def","corner","edge","center","O","def_to_idx","count_all","curr_idx","idx_arr","eosize","epsize","eisize","esize","pow","ep_idx","e_idx","cosize","cpsize","cisize","csize","cp_idx","c_idx","tosize","tpsize","tisize","tsize","tp_idx","solved_states","moveset","encode","t","to","max_depth","fbdrPrunerConfig","c1","c2","enc_c","e1","e2","e3","e4","htm_rwm","fbPrunerConfig","fbPrunerConfig_old","enc_ce","t1","sbPrunerConfig","lsePrunerConfig","edge_encode","enc","edge_enc","solve","min2phaseSolve","toMin2Phase","Solver","accum","min_depth","SState","pruners","state_count","prune_count","solve_depth","min_depth_","max_depth_","accum_","Moveable","depth","solution","STOP","CONTINUE","solutions","capacity","flag","sol","try_push","query","availableMoves","seen_encodings","new_cube","st","expand","getAvailableMove","k","base","prepareNextMoveable","depth_l","depth_r","log","getPruner","solverFactory","prunerConfig","pruner","dist","initialized","init","Uint8Array","frontier","total_expanded","new_frontier","newState","equal","cube2","Pruner","SsSolver","is_front","v","ssPrunerConfig","FsSolver","fsPrunerConfig","EOLRSolver","center_flag","barbie_mode","edge_idx","moves_ac","moves_mc","barb_moves","eolrPrunerConfig","all_solvers","CachedSolver","cache","useOld","min2phase_init","transformed_cube","to_cstimer_cube","is_solveable","min2phase_solve","table","FavListView","favList","dialogID","setDialogID","dialogDelete","autoFocus","addDialogOpen","setAddDialogOpen","addString","setAddString","handleAddClose","dialogAdd","aria-labelledby","DialogContentText","allSolvers","parseAddString","Table","TableHead","TableRow","TableCell","align","rowSpan","IconButton","TableBody","play","is_bright","main","page","icon","bar","description","TopBarView","toggleFav","toggleBright","handleInfoOpen","value_str","boxShadow","Toolbar","Select","MenuItem","Evaluator","SeqEvaluator","moveCost","moveCost_gen","QTMEvaluator","DefaultEvaluator","TwoGramEvaluator","moves_input","score","two_gram","curr_score","Number","parseFloat","meter","isNaN","getEvaluator","two_gram_meter","initialState","scramble","post_scramble","full_solution","orientation","pre_orientation","num_solution","show_mode","is_fb_solved","oris","changeBasis","get_oris","preori","paper2","title1","marginTop","border","configItem","paddingRight","stageText","textTransform","formControl","resetState","postScramble","ScrambleView","setState","ConfigView","fb_ori_str","display_mode_str","InputLabel","labelId","FormHelperText","parseInt","SolutionInputView","Date","now","defaultSolution","stages","current_moves","stage_idx","getMasksForStage","some","analyze_roux_solve","maxWidth","StageSolutionView","tags","Chip","StageSolutionListView","FullSolutionView","setStage","show","setShow","onMouseLeave","onMouseEnter","stageView","worker_raw","Worker","worker","Comlink","AnalyzerView","appState","setSolutions","cubieCube","solutions_to_display","sort","analyze","curr_solutions","effect","gt_md","gt_sm","TabPanel","children","index","other","role","hidden","modes","_getInitialHashLocation","location","hash","AppView","useCallback","newValue","handleInfoClose","showFav","dividers","gutterBottom","theme_flag","paddingY","Container","initialFavList","initialConfig","arr_ori_flag","evaluator","fbdrPosSelector2","ssEOSelector","favListManager","getFavList","setFavList","item1","configManager","getConfig","vers","undefined","keys","item2","setConfig","partial","newConfig","assign","AbstractStateM","StateFactory","createAlg","empty_alg","cmll_algs","trigger_algs","u_auf_algs","ori_algs","alg_generator","selector","algSet","lookup_algset","lookup","get_active_names","prefix","BlockTrainerStateM","solverL","solverR","scrambleMargin","scrambleCount","algDescWithMoveCount","expansionFactor","premoves","orientations","evalName","solverNames","totalSolutionCap","selectedSolutionCap","solverName","pm","pre","evaluate","algDescs","_solve_with_solvers","updateSolutionOnly","scrambleSolver","solutionLength","max","algDesc","getRandom","inputScramble","_solve","state1","_updateCase","movestr","conf","_updateCap","FbdrStateM","edgePositionMap","allowed_pedge","allowed_dr","dr_ep","dr_eo","find","_edge_piece_in_pattern","fbOnly","pairSolved","startsWith","active","_get_pair_solved_front","_get_random_fs_back","_get_random_fs_front","SsStateM","allowed_dr_eo_ep","ep_","drPositionMap","allowed_dr_eo_ep_patterns","_get_random_fb","FbStateM","is_l_only","centers","includes","pairs","cc_edges","_find_center_connected_edges","_get_random","FsStateM","LSEStateM","bars","lse_premove","lseEODef","lseEODefLookup","EOLRStateM","eo_arr","targetEO","eolrMCMode","compare","useBarbie","useFullScramble","_getEOType","acSolver","mcSolver","acLength","mcLength","CmllStateM","m2_away","lse_cube","generator","trig_generator","u_auf_generator","ori_generator","trigger_alg","cmll_alg","u_auf_alg","alg_str","_get2PhaseSolution","history","_generateCase","SolvingStateM","SolvedStateM","defaultKeyMapping","lseKeyMapping","DefaultKeyMapping","altKey","ctrlKey","metaKey","toUpperCase","LSEKeyMapping","getInitialState","initialStateName","reducer","code","stateM","onControl","onMove","reduceByKey","onConfig","reduceByConfig","rem","onReplay","reduceByFavlist","createMuiTheme","error","red","A400","themeDark","overrides","MuiDivider","keyCode","document","body","preventDefault","App","useReducer","appTheme","ThemeProvider","CssBaseline","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","createArray","bitCount","get8Parity","get12Parity","binarySearch","mid","val","fact","perm3","ud2std","std2ud","Cnk","length1","length2","createArrays","move2str","urfMove","ckmv","ckmv2","getFlip","getFlipSym","FlipR2S","EdgeConjugate","SymInv","temps","FlipS2R","setFlip","bitOdd","getTwist","getTwistSym","TwistR2S","CornConjugate","TwistS2R","setTwist","twst","getUDSlice","setUDSlice","getMPerm","setMPerm","getMid3","idxA","idxB","setMid3","getURtoUL","getDRtoDL","setEdgePerm","getEdgePerm","getCPermSym","EPermR2S","get8Perm","e2c","CPermS2R","getEPermSym","EPermS2R","URFConjugate","CornMult","urf2","urf1","EdgeMult","invCubieCube","corn","cperm","twist","eperm","flip","set8Perm","cctemp","prod","oriA","oriB","ed","CubeSym","moveCube","SymMult","SymMove","Sym8Mult","Sym8Move","Sym8MultInv","SymMoveUD","MtoEPerm","merge","UDSliceMove","TwistMove","FlipMove","UDSliceConj","UDSliceTwistPrun","UDSliceFlipPrun","TwistFlipPrun","Mid3Move","Mid32MPerm","CParity","CPermMove","EPermMove","MPermMove","MPermConj","MCPermPrun","MEPermPrun","urfidx","csym","mid3","tsym","fsym","corn0","csym0","mid30","e10","e20","prun","maxlength2","valid1","valid2","phase1","maxl","lm","cornx","ex","get4Parity","esym","phase2","sb","urf","init2","slicex","twistx","tsymx","flipx","fsymx","midx","edgex","esymx","csymx","initialize","mc","temp","f2","u4","lr2","found","occ","CubieInit","SymState","SymStateF","check","done","sym","symF","fsymxx","idxx","symx","CoordInit","module","exports","cc","Solve","randomCube"],"mappings":"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","file":"static/js/main.712ed645.chunk.js","sourcesContent":["export enum Face {\n    U = 0, D, F, B, L, R, X\n}\n\nconst U = Face.U;\nconst D = Face.D;\nconst F = Face.F;\nconst B = Face.B;\nconst L = Face.L;\nconst R = Face.R;\nexport {U, D, F, B, L, R};\n\nexport enum Typ {\n    C = 0, E, T\n}\nconst C = Typ.C;\nconst E = Typ.E;\nconst T = Typ.T;\nexport {C, E, T}\n\nexport type CubieT = {\n    co: Array<number>,\n    cp: Array<number>,\n    eo: Array<number>,\n    ep: Array<number>,\n    tp: Array<number>\n}\n\nexport type FaceletCube = Array<string>\n\nexport type CornerCoord = [Face, Face, Face]\nlet corners_coord : Array<CornerCoord> = [\n    [U,F,L], [U,L,B], [U,B,R], [U,R,F],\n    [D,L,F], [D,B,L], [D,R,B], [D,F,R]\n]\n\nexport type EdgeCoord = [Face, Face]\nlet edges_coord : Array<EdgeCoord> = [\n    [U,F], [U,L], [U,B], [U,R],\n    [D,F], [D,L], [D,B], [D,R],\n    [F,L], [B,L], [B,R], [F,R],\n]\nexport type CenterCoord = [Face]\nlet centers_coord : Array<CenterCoord> = [\n    [U], [D], [F], [B], [L], [R]\n]\n\nlet cstimer_corners_coord : Array<CornerCoord> = [\n    [U,R,F],[U,F,L], [U,L,B], [U,B,R],\n    [D,F,R],[D,L,F], [D,B,L], [D,R,B]\n]\n\nlet cstimer_edges_coord : Array<EdgeCoord> = [\n    [U, R], [U,F], [U,L], [U,B],\n    [D, R], [D,F], [D,L], [D,B],\n    [F, R], [F,L], [B,L], [B,R]\n]\n\nexport {corners_coord, edges_coord, centers_coord, cstimer_corners_coord, cstimer_edges_coord }\n\nexport type FaceletMapping = [Face[], Face[]][]\n\nexport type PermChg = [number, number]\nexport type OriChg = number\n\nexport type MoveT = {\n    cpc: Array<PermChg>,\n    coc: Array<OriChg>,\n    epc: Array<PermChg>,\n    eoc: Array<OriChg>,\n    tpc: Array<PermChg>,\n    name: string\n}\n\nlet u : MoveT = {\n    cpc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    coc: [0, 0, 0, 0],\n    epc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"U\"\n}\n\nlet f : MoveT = {\n    cpc: [[0, 3], [3, 7], [7, 4], [4, 0]],\n    coc: [1, 2, 1, 2],\n    epc: [[0, 11], [11, 4], [4, 8], [8, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"F\",\n}\n\nlet r : MoveT = {\n    cpc: [[3, 2], [2, 6], [6, 7], [7, 3]],\n    coc: [1, 2, 1, 2],\n    epc: [[3, 10], [10, 7], [7, 11], [11, 3]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"R\",\n}\n\nlet l : MoveT = {\n    cpc: [[0, 4], [4, 5], [5, 1], [1, 0]],\n    coc: [2, 1, 2, 1],\n    epc: [[1, 8], [8, 5], [5, 9], [9, 1]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"L\",\n}\n\nlet d : MoveT = {\n    cpc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    coc: [0, 0, 0, 0],\n    epc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"D\",\n}\n\nlet b : MoveT = {\n    cpc: [[1, 5], [5, 6], [6, 2], [2, 1]],\n    coc: [2, 1, 2, 1],\n    epc: [[2, 9], [9, 6], [6, 10], [10, 2]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"B\",\n}\n\nlet m : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[0, 4], [4, 6], [6, 2], [2, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 2], [2, 1], [1, 3], [3, 0]],\n    name: \"M\",\n}\n\nlet e : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[8, 9], [9, 10], [10, 11], [11, 8]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[2, 4], [4, 3], [3, 5], [5, 2]],\n    name: \"E\",\n}\n\nlet s : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[1, 3], [3, 7], [7, 5], [5, 1]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 5], [5, 1], [1, 4], [4, 0] ],\n    name: \"S\",\n}\n\nexport {u, d, f, b, l, r, m, e, s}\n\nexport type StickerT = [number, number, Typ]\nexport type StickerExtT = [number, number, Typ, Face]\nexport type FaceletT = Array<StickerT>\n\nlet u_face : FaceletT = [\n    [1, 0, C], [2, 0, E], [2, 0, C],\n    [1, 0, E], [0, 0, T], [3, 0, E],\n    [0, 0, C], [0, 0, E], [3, 0, C]\n  ]\n\nlet f_face : FaceletT = [\n    [0, 1, C], [0, 1, E], [3, 2, C],\n    [8, 0, E], [2, 0, T], [11,0, E],\n    [4, 2, C], [4, 1, E], [7, 1, C]\n]\n\nexport {u_face, f_face}\n\nconst FBpairPos : [number, number, number, number][] = [\n    [0, 0, 8, 1], [0, 1, 1, 0], [ 0, 2 , 0, 1],\n    [1, 1, 2, 0], [1, 2, 1, 1],\n    [2, 0, 10, 1], [2, 1, 3, 0], [2, 2, 2, 1],\n    [3, 0, 11, 0], [3, 1, 0, 0], [3, 2, 3, 1],\n    [4, 0, 8, 0], [4, 1, 4, 0],\n    [6, 0, 10, 0], [6, 1, 6, 0], [6, 2, 7, 1],\n    [7, 0, 11, 1], [7, 1, 7, 0], [7, 2, 4, 1]\n]\n\nexport {FBpairPos}\n\nexport type FaceletCubeT = Array<Array<Face>>\n\n// A Cube can be in two representations: cubieCube or faceletCube\n\nlet color_map =`\\\n   UUU\n   UUU\n   UUU\nLLLFFFRRRBBB\nLLLFFFRRRBBB\nLLLFFFRRRBBB\n   DDD\n   DDD\n   DDD`\n\nexport {color_map}\n","let rand_int = (r: number) => {\n    return Math.floor(Math.random() * r)\n}\n\nlet rand_incl = (l: number, r: number) => {\n    return rand_int(r - l + 1) + l;\n}\nlet rand_choice = function<T>(arr: T[]) {\n    return arr[rand_int(arr.length)]\n}\n\nlet rand_shuffle = function<T>(arr: T[]) {\n    for (let i = 0, l = arr.length; i < l - 1; i++) {\n        let j = rand_incl(i, l - 1)\n        let tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp\n    }\n    return arr\n}\n\nfunction cartesianProduct<T>(...allEntries: T[][]): T[][] {\n    return allEntries.reduce<T[][]>(\n      (results, entries) =>\n        results\n          .map(result => entries.map(entry => result.concat([entry])))\n          .reduce((subResults, result) => subResults.concat(result), []),\n      [[]]\n    )\n  }\n\nlet getParity = (perm: number[]) => {\n    let visited = Array(perm.length).fill(false)\n    let follow = (i: number, cnt: number) : number => {\n        if (visited[i]) {\n            return 0\n        } else {\n            visited[i] = 1\n            if (visited[perm[i]]) {\n                return cnt;\n            } else\n                return follow(perm[i], cnt + 1)\n        }\n    }\n    let res = 0\n    for (let x of perm) {\n        res += follow(x, 0)\n    }\n    return res\n}\n\nlet arrayEqual = function<T>(arr1: T[], arr2: T[]) {\n    if (arr1.length !== arr2.length) return false;\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) return false;\n    }\n    return true;\n}\n\nlet encodeArr = function(base: number, rarr: number[]) {\n    let int = 0\n    for (let i = rarr.length - 1; i >= 0; i--)\n        int = rarr[i] + int * base\n    return int\n}\n\nexport {rand_int, rand_choice, rand_shuffle, getParity, arrayEqual, encodeArr, cartesianProduct}","import React, { useEffect } from 'react'\n\nimport { FaceletCubeT, Face } from \"../lib/Defs\";\nimport * as THREE from 'three';\nimport { arrayEqual } from '../lib/Math';\nimport { Vector3 } from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport * as chroma from 'chroma-js';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\ntype Config = {\n    cube: FaceletCubeT, width: number, height: number, colorScheme: Array<string>, facesToReveal: Face[],\n    theme: string,\n    hintDistance?: number,\n    enableControl? : boolean\n}\n\n/*\nHow to propagate control of keypress ..? maybe not here, in the app.\n\nLet's look at click analogy: if a user click on sub-component,\nthat message should be propagated upwards to the parent.\n\nThat is, \"keydown\" should transform to some kind of message, e.g. the resulting cube state\nto be passed to the App, which then decides whether to trigger state change or let the cube keep being solved\n\n*/\n\n\ntype AxesInfo = [THREE.Vector3, THREE.Euler]\nconst TAU = Math.PI * 2;\nconst axesInfo: [THREE.Vector3, THREE.Euler][] = [\n    // UDFBLR\n    [new THREE.Vector3(0, 1, 0), new THREE.Euler(-TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, -1, 0), new THREE.Euler(TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, 0, 1), new THREE.Euler(0, 0, 0)],\n    [new THREE.Vector3(0, 0, -1), new THREE.Euler(0, TAU / 2, 0)],\n    [new THREE.Vector3(-1, 0, 0), new THREE.Euler(0, -TAU / 4, 0)],\n    [new THREE.Vector3(1, 0, 0), new THREE.Euler(0, TAU / 4, 0)],\n];\n\n\ntype ConfigT = {width: number, height: number, colorScheme: Array<string>, mode?: string,\n    faces?: Face[], theme?: string, hintDistance?: number,     enableControl? : boolean\n}\n\nconst roundedFace = ((rounded?: number[], cornerRadius?: number, ) => {\n    cornerRadius = cornerRadius || 0.1\n    rounded = rounded || [1, 1, 1, 1]\n    let geo = new THREE.Geometry()\n    let cornerVertices = []\n    let cornerCenter = new THREE.Vector3(1 - cornerRadius, 1 - cornerRadius, 0)\n    let squareCorner = new THREE.Vector3(1, 1, 0)\n    for (let i = 0; i <= 90; i += 10) {\n        let degree = (i * Math.PI) / 180\n        cornerVertices.push( \n            cornerCenter.clone().add(new THREE.Vector3(Math.cos(degree), Math.sin(degree), 0).multiplyScalar(cornerRadius))\n        )\n    }\n    for (let i = 0; i < 4; i++) {\n        if (rounded[i]) {\n            geo.vertices.push(...cornerVertices)\n        } else {\n            geo.vertices.push(squareCorner.clone())\n        }\n        cornerVertices = cornerVertices.map(x => x.clone().applyAxisAngle(new Vector3(0, 0, 1), 0.5 * Math.PI))\n        squareCorner.applyAxisAngle(new Vector3(0, 0, 1), 0.5 * Math.PI)\n    }\n    for (let i = 0; i< geo.vertices.length; i++) {\n        let i1 = (i + 1) % geo.vertices.length;\n        let face = new THREE.Face3(geo.vertices.length, i, i1)\n        geo.faces.push(face)\n    }\n\n    geo.vertices.push(new Vector3(0, 0, 0));\n\n    return geo\n})\n\n\n\nconst redraw_cube = function (cube: FaceletCubeT, config: ConfigT ) {\n    let { width, height, colorScheme, mode, faces, theme, enableControl} = config\n    let hintDistance = config.hintDistance || 3\n    const bgColor = theme === \"bright\" ? \"#eeeeef\" : '#252525' \n\n    mode = mode || \"FRU\"\n    let facesToReveal = faces || [Face.L, Face.B, Face.D]\n\n    const scene = new THREE.Scene()\n    const angle = 50\n    const camera = new THREE.PerspectiveCamera(angle, width / height, 0.1, 1000)\n\n    const mag = 1.0\n    const alpha = 0.5\n    const enableBorder = true\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    renderer.setSize(width, height, true);\n    //renderer.setViewport( 0, 0, width * window.devicePixelRatio, height * window.devicePixelRatio);\n    renderer.setClearColor(bgColor) // #70788a') //#5a606e') // '#373B43') // '#eeeeee')\n    renderer.setPixelRatio(window.devicePixelRatio)\n\n    const controls = new OrbitControls( camera, renderer.domElement );\n    controls.enabled = !!config.enableControl\n\n    const angleScale = Math.sin(70 / 180 * Math.PI)  /  Math.sin(angle / 180 * Math.PI)\n    const scale = (hintDistance > 5) ? .96 * angleScale : .9 * angleScale\n    const cameraPosition = (mode === \"FRU\") ? new THREE.Vector3(2.5 * scale, 3.5 * scale, 3 * scale) : new THREE.Vector3(0 / 1.1, 3 / 1.1, 3 / 1.1)\n    camera.position.copy(cameraPosition)\n    camera.aspect = width / height;\n    camera.lookAt(new THREE.Vector3(0, 0, 0))\n\n    let stickers_tmpl: THREE.Mesh[], stickerwrap_tmpl: THREE.Mesh\n\n    const geos : THREE.Geometry[] = []; // new THREE.PlaneGeometry(0.89 * mag * 2, 0.89 * mag * 2)\n    const geo_border = new THREE.PlaneGeometry(2.0, 2.0)//1.0 * mag * 2, 1.0 * mag * 2)\n\n    let materials_border = new THREE.MeshBasicMaterial({ color: 0x000000, side: THREE.FrontSide })\n    stickerwrap_tmpl = (() => {\n        let mesh = new THREE.Mesh(geo_border, materials_border)\n        mesh.setRotationFromEuler(axesInfo[0][1])\n        return mesh\n    })()\n\n    const sticker_scale = 0.88\n    const corner_radius = 0.4\n    const hint_scale = 0.95\n    const rounded_patterns = [\n        [0, 0, 0, 1],\n        [0, 0, 1, 1],\n        [0, 0, 1, 0],\n        [1, 0, 0, 1],\n        [1, 1, 1, 1],\n        [0, 1, 1, 0],\n        [1, 0, 0, 0],\n        [1, 1, 0, 0],\n        [0, 1, 0, 0]\n    ];\n\n    function drawCube(faces: FaceletCubeT, colorScheme: Array<string>): THREE.Group {\n        //console.log(\"update color scheme \", colorScheme_)\n        let materials = Array(7).fill(0).map((_, i) => {\n            let mat = new THREE.MeshBasicMaterial({ color: colorScheme[i], side: THREE.DoubleSide, vertexColors: THREE.FaceColors });\n            mat.alphaTest = alpha;\n            return mat\n        })\n\n        stickers_tmpl = materials.map((mat) => {\n            return rounded_patterns.map(pattern => {\n                let geo = roundedFace(pattern, corner_radius)\n                geos.push(geo)\n                let mesh = new THREE.Mesh(geo, mat)\n                mesh.scale.set(sticker_scale, sticker_scale, sticker_scale)\n                mesh.setRotationFromEuler(axesInfo[0][1])\n                return mesh\n            })\n        }).flat()\n\n        let hint_mesh = Array(7).fill(0).map((_, i) => {\n            let color = (theme === \"bright\") \n                ? chroma.mix(colorScheme[i], 'white', 0.18).hex()\n               :  chroma.mix(colorScheme[i], 'black', 0.35).hex()\n \n               // \n            //chroma.default(colorScheme[i]).brighten(0.7).hex()\n                  //desaturate(2).hex() //darken(0.5).hex()\n            let mat = new THREE.MeshBasicMaterial({ color, side: THREE.DoubleSide, vertexColors: THREE.FaceColors });\n\n            let geo = roundedFace([1,1,1,1], corner_radius)\n            geos.push(geo)\n            let mesh = new THREE.Mesh(geo, mat)\n            mesh.scale.set(hint_scale, hint_scale, hint_scale)\n            mesh.setRotationFromEuler(axesInfo[0][1])\n            return mesh\n        })\n\n\n        const cube = new THREE.Group();\n        for (let i = 0; i < 6; i++) {\n            const cubie = new THREE.Group();\n            const rot = new THREE.Matrix4().makeRotationFromEuler(axesInfo[i][1]);\n            const rot1 = new THREE.Matrix4().makeRotationFromEuler(axesInfo[1][1]);\n            cubie.setRotationFromMatrix(rot.multiply(rot1))\n            for (let z = -1; z <= 1; z++) {\n                for (let x = -1; x <= 1; x++) {\n                    let idx = (z + 1) * 3 + (x + 1)\n\n                    const curr_tmpl = stickers_tmpl[faces[i][idx] * 9 + idx]\n                    const sticker = curr_tmpl.clone()\n                    const stickerwrap = stickerwrap_tmpl.clone()\n\n                    const eps = 0.05\n                    sticker.position.copy(new THREE.Vector3(x * 2, 3, z * 2))\n                    stickerwrap.position.copy(new THREE.Vector3(x * 2, 3 - eps, z * 2))\n\n                    if (facesToReveal.indexOf(i) > -1) { // (i === 5 && mode === \"UF\")) {\n                        const stickerhint = hint_mesh[faces[i][idx]].clone()\n                        stickerhint.position.copy(new THREE.Vector3(x * 2, 3 + hintDistance, z * 2))\n                        cubie.add(stickerhint)\n                    }\n                    if (enableBorder)\n                        cubie.add(stickerwrap)\n\n                    cubie.add(sticker)\n                }\n\n            }\n            cube.add(cubie)\n        }\n        cube.scale.set(1 / 3, 1 / 3, 1 / 3)\n        return cube\n    }\n\n    let cubeG = drawCube(cube, colorScheme)\n    scene.add(cubeG)\n\n    const render = () => {\n        controls.update();\n        renderer.render(scene, camera)\n    }\n    render()\n\n    let frameID = -1\n    const animate = () => {\n        frameID = requestAnimationFrame(animate)\n        renderer.render(scene, camera)\n    }\n    animate()\n\n    const updateCubeAndColor = (cube: FaceletCubeT, colorScheme: Array<string>) => {\n        scene.remove(cubeG)\n        cubeG = drawCube(cube, colorScheme)\n        scene.add(cubeG)\n        renderer.render(scene, camera)\n        return renderer\n    }\n\n    const cleanup = () => {\n        geos.forEach(g => g.dispose())\n        materials_border.dispose()\n        geo_border.dispose()\n        scene.remove(cubeG)\n        cancelAnimationFrame(frameID)\n    }\n    return {\n        updateCubeAndColor,\n        getRenderer: () => renderer,\n        cleanupFunc: cleanup,\n        renderControls: render\n    }\n    //let defaultColorScheme = [ 0x00ff00, 0x0000ff, 0xff0000,0xff8800,0xffff00, 0xffffff]\n}\n\nlet drawCube = (function(){\n    let config_cache : ConfigT | null = null\n    let painter : Painter | null = null\n    let func = (cube: FaceletCubeT, config: ConfigT) => {\n        if (config_cache === null) {\n            painter?.cleanupFunc()\n\n            painter = redraw_cube(cube, config)\n            config_cache = config\n            return painter\n        }\n        else if (config.width === config_cache.width && config.height === config_cache.height &&\n            arrayEqual(config.faces || [], config_cache.faces || []) && config.theme === config_cache.theme &&\n            config.hintDistance === config_cache.hintDistance && config.enableControl === config_cache.enableControl) {\n\n            painter?.updateCubeAndColor(cube, config.colorScheme)\n            config_cache = config\n            return painter!\n        } else {\n            painter?.cleanupFunc()\n            painter = redraw_cube(cube, config)\n            config_cache = config\n            return painter!\n        }\n    }\n    return func\n})\n\ntype Painter = {\n    updateCubeAndColor: (cube: FaceletCubeT, scheme: Array<string>) => THREE.WebGLRenderer,\n    getRenderer: () => THREE.WebGLRenderer,\n    cleanupFunc: () => void,\n    renderControls: () => void\n\n}\n\nfunction CubeSim(props: Config) {\n    const mount = React.useRef<HTMLDivElement | null>(null)\n    let { width, height, colorScheme, facesToReveal, hintDistance, theme} = props\n    let cubePainter = React.useMemo(drawCube, [])\n\n\n    const gt_xs = useMediaQuery(useTheme().breakpoints.up('sm'));\n    const enableControl = gt_xs\n\n    let painter = cubePainter(props.cube, {\n            width, height, colorScheme, faces: facesToReveal, theme, hintDistance, enableControl })\n\n    useEffect( () => {\n        let dom = mount.current!\n        dom.appendChild(painter.getRenderer().domElement) //renderer.domElement)\n        return () => {\n            dom.removeChild(painter.getRenderer().domElement)\n        }\n    })\n\n    return <div\n        ref={mount}\n        style={{ width: props.width, height: props.height, zIndex: 1 }}\n    />;\n}\n\nexport default CubeSim","import { MoveT, OriChg, PermChg, StickerT, StickerExtT, CornerCoord, EdgeCoord, cstimer_corners_coord, cstimer_edges_coord, CenterCoord, centers_coord } from \"./Defs\";\nimport { u, d, f, b, l, r, m, e, s} from \"./Defs\";\nimport { FaceletT, FaceletCubeT, corners_coord, edges_coord, u_face, f_face, color_map } from \"./Defs\";\nimport { Typ, Face, C, E, T, U, D, F, B, L, R } from \"./Defs\";\nimport { rand_int, rand_shuffle, getParity, rand_choice, arrayEqual } from \"./Math\";\n\nconst C_MOD = 3;\nconst E_MOD = 2;\nconst T_MOD = 1;\n\nexport class CubieCube {\n    cp: number[] = [];\n    co: number[] = [];\n    ep: number[] = [];\n    eo: number[] = [];\n    tp: number[] = [];\n    // The addition of tp is not necessary, but helps us deal with slice moves in Roux during search and simcube.\n    deserialize(s: string) {\n        let obj = JSON.parse(s)\n        this.set(obj);\n        return this\n    }\n    serialize() {\n        let {cp, co, ep, eo, tp} = this\n        return JSON.stringify({cp, co, ep, eo, tp});\n    }\n\n    Id() : CubieCube {\n        this.set({\n            cp: [0, 1, 2, 3, 4, 5, 6, 7],\n            co: [0, 0, 0, 0, 0, 0, 0, 0],\n            ep: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n            eo: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            tp: [0, 1, 2, 3, 4, 5]\n        })\n        return this\n    }\n    clone() : CubieCube {\n        return new CubieCube({\n            cp: [...this.cp],\n            co: [...this.co],\n            ep: [...this.ep],\n            eo: [...this.eo],\n            tp: [...this.tp]\n        })\n    }\n    constructor(value?: {cp: number[], co: number[], ep: number[], eo: number[], tp?: number[]} | CubieCube) {\n        if (value instanceof CubieCube) {\n            this.set({\n                cp: value.cp, co: value.co, ep: value.ep, eo: value.eo, tp: value.tp\n            })\n        }\n        else if (value) {\n            this.cp = value.cp\n            this.co = value.co\n            this.ep = value.ep\n            this.eo = value.eo\n            this.tp = value.tp || [0, 1, 2, 3, 4, 5] // UD FB LR\n        } else {\n            this.Id()\n        }\n    }\n    set(value: {cp?: number[], co?: number[], ep?: number[], eo?: number[], tp?: number[]} | CubieCube) {\n        this.cp = value.cp || this.cp\n        this.co = value.co || this.co\n        this.ep = value.ep || this.ep\n        this.eo = value.eo || this.eo\n        this.tp = value.tp || this.tp\n    }\n    _apply_partial(o: Array<number>, p: Array<number>, oc: Array<OriChg>, pc: Array<PermChg>, mod: number) {\n        let o_new = [...o];\n        let p_new = [...p];\n        console.assert(oc.length === pc.length)\n\n        for (let i = 0; i < oc.length; i++) {\n            //let [src, dst] = pc[i];\n            let src = pc[i][0], dst = pc[i][1];\n            p_new[dst] = p[src];\n            o_new[dst] = (o[src] + oc[i]) % mod;\n        }\n        return [o_new, p_new]\n    }\n\n    // all side-effect-less\n    apply_one(move: Move) {\n        let [co, cp] = this._apply_partial(this.co, this.cp, move.coc, move.cpc, C_MOD)\n        let [eo, ep] = this._apply_partial(this.eo, this.ep, move.eoc, move.epc, E_MOD)\n        let toc = Array(move.tpc.length).fill(0)\n        let [, tp] = this._apply_partial([0, 0, 0, 0, 0, 0], this.tp, toc, move.tpc, T_MOD)\n        return new CubieCube({ co, cp, eo, ep, tp })\n    }\n\n    apply(move: Move | Array<Move> | MoveSeq | string): CubieCube {\n        if (Array.isArray(move) || move instanceof MoveSeq) {\n            let moves = Array.isArray(move) ? move : move.moves\n            let cube = this.clone()\n            for (let i = 0; i < moves.length; i++) {\n                cube = cube.apply_one(moves[i])\n            }\n            return cube\n        } else if (typeof move === \"string\") {\n            return this.apply(new MoveSeq(move))\n        }\n        else {\n            return this.apply_one(move)\n        }\n    }\n\n    static _rotate_coord(fs: Face[]) {\n        let faces = [...fs] as Face[]\n        let last_face = faces[faces.length - 1];\n        for (let i = faces.length - 1; i > 0; i--) {\n            faces[i] = faces[i - 1];\n        }\n        faces[0] = last_face\n        return faces\n    }\n    static _backward_rotate_coord(fs: Face[]){\n        let faces = [...fs] as Face[]\n        let first_face = faces[0]\n        for (let i = 0; i < faces.length - 1; i++) {\n            faces[i] = faces[i + 1];\n        }\n        faces[faces.length - 1] = first_face\n        return faces\n    }\n\n    // facelet mapping: from position to piece\n    _to_facelet_mapping(corners_coord: CornerCoord[], edges_coord: EdgeCoord[], centers_coord: CenterCoord[]) {\n        let facelet_mapping : [Face[], Face[]][]= []\n\n        for (let i = 0; i < 8; i++) {\n            let pos = corners_coord[i] as Face[]\n            let piece = corners_coord[this.cp[i]] as Face[]\n\n            for (let j = 0; j < this.co[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i < 12; i++) {\n            let pos = edges_coord[i] as Face[]\n            let piece = edges_coord[this.ep[i]] as Face[]\n            for (let j = 0; j < this.eo[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i<6;i++) {\n            let pos = centers_coord[i]\n            let piece = centers_coord[this.tp[i]] as Face[]\n            facelet_mapping.push([ pos, piece])\n        }\n        return facelet_mapping\n    }\n\n    _from_facelet_mapping (fm: [Face[], Face[]][], custom_corners_coord: CornerCoord[], custom_edges_coord: EdgeCoord[], custom_centers_coord: CenterCoord[] ) {\n        let cube = new CubieCube()\n\n        let match_pos_piece = (pos: Face[], piece: Face[], coord: Face[][], parity: number) : [number, number, number]=> {\n            let expected = new Map(coord.map( (x, i) => [x.toString(), i]))\n            let ori = 0\n            while (!expected.has(pos.toString())) {\n                pos = CubieCube._backward_rotate_coord(pos)\n                ori--;\n                if (ori <= -parity) break;\n            }\n            while (!expected.has(piece.toString())) {\n                piece = CubieCube._backward_rotate_coord(piece)\n     \n                ori++;\n                if (ori >= 10) {\n                    console.warn(\"can't match piece\", piece, expected)\n                    break\n                }\n            }\n\n            ori = (ori + parity) % parity;\n            return [ori, expected.get(pos.toString())!, expected.get(piece.toString())! ]\n        }\n\n        for (let coord_pair of fm) {\n            let pos = coord_pair[0], piece = coord_pair[1]\n            let coord : Face[][] = (pos.length === 2) ? custom_edges_coord : \n                        (pos.length === 3) ? custom_corners_coord :\n                         custom_centers_coord ;\n            let [newOri,newpos,newPerm] = match_pos_piece(pos, piece, coord, pos.length);\n\n            //console.log( pp([pos, piece]), [newOri, newpos,newPerm])\n            if (pos.length === 2) {\n                cube.eo[newpos] = newOri;\n                cube.ep[newpos] = newPerm;\n            } else if (pos.length === 3){\n                cube.co[newpos] = newOri;\n                cube.cp[newpos] = newPerm;\n            } else {\n                cube.tp[newpos] = newPerm;\n            }\n        }\n        return cube\n    }\n\n    to_cstimer_cube() {\n        let facelet_mapping = this._to_facelet_mapping(corners_coord, edges_coord, centers_coord)\n        let cube = this._from_facelet_mapping(facelet_mapping, cstimer_corners_coord, cstimer_edges_coord, centers_coord)\n        return cube\n    }\n\n    is_solveable() {\n        if (this.tp[0] !== 0) {\n            this.apply(new MoveSeq(\"M2\")) // assuming lse\n        }\n        let perm_correct = (getParity(this.cp) + getParity(this.ep)) % 2 === 0\n        let ori_correct = (this.co.reduce((x, y) => x + y, 0) % 3 === 0) && (this.eo.reduce((x, y) => x + y, 0) % 2 === 0)\n        return perm_correct && ori_correct\n    }\n\n    changeBasis(s: MoveSeq) {\n        // only take x and y for now\n        let facelet_mapping = this._to_facelet_mapping(corners_coord, edges_coord, centers_coord)\n\n        let transformed_mapping = s.moves.reduce( (mapping, move) : [Face[], Face[]][] => {\n            let face_mapping = Object.fromEntries(move.tpc)\n            //console.log(\"applying face mapping for \", move.name, face_mapping)\n            //console.log(\"before\", pp(mapping))\n            let result = mapping.map( ([face_pos, face_target]) => \n                [face_pos.map(f => face_mapping[f] ?? f ),\n                 face_target.map(f => face_mapping[f] ?? f) ]\n            )\n            //console.log('after', pp(result))\n            return result as any \n        } , facelet_mapping)\n        //console.log(s.toString(), facelet_mapping, transformed_mapping)\n        let cube = this._from_facelet_mapping(transformed_mapping, corners_coord, edges_coord, centers_coord)\n        return cube\n        //let cube = this._from_facelet_mapping(facelet_mapping, corners_coord, edges_coord, centers_coord)\n    }\n}\n\n\n/* Moves */\n/* We will generate all the moves based on the base moves and rotations, and return them in an array */\nexport class Move {\n    cpc: Array<PermChg> = [];\n    coc: Array<OriChg> = [];\n    epc: Array<PermChg> = [];\n    eoc: Array<OriChg> = [];\n    tpc: Array<PermChg> = [];\n    name: string = \"\";\n    constructor(arg?: Array<Move> | CubieCube | Move | MoveT, name?: string) {\n        if (Array.isArray(arg)) {\n            this.from_moves(arg, name!)\n        } else if (arg instanceof Move){\n            this.cpc = [...arg.cpc]\n            this.coc = [...arg.coc]\n            this.epc = [...arg.epc]\n            this.eoc = [...arg.eoc]\n            this.tpc = [...arg.tpc]\n            this.name = name!\n        } else if (arg instanceof CubieCube) {\n            this.from_cube(arg, name!)\n        } else if (arg) {\n            this.set(arg)\n        }\n    }\n    set(move: Move | MoveT) {\n        this.cpc = move.cpc\n        this.coc = move.coc\n        this.epc = move.epc\n        this.eoc = move.eoc\n        this.tpc = move.tpc\n        this.name = move.name\n    }\n    from_cube(cube: CubieCube, name: string) {\n        let get_change = (p: Array<number>, o: Array<number>, acc_p: Array<PermChg>, acc_o: Array<OriChg>) => {\n            for (let i = 0; i < p.length; i++) {\n                if (i === p[i] && o[i] === 0) {\n                } else {\n                    acc_p.push([p[i], i]);\n                    acc_o.push(o[i]);\n                }\n            }\n        }\n        get_change(cube.cp, cube.co, this.cpc, this.coc);\n        get_change(cube.ep, cube.eo, this.epc, this.eoc);\n        get_change(cube.tp, [0, 0, 0, 0, 0, 0], this.tpc, []);\n        this.name = name\n        return this\n    }\n    from_moves (moves: Move[], name: string) {\n        this.from_cube(new CubieCube().apply(moves), name)\n        return this\n    }\n    clone() {\n        return new Move(this, this.name)\n    }\n    static make_rot_set(move: Move): Array<Move> {\n        return [move,\n            new Move().from_moves([move, move], move.name + \"2\"),\n            new Move().from_moves([move, move, move], move.name + \"'\"),\n        ]\n    }\n\n    static generate_base_moves = () => {\n        let make_rot_set = Move.make_rot_set\n        let us = make_rot_set(new Move(u));\n        let fs = make_rot_set(new Move(f));\n        let rs = make_rot_set(new Move(r));\n        let ls = make_rot_set(new Move(l));\n        let ds = make_rot_set(new Move(d));\n        let bs = make_rot_set(new Move(b));\n        let ms = make_rot_set(new Move(m));\n        let es = make_rot_set(new Move(e));\n        let ss = make_rot_set(new Move(s));\n\n        let rw = new Move([new Move(r), ms[2]], \"r\")\n        let rws = make_rot_set(rw)\n        let lw = new Move([new Move(l), new Move(m)], \"l\")\n        let lws = make_rot_set(lw)\n        let uw = new Move([new Move(u), new Move(e)], \"u\")\n        let uws = make_rot_set(uw)\n\n        let x = new Move([new Move(r), ls[2], ms[2]], \"x\")\n        let xs = make_rot_set(x)\n        let y = new Move([new Move(u), new Move(e), ds[2]], \"y\")\n        let ys = make_rot_set(y)\n        let z = new Move([x, y, x, x, x], \"z\")\n        let zs = make_rot_set(z)\n\n        let id = new Move(new CubieCube(), \"id\")\n        let moves = [\n            id,\n            us, fs, rs, ls, ds, bs, ms, es, ss,\n            xs, ys, zs,\n            rws, lws, uws\n        ].flat()\n        let moves_dict: { [key: string]: Move } = Object.create({})\n        moves.forEach(m => moves_dict[m.name] = m)\n        return moves_dict\n    }\n    static all: {[key: string]: Move} = Move.generate_base_moves();\n\n    inv(): Move {\n        let name: string\n        switch (this.name[this.name.length - 1]) {\n            case \"'\": name = this.name.slice(0, this.name.length - 1); break\n            case \"2\": name = this.name; break\n            default: name = this.name + \"'\"\n        }\n        return Move.all[name]\n    }\n\n    toString() {\n        return this.name\n    }\n}\n\n\nexport class MoveSeq {\n    moves: Move[] = [];\n\n    constructor(moves: Move[] | string) {\n        if (typeof moves === \"string\") {\n            this.parse(moves);\n        } else {\n            this.moves = moves\n        }\n    }\n\n    static _combine(move1: Move, move2: Move) : MoveSeq {\n        const getCnt = (name : string) => {\n            if (name.length === 1) return 1\n            return name[1] === \"2\" ? 2 : 3\n        }\n        const getStr = (cnt : number) => {\n            return (cnt === 1) ? \"\" : (cnt === 2 ? \"2\" : \"'\")\n        }\n        if (move1.name[0] === move2.name[0]) {\n            let cnt = (getCnt(move1.name) + getCnt(move2.name)) % 4\n            if (cnt === 0) return new MoveSeq([])\n            else return new MoveSeq([ Move.all[move1.name[0] + getStr(cnt)] ])\n        } else {\n            return new MoveSeq([move1, move2])\n        }\n    }\n\n    remove_setup() {\n        let rotset = new Set([\"x\", \"x'\", \"x2\", \"y\", \"y'\", \"y2\", \"z\", \"z'\", \"z2\"]);\n        while (this.moves.length > 0 && rotset.has(this.moves[0].name)) {\n            this.moves.shift()\n        }\n        return this\n    }\n\n    parse_line(str: string) {\n        let tokens = []\n        let token = \"\"\n        let comment_idx = str.search(/\\/\\//)\n        if (comment_idx > -1) str = str.slice(0, comment_idx)\n        for (let i = 0; i < str.length; i++) {\n            let ch = str[i]\n            if (ch === '2' || ch === '\\'') {\n                if (token.length === 1) {\n                    token += str[i];\n                    tokens.push(token)\n                    token = \"\"\n                }\n            } else if (ch === ' ') {\n                if (token.length > 0) {\n                    tokens.push(token); token = \"\";\n                }\n            } else {\n                const ord = ch.charCodeAt(0)\n                if ( (65 <= ord && ord < 65 + 26) || (97 <= ord && ord < 97 + 26)) {\n                    if (token.length > 0) {\n                        tokens.push(token)\n                        token = \"\"\n                    }\n                    token += str[i]\n                }\n            }\n        }\n        let moves = []\n        if (token.length > 0) tokens.push(token);\n        for (let token of tokens) {\n            let move = Move.all[token]\n            if (move) {\n                moves.push(move)\n            }\n        }\n        return moves\n    }\n    parse(str: string) {\n        this.moves = str.split(\"\\n\").map(x => this.parse_line(x)).flat()\n        return this\n    }\n\n    collapse() : MoveSeq {\n        let newMoves : Move[] = []\n        let moves = this.moves\n        while (moves.length > 0) {\n            const nextMove = moves.shift()!\n            if (newMoves.length === 0) {\n                newMoves.push(nextMove)\n            } else {\n                const move = newMoves.pop()!\n                const combined = MoveSeq._combine(move, nextMove)\n                for (let m of combined.moves)\n                    newMoves.push(m)\n            }\n        }\n        return new MoveSeq(newMoves);\n    }\n\n    inv() {\n        let moves: Move[] = this.moves.slice(0).reverse().map(x => x.inv()).flat()\n        return new MoveSeq(moves)\n    }\n\n    static add_auf(moves: Array<Move>, auf_moves?: Array<Move | MoveSeq>) {\n        auf_moves = auf_moves || [ Move.all[\"id\"], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n        let auf_move = rand_choice(auf_moves)\n        if (auf_move instanceof MoveSeq) {\n            moves.concat(auf_move.moves)\n        } else {\n            moves.push(auf_move)\n        }\n    }\n\n    toString(useMetric?: string) {\n        return this.moves.map(m => m.toString()).join(\" \") + \" \" + (useMetric ? \"(\" + this.moves.length + \")\" : \"\")\n    }\n}\n\n/* Faces */\nlet FaceletCube = function () {\n    let mult_move = (face: FaceletT, move: Move): FaceletT => {\n        let face_new: FaceletT = [...face]\n        let mod_for_typ = (typ: Typ) => {\n            switch (typ) {\n                case C: return 3;\n                case E: return 2;\n                case T: return 1\n            }\n        }\n        let work = (p: PermChg, o: number, typ: Typ) => {\n            let mod = mod_for_typ(typ)\n            let [p1, p2] = p\n            for (let i = 0; i < face.length; i++) {\n                let [p_curr, o_curr, typ_curr] = face[i];\n                if (typ_curr === typ && p_curr === p1) {\n                    face_new[i] = [p2, (o_curr + o) % mod, typ]\n                }\n            }\n        }\n        for (let i = 0; i < move.cpc.length; i++) {\n            work(move.cpc[i], move.coc[i], C)\n        }\n        for (let i = 0; i < move.epc.length; i++) {\n            work(move.epc[i], move.eoc[i], E)\n        }\n        for (let i = 0; i < move.tpc.length; i++) {\n            work(move.tpc[i], 0, T)\n        }\n        return face_new\n    }\n    let color_of_c = (p: number, o1: number, o2: number) =>\n    corners_coord[p][(3 - o1 + o2) % 3];\n    let color_of_e = (p: number, o1: number, o2: number) =>\n        edges_coord[p][(2 - o1 + o2) % 2];\n    let color_of_t = (p: number) => [U, D, F, B, L, R][p]\n\n    let color_of_sticker = (cube: CubieCube, sticker: StickerT) => {\n        let [p, o, typ] = sticker\n        if (typ === C) {\n            return color_of_c(cube.cp[p], cube.co[p], o)\n        } else if (typ === E) {\n            return color_of_e(cube.ep[p], cube.eo[p], o)\n        } else if (typ === T) {\n            return color_of_t(cube.tp[p])\n        } else {\n            throw Error(\"unidentified type \" + typ)\n        }\n    }\n\n    let from_cubie_partial = (cube: CubieCube, facelet: FaceletT) => {\n        return facelet.map(s => color_of_sticker(cube, s))\n    }\n    let from_cubie_partial_masked = (cube: CubieCube, facelet: FaceletT, mask: Mask) => {\n        return facelet.map(([p, o, typ]) => {\n            if (typ === C) {\n                if (mask.cp[cube.cp[p]] === 1)\n                    return color_of_c(cube.cp[p], cube.co[p], o)\n                else\n                    return Face.X\n            } else if (typ === E) {\n                if (mask.ep[cube.ep[p]] === 1)\n                    return color_of_e(cube.ep[p], cube.eo[p], o)\n                else\n                    return Face.X\n            } else if (typ === T) {\n                if (mask.tp && mask.tp[cube.tp[p]] === 0)\n                    return Face.X\n                else\n                    return color_of_t(cube.tp[p])\n            } else {\n                throw Error(\"unidentified type \" + typ)\n            }\n        })\n    }\n\n    let moves = Move.all\n    let generate_base_facelets = () => {\n        let d_face = mult_move(f_face, moves[\"x'\"])\n        let l_face = mult_move(f_face, moves[\"y\"])\n        let r_face = mult_move(f_face, moves[\"y'\"])\n        let b_face = mult_move(f_face, moves[\"y2\"])\n        return {\n            d_face, l_face, r_face, b_face\n        }\n    }\n    let { d_face, l_face, r_face, b_face } = generate_base_facelets()\n\n    let from_cubie = (cube: CubieCube, mask?: Mask): FaceletCubeT => {\n        //console.log(\"converting from cube\", cube)\n        let faces = [u_face, d_face, f_face, b_face, l_face, r_face]\n        if (mask)\n            return faces.map((facelet) => from_cubie_partial_masked(cube, facelet, mask))\n        else\n            return faces.map((facelet) => from_cubie_partial(cube, facelet))\n    }\n\n    let to_unfolded_cube_str = (faceletCube: FaceletCubeT): String => {\n        let face_count = [0, 0, 0, 0, 0, 0];\n        let str_face_map: { [key: string]: Face } = {\n            \"U\": U, \"D\": D, \"F\": F, \"B\": B, \"L\": L, \"R\": R\n        }\n        let face_str_map = \"UDFBLR\"\n        let color_cube = \"\"\n        for (let i = 0; i < color_map.length; i++) {\n            let face_char = color_map[i];\n            if (str_face_map.hasOwnProperty(face_char)) {\n                let face: number = str_face_map[face_char] as number;\n                let count = face_count[face];\n                let color = faceletCube[face][count]\n                color_cube += face_str_map[color]\n                face_count[face] += 1;\n            } else {\n                color_cube += color_map[i];\n            }\n        }\n        return color_cube;\n    }\n\n\n    return {\n        from_cubie,\n        to_unfolded_cube_str,\n        color_of_sticker,\n        faces: {\n            u_face, d_face, l_face, r_face, f_face, b_face\n        }\n    }\n}()\n\ntype Mask = {\n    co?: number[],\n    eo?: number[],\n    tp?: number[],\n    cp: number[],\n    ep: number[],\n}\nfunction mask_copy (m: Mask) {\n    return {\n        co: m.co && [...m.co],\n        eo: m.eo && [...m.eo],\n        tp: m.tp && [...m.tp],\n        cp: [...m.cp],\n        ep: [...m.ep]\n    }\n}\n\nconst lse_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n}\n\nconst lse_4c_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1],\n    eo: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n}\n\nconst solved_mask : Mask = {\n    cp: [1, 1, 1, 1,  1, 1, 1, 1],\n    ep:[1, 1, 1, 1,  1, 1, 1, 1, 1, 1, 1, 1],\n}\nconst empty_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\nconst dl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]\n}\nconst bl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]\n}\nconst fs_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst fs_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst fb_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst zhouheng_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst fbdr_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst sb_mask : Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst cmll_mask : Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nlet CubeUtil = (() => {\n    let is_cube_solved = (cube: CubieCube) => {\n        let id = new CubieCube()\n        return arrayEqual(cube.co, id.co) &&\n               arrayEqual(cube.eo, id.eo) &&\n               arrayEqual(cube.cp, id.cp) &&\n               arrayEqual(cube.ep, id.ep)\n    }\n\n    let is_solved = (cube: CubieCube, mask: Mask) => {\n        let {co: co_, cp, eo: eo_, ep, tp: tp_} = mask\n        let co = co_ || cp\n        let eo = eo_ || ep\n        let tp = tp_ || Array(6).fill(1)\n        let c_true = co.every( (_, i) =>  (cp[i] === 0 || cube.cp[i] === i) \n                        && (co[i] === 0 || cube.co[i] === 0) )\n        if (!c_true) return false\n        let e_true = eo.every( (_, i) =>  (ep[i] === 0 || cube.ep[i] === i) \n        && (eo[i] === 0 || cube.eo[i] === 0) )\n        if (!e_true) return false\n        let t_true = tp.every( (_, i) =>  (tp[i] === 0 || cube.tp[i] === i) )\n        return t_true\n    }\n\n    function ext(stickers: StickerT[], f: Face) : StickerExtT[] {\n        return stickers.map(x => {\n            let [a, b, c] = x;\n            return [a,b,c,f]\n        })\n    }\n\n    let { u_face, d_face, l_face, r_face, f_face, b_face } = FaceletCube.faces\n    let stickers = [ ...ext(u_face, U), ...ext(d_face, D),\n        ...ext(l_face, L), ...ext(r_face, R), ...ext(f_face,F),  ...ext(b_face, B)]\n\n    let find_pairs = function() {\n        // enumerate each sticker\n        let edge_stickers = stickers.filter(s => s[2] === Typ.E)\n        let corner_stickers = stickers.filter(s => s[2] === Typ.C)\n\n        let ep_stickers : StickerExtT[][] = Array(12).fill(0).map(_ => Array(0))\n        edge_stickers.map(s => ep_stickers[s[0]].push(s) )\n\n        let cp_stickers : StickerExtT[][] = Array(8).fill(0).map(_ => Array(0))\n        corner_stickers.map(s => cp_stickers[s[0]].push(s))\n\n        const epcp_pairs : [number, number][] = []\n        for (let e = 0; e < 12; e++) {\n            for (let c = 0; c < 8; c++) {\n                let efs = ep_stickers[e]\n                let cfs = cp_stickers[c]\n\n                let match = 0;\n                efs.forEach( (e) => {\n                    cfs.forEach( (c) => { if (e[3] === c[3]) match++ })\n                })\n                if (match === 2) {\n                    epcp_pairs.push( [e, c] )\n                }\n            }\n        }\n\n\n        let get_color = (cube: CubieCube, s: StickerExtT) => {\n            return FaceletCube.color_of_sticker(cube, [s[0], s[1], s[2]] )\n        }\n        let func = (cube: CubieCube) => {\n            // now we process the cube\n            let connected_pairs : [number, number][]= []\n            //console.log(\"All neighboring pairs \", epcp_pairs)\n            for (let [ep, cp] of epcp_pairs) {\n                let efs = ep_stickers[ep]\n                let cfs = cp_stickers[cp]\n                let cnt = 0;\n                efs.forEach( (e) => {\n                    const c = cfs.filter( (c) => e[3] === c[3])[0]\n                    if (get_color(cube, e) === get_color(cube, c)) cnt++;\n                })\n                if (cnt === 2) {\n                    connected_pairs.push([ep, cp])\n                }\n            }\n            return connected_pairs\n        }\n        return func\n    }()\n\n    let is_mask_solved2 = (cube: CubieCube, { co, eo, cp, ep }: Mask, premove: (Move | Move[])[]) => {\n        //let moves = [ [], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"] ]\n        co = co || cp\n        eo = eo || ep\n        for (let move of premove) {\n            let cube1 = cube.apply(move)\n            let solved = true\n            for (let i = 0; i < 8 && solved; i++) {\n                if ((co[i] && cube1.co[i] !== 0)\n                    || (cp[i] && cube1.cp[i] !== i)) {\n                    solved = false;\n                }\n            }\n            for (let i = 0; i < 12 && solved; i++) {\n                if ((eo[i] && cube1.eo[i] !== 0)\n                    || (ep[i] && cube1.ep[i] !== i)) {\n                    solved = false;\n                }\n            }\n            if (solved) return true;\n        }\n        return false;\n    }\n\n    const u_premove = [[], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n    const m2_premove = [[], Move.all[\"M2\"]]\n\n    let is_cmll_solved = (cube: CubieCube) => {\n        return is_mask_solved2(cube, lse_mask, u_premove)\n    }\n\n    let get_random_with_mask = ({ co, eo, cp, ep }: Mask): CubieCube => {\n        co = co || cp\n        eo = eo || ep\n        // get_random -- figure out which masks are 0, and assign random to these\n        let random_ori = (ori_mask: number[], typ: Typ) => {\n            let ori = Array(ori_mask.length).fill(0)\n            let mod = (typ === C) ? 3 : 2\n            let sum: number\n            do {\n                sum = 0\n                for (let i in ori_mask) {\n                    if (ori_mask[i] === 0) {\n                        ori[i] = rand_int(mod)\n                        sum += ori[i]\n                    }\n                }\n            } while (sum % mod > 0)\n            return ori\n        }\n        let random_perm = (perm_mask: number[]) => {\n            let perm: number[] = Array(perm_mask.length).fill(0)\n            let undecided: number[] = []\n            for (let i = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    undecided.push(i)\n                } else {\n                    perm[i] = i\n                }\n            }\n            rand_shuffle(undecided)\n            for (let i = 0, cnt = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    perm[i] = undecided[cnt]\n                    cnt += 1\n                }\n            }\n            return perm\n        }\n        let cp_rand, ep_rand, par\n        do {\n            [cp_rand, ep_rand] = [random_perm(cp), random_perm(ep)]\n            par = (getParity(cp_rand) + getParity(ep_rand)) & 1\n        } while (par > 0)\n\n        return new CubieCube({\n            co: random_ori(co, C),\n            cp: cp_rand,\n            eo: random_ori(eo, E),\n            ep: ep_rand,\n        })\n    }\n\n    let get_random_lse = (): CubieCube => {\n        let cube = get_random_with_mask(lse_mask)\n        return cube.apply(rand_choice(m2_premove))\n    }\n\n \n\n    return {\n        is_cmll_solved,\n        is_solved,\n        get_random_lse,\n        get_random_with_mask,\n        is_cube_solved,\n        find_pairs,\n        stickers\n    }\n})()\n\nexport abstract class Storage {\n    abstract name: string;\n    abstract serialize(): string;\n    abstract deserialize(x: string): void;\n    abstract _setDefault(): void;\n    save() {\n        window.localStorage.setItem(this.name, this.serialize());\n    }\n    load() {\n        const item = window.localStorage.getItem(this.name)\n        if (item) this.deserialize(item);\n        else this._setDefault();\n    }\n}\n\nexport class ColorScheme extends Storage {\n    // UDFBLR\n    // specify the colors for uf\n    // how to do this?\n    static default_colors = {\n        \"G\": \"#00b500\",\n        \"B\": \"#0000ff\",\n        \"R\": \"#ff0000\",\n        \"O\": \"#ff8800\",\n        \"Y\": \"#ffff00\",\n        \"W\": \"#ffffff\",\n        \"X\": \"#cccccc\"\n    }\n    name = \"colorscheme\";\n    colors: {[key:string]:string} = {};\n    // UDFBLR from UF\n    // INFERR UFR from UF?\n    static valid_schemes = [\n        \"WYGBOR\",\n        \"WYBGRO\",\n        \"WYROGB\",\n        \"WYORBG\",\n        \"YWGBRO\",\n        \"YWBGOR\",\n        \"YWROBG\",\n        \"YWORGB\",\n\n        \"GBWYRO\",\n        \"GBYWOR\",\n        \"GBROYW\",\n        \"GBORWY\",\n        \"BGWYOR\",\n        \"BGYWRO\",\n        \"BGROWY\",\n        \"BGORYW\",\n\n        \"ORWYGB\",\n        \"ORYWBG\",\n        \"ORGBYW\",\n        \"ORBGWY\",\n        \"ROWYBG\",\n        \"ROYWGB\",\n        \"ROGBWY\",\n        \"ROBGYW\",\n    ]\n    static valid_schemes_map = function() {\n        return new Map(ColorScheme.valid_schemes.map(x => [ x[0] + x[2], x]))\n    }();\n    constructor(suppressLoad?: boolean) {\n        super();\n        if (!suppressLoad) {\n            this.load();\n        }\n    }\n    toUserInput() {\n        return \"GBROYWX\".split('').map(x => this.colors[x])\n    }\n    set( colors:{[key:string]:string} | string[]) {\n        let newScheme = new ColorScheme(true);\n        if (Array.isArray(colors)) {\n            colors.forEach( (color, i) => newScheme.colors[\"GBROYWX\"[i]] = color )\n        } else {\n            newScheme.colors = {...this.colors, ...colors};\n        }\n        newScheme.save();\n        return newScheme\n    }\n    setWithDefault() {\n        let newScheme = new ColorScheme(true);\n        newScheme._setDefault();\n        newScheme.save();\n        return newScheme\n    }\n    _setDefault() { this.colors = ColorScheme.default_colors; };\n    serialize() {\n        return JSON.stringify(this.colors)\n    }\n    deserialize(s: string) {\n        this.colors = JSON.parse(s)\n    }\n    getColorsForOri(s: string) {\n        let faces = (ColorScheme.valid_schemes_map.get(s) || ColorScheme.valid_schemes_map.get(\"WG\")) + \"X\";\n        let arr : string[] = []\n        for (let i = 0; i < faces.length; i++) {\n            arr.push(this.colors[faces[i]]!)\n        }\n        return arr\n    }\n}\n\nlet Mask = {\n    lse_mask, fs_back_mask, fs_front_mask, fbdr_mask, fb_mask, sb_mask, cmll_mask, ss_front_mask, ss_back_mask,\n    empty_mask, dl_solved_mask, bl_solved_mask, solved_mask, zhouheng_mask, lse_4c_mask,\n    copy: mask_copy\n}\n\nexport { FaceletCube, CubeUtil, Mask }\n","export type Selector = {\n    names: string[],\n    flags: number[],\n    kind: string,\n    label?: string\n}\n\nfunction getActiveNames(s : Selector) {\n    let ans = []\n    for (let i = 0; i < s.flags.length; i++) {\n        if (s.flags[i] === 1) {\n            ans.push(s.names[i])\n        }\n    }\n    return ans\n}\n\nfunction getActiveName(s : Selector) {\n    for (let i = 0; i < s.flags.length; i++) {\n        if (s.flags[i] === 1) {\n            return (s.names[i])\n        }\n    }\n    return \"\"\n}\n\nexport {getActiveNames, getActiveName}\n","import React from 'react'\n\nimport {\n    FormControlLabel, FormGroup, Button, makeStyles, Box,\n    FormControl, FormLabel, RadioGroup, Checkbox, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport Radio from '@material-ui/core/Radio';\n\nimport { AppState, Config, Action } from '../Types';\nimport { Selector } from '../lib/Selector';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        flexGrow: 1,\n    },\n    select: {\n      color: theme.palette.text.primary\n    },\n    selectLabel: {\n      color: theme.palette.text.secondary\n    }\n\n}))\n\nfunction SingleSelect(props: {state: AppState, dispatch: React.Dispatch<Action>,\n    select: (c: Config) => Selector, label?: string}) {\n    let { state, dispatch, select } = props\n    let { config } = state\n    let sel = select(config)\n    let classes = useStyles()\n\n    const handleChange = (evt: { target: { value: string; }; }) => {\n      let { names } = sel\n      let n = names.length\n      let new_flags = Array(n).fill(0)\n\n      for (let i = 0; i < names.length; i++) {\n        if (names[i] === evt.target.value) {\n          new_flags[i] = 1\n        }\n      }\n      let new_config = JSON.parse(JSON.stringify(config))\n      select(new_config).flags = new_flags\n      if (new_config.fbPairSolvedSelector.flags[1] === 1) {\n        new_config.fbdrSelector.flags = [1, 0, 0]\n      }\n      dispatch( { type: \"config\", content: new_config })\n    }\n\n    let radioValue = function() {\n      let { names, flags } = sel\n      for (let i = 0; i < flags.length; i++) {\n        if (flags[i] === 1) return names[i]\n      }\n      return \"\"\n    }()\n\n    let label = sel.label || props.label || \"\"\n    return (\n      <FormControl component=\"fieldset\" className={classes.select}>\n      <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n      <RadioGroup aria-label=\"position\" name=\"position\" value={radioValue} onChange={handleChange} row>\n        {\n          sel.names.map(name => (\n            <FormControlLabel\n              key={name}\n              value={name}\n              control={<Radio color=\"primary\" />}\n              label={name}\n              labelPlacement=\"end\"\n            />\n          ))\n        }\n      </RadioGroup>\n    </FormControl>)\n  }\n\n\n\n  type MultiOptions = {\n    label?: string, noDialog?: boolean,\n    manipulators?: {name: string, enableIdx: number[]}[]\n  }\n\n\n  function MultiSelectContent(props: {state: AppState, dispatch: React.Dispatch<Action>, select: (c: Config) => Selector, options?: MultiOptions }) {\n    let { state, dispatch, select, options } = props\n    options = options || {}\n    let { config } = state\n\n    let sel = select(config)\n    const handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n      let { names, flags } = sel\n      let new_flags = [...flags]\n\n      for (let i = 0; i < names.length; i++) {\n        if (names[i] === evt.target.value) {\n          new_flags[i] = (evt.target.checked)? 1 : 0\n        }\n      }\n      let new_config = JSON.parse(JSON.stringify(config))\n      select(new_config).flags = new_flags\n      dispatch( { type: \"config\", content: new_config })\n    }\n\n    let makeBox = (name: string, checked: boolean) => {\n      return (\n      <FormControlLabel\n          control={\n          <Checkbox color=\"primary\" checked={checked} onChange={handleChange} />\n          }\n          label={name}\n          key={name}\n          value={name}\n      />)\n    }\n\n    const [manipChecked, setManipChecked] = React.useState< { [ name: string ]: boolean } >({})\n    let label = sel.label || options.label || \"\"\n    let makeManipulator = (manip: {name: string, enableIdx: number[]}) => {\n      let {name, enableIdx} = manip\n      let handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n        setManipChecked( {...manipChecked, [name] : evt.target.checked } )\n        let fillValue = (evt.target.checked);\n        let { flags } = sel\n        let new_flags = [...flags]\n        for (let i of enableIdx) {\n          new_flags[i] = fillValue ? 1 : 0;\n        }\n        let new_config = JSON.parse(JSON.stringify(config))\n        select(new_config).flags = new_flags;\n        dispatch( { type: \"config\", content: new_config } )\n      }\n      return (\n        <FormControlLabel\n        control={\n        <Checkbox color=\"primary\" checked={manipChecked[name]} onChange={handleChange} />\n        }\n        label={name}\n        key={name}\n        value={name}\n        />)\n    }\n    let manipulator_row = options.manipulators ?\n      (<FormGroup row>\n      {options.manipulators.map(x => makeManipulator(x)) }\n      </FormGroup>) : null;\n    const content = (\n      <React.Fragment>\n        {manipulator_row}\n        <FormGroup row>\n        {sel.names.map( (name, i) => makeBox(name, !!sel.flags[i]))}\n        </FormGroup>\n      </React.Fragment>\n    )\n    return {label, content}\n  }\n\n  function MultiSelect(props: {state: AppState, dispatch: React.Dispatch<Action>, select: (c: Config) => Selector, options?: MultiOptions }) {\n    let { state, dispatch, select, options } = props\n    let {label, content} = MultiSelectContent({state, dispatch, select, options})\n    options = options || {}\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    }\n    let classes = useStyles()\n\n    if (options.noDialog)\n    return (\n      <FormControl component=\"fieldset\" className={classes.select}>\n        <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n        {content}\n      </FormControl>\n    )\n\n    return (\n    <div>\n      <FormLabel component=\"legend\">{label}</FormLabel>\n      <Box height={8}/>\n      <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n      <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n        Edit\n      </Button>\n      <Box height={8}/>\n      <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n        <DialogTitle> {label} </DialogTitle>\n        <DialogContent>\n          {content}\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Ok\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n    )\n  }\n\n  export { SingleSelect, MultiSelectContent, MultiSelect }","import React, { Fragment } from 'react'\n\nimport {\n    TextField,\n    Divider,\n    Button, Box,\n    FormLabel, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport { AppState, Config, Action } from '../Types';\nimport { ColorScheme } from '../lib/CubeLib';\n\nimport { MultiSelectContent } from './Select';\n\nexport function ColorSetter(props: {state: AppState, dispatch: React.Dispatch<Action>}) {\n    const [text, setText] = React.useState(props.state.colorScheme.toUserInput().join(\",\"))\n    const handleChange = (event: any) => setText(event.target.value);\n    const handleClick = () => {\n        let arr = text.split(\",\")\n        props.dispatch({\n            type: \"colorScheme\",\n            content: arr.length === 7? arr : ColorScheme.default_colors\n        })\n    }\n    return (\n        <Fragment>\n        <Box>\n        <TextField\n            label=\"Color\"\n            defaultValue=\"Default Value\"\n            helperText=\"G,B,R,O,Y,W,Gray\"\n            onChange={handleChange}\n            fullWidth\n            value={text}\n        /></Box>\n\n        <Box>\n        <Button variant=\"outlined\" size=\"medium\" color=\"primary\" onClick={handleClick} >\n            Set color\n        </Button>\n        </Box>\n        </Fragment>\n    )\n}\n\nexport function ColorPanel(props: {state: AppState, dispatch: React.Dispatch<Action>}) {\n    let { state, dispatch } = props\n    let select = (config: Config) => { return config.orientationSelector }\n    let {content} = MultiSelectContent({state, dispatch, select})\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    }\n    return (\n        <div>\n        <FormLabel component=\"legend\">Orientation and Color Scheme</FormLabel>\n        <Box height={8}/>\n        <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n        <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n          Edit\n        </Button>\n        <Box height={8}/>\n        <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n          <DialogTitle> Set Orientation (U-F) and Color Scheme  </DialogTitle>\n          <DialogContent>\n            {content}\n            <Box height={20}/>\n                <Divider />\n            <Box height={20}/>\n            <ColorSetter {...{state, dispatch}}/>\n\n          </DialogContent>\n          <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                  Close\n              </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n}","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { makeStyles, useTheme, FormControl, FormLabel, Typography, Button} from '@material-ui/core';\n\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport { CubeUtil, FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState, Action, Config } from \"../Types\";\nimport clsx from 'clsx';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\nimport { MultiSelect, SingleSelect } from './Select';\nimport { ColorPanel } from './Input';\nimport { rand_int } from '../lib/Math';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 350,\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        fontSize: 18,\n        borderBottom: \"2px solid\",\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    button: {\n      width: \"100%\"\n    },\n}))\n\n\n\nfunction _getMask(name: string) {\n  switch (name) {\n    case \"Show\": return Mask.solved_mask;\n    case \"Hide\": return Mask.empty_mask;\n    case \"Hide LSE\": return Mask.lse_mask;\n    default: return Mask.solved_mask\n  }\n}\nfunction CmllTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n    const canvasPaper = clsx(classes.canvasPaper, classes.fixedHeight);\n    let facelet = FaceletCube.from_cubie(cube,\n      _getMask(getActiveName( state.config.cmllCubeMaskSelector) || \"Show\"))\n\n    let hyperori = getActiveName(state.config.hyperOriSelector) || \"off\"\n    if (hyperori !== \"off\") {\n      if (hyperori === \"F/B\") {\n        facelet = facelet.map( face => face.map(f => f === Face.L || f === Face.R ? Face.X : f) )\n      } else\n        facelet = facelet.map( face => face.map(f => f === Face.F || f === Face.B ? Face.X : f) )\n    }\n    const theme = useTheme()\n\n    const cmll = (c: Config) => c.cmllSelector;\n    const cmllcubemask = (c : Config) => c.cmllCubeMaskSelector;\n    const cmllauf = (c: Config) => c.cmllAufSelector;\n    const trigger = (c: Config) => c.triggerSelector;\n    const hyperorisel = (c: Config) => c.hyperOriSelector;\n\n\n    const panel = (\n      <Fragment>\n        <SingleSelect {...{state, dispatch, select: cmllcubemask, label: \"Virtual Cube\"}} />\n        <MultiSelect {...{state, dispatch, select: cmll, options: { label: \"CMLL Case\", noDialog: true} }} />\n        <MultiSelect {...{state, dispatch, select: cmllauf, options: { label: \"CMLL Auf\", noDialog: true} }} />\n        <MultiSelect {...{state, dispatch, select: trigger, options: { label: \"SB Last Pair Trigger (Uncheck all for pure CMLL)\", noDialog: true} } } />\n        <SingleSelect {...{state, dispatch, select: hyperorisel, label: \"Hyperorientation\" } } />\n\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n\n    React.useEffect( () =>  {\n      setReveal(false)\n    }, [ state ])\n    const [reveal, setReveal] = React.useState(false)\n    const handleClick = () => {\n      setReveal(true)\n    }\n    const handleNext = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n    }\n\n    React.useEffect(() => {\n      function downHandler(event: KeyboardEvent) {\n        state.keyMapping.handle(event, dispatch);\n      }\n      window.addEventListener('keydown', downHandler);\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n      };\n    });\n\n    let alg = \"\"\n    let setup = \"\"\n    if (state.case.desc.length === 4) {\n      setup = state.case.desc[3].algs[0]\n    }\n    if (reveal && state.case.desc.length >= 3) {\n      const moves = new MoveSeq(state.case.desc[1].algs[0] + state.case.desc[2].algs[0] )\n      let moves_c = moves.collapse()\n      if (moves_c.moves.length > 0) {\n        if (moves_c.moves[0].name[0] === \"U\") {\n          alg += \"(\" + moves_c.moves[0].name + \") \";\n          moves_c.moves = moves_c.moves.slice(1)\n        }\n        alg += moves_c.toString()\n      }\n    }\n    return (\n    <Box className={classes.container}>\n    <Grid container >\n      <Grid item xs={12} >\n            <Paper className={canvasPaper}>\n              <Box margin=\"auto\">\n              <CubeSim\n                width={400}\n                height={350}\n                cube={facelet}\n                colorScheme={state.colorScheme.getColorsForOri(state.cube.ori)}\n                theme={getActiveName(state.config.theme)}\n                facesToReveal={[Face.L]}\n              />\n              </Box>\n            </Paper>\n      </Grid>\n    </Grid>\n\n    <Box height = {5}/>\n\n    <Paper className={classes.paper} elevation={2}>\n    <Grid container spacing={2}>\n\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Scramble\n              </Box> </Box>\n      </Box>\n      </Grid>\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { setup }\n          </Typography>\n        </Box>\n\n      </Grid>\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Case\n              </Box> </Box>\n      </Box>\n      </Grid>\n      { (!reveal) ?\n      <Grid item xs={3}>\n      <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n      size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClick}> { /* className={classes.margin}>  */ }\n          Show\n      </Button>\n      </Grid>\n      :\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { alg }\n          </Typography>\n        </Box>\n\n      </Grid>\n      }\n    </Grid>\n    <Box height={30}/>\n\n    <Grid container spacing={0}>\n        <Grid item xs={4} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n          size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\n              Next\n          </Button>\n        </Grid>\n    </Grid>\n    </Paper>\n\n\n    <Box height={20}/>\n      <Divider />\n    <Box height={20}/>\n    { panel }\n\n    <Box height={20}/>\n      <Divider />\n    <Box height={15}/>\n\n    <Box>\n    <FormControl component=\"fieldset\" className={classes.prompt}>\n      <FormLabel component=\"legend\">\n         Usage: Press space for next case. Enter to redo.\n      </FormLabel>\n      </FormControl>\n    </Box>\n\n    </Box>\n    );\n}\n\nexport default CmllTrainerView\n\n\n","import React, { Fragment } from 'react'\n\nimport {\n    TextField,\n    Divider,\n    Button, Box,\n    makeStyles,\n    Typography,\n    FormLabel, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport RootRef from '@material-ui/core/RootRef';\n\n\n\nimport { AppState, Config, Action } from '../Types'\nconst useStyles = makeStyles(theme => ({\n\n    setupEdit: {\n        whiteSpace: 'pre-line',\n        fontSize: \"1.2rem\",\n        fontWeight:500,\n        [theme.breakpoints.down('xs')]: {\n        fontSize: \"1.0rem\",\n        fontWeight: 500\n        },\n    },\n    button: {\n        marginRight: theme.spacing(1)\n        //margin: theme.spacing(1)\n    }\n}))\n\nexport function ScrambleInputView(props: { display: string, scrambles: string[], dispatch: React.Dispatch<Action>}) {\n    let classes = useStyles()\n    let [editing, setEditing] = React.useState(false)\n    let [value, setValue] = React.useState(props.scrambles.join(\"\\n\"))\n    let textField = React.useRef<HTMLInputElement | null>(null)\n    let container = React.useRef<HTMLInputElement | null>(null)\n    let editButton = React.useRef<HTMLElement | null>(null)\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value)\n        event.stopPropagation()\n    }\n    const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        event.stopPropagation()\n    }\n    const toggleEdit = () => {\n        setEditing(!editing)\n    }\n    const handleClose = () => {\n        setEditing(false)\n        props.dispatch({type: \"scrambleInput\", content: value.split(\"\\n\").filter(s => s.trim())})\n    }\n    React.useEffect(  () => {\n        setValue(props.scrambles.join(\"\\n\"))\n    }, [props.scrambles])\n\n    /*\n    React.useEffect( ()=> {\n        if (editing) {\n            textField.current && textField.current.focus()\n        } else {\n            textField.current && textField.current.blur()\n            editButton.current && editButton.current.blur()\n        }\n    }, [editing]*/\n\n    const onEntered = () => {\n        textField.current && textField.current.focus()\n    }\n    return <>\n    <Box>\n            <Button variant={editing ? \"contained\" : \"outlined\"}\n                color=\"primary\"\n                size=\"small\"\n                onClick={toggleEdit}\n                className={classes.button}\n                startIcon={<EditIcon />}\n            >\n                {\"INPUT\"}\n            </Button>\n\n    </Box>\n\n    <Dialog open={editing} \n            onClose={handleClose}  \n            onKeyPress={onKeyPress} \n            onKeyDown={onKeyPress} \n            onKeyUp={onKeyPress}\n            onEntered={onEntered}\n            >\n          <DialogTitle> Input your own scrambles (one per line) </DialogTitle>\n          <DialogContent>\n                <TextField\n                    inputRef={textField}\n                    multiline\n                    size=\"medium\"\n                    fullWidth\n                    rowsMax={10}\n                    rows={3}\n                    InputProps={{\n                        className:classes.setupEdit\n                    }}\n                \n                    value={value}\n                    onChange={onChange}\n                    variant=\"outlined\">\n                </TextField>\n          </DialogContent>\n          <DialogActions>\n              <Box padding={1}>\n              <Button onClick={handleClose} color=\"primary\" variant=\"outlined\" fullWidth >\n                  Confirm\n              </Button>\n              </Box>\n          </DialogActions>\n    </Dialog>\n    </>\n    /*\n    return <Dialog open={props.open} onClose={handleClose}>\n          <DialogTitle> Input your own scrambles  </DialogTitle>\n          <DialogContent>\n              Hello\n          </DialogContent>\n          <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                  Confirm\n              </Button>\n          </DialogActions>\n        </Dialog>\n        */\n}","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, makeStyles, Typography, useTheme, FormControl, FormLabel, } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState,  Action, Config, FavCase, Mode} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\n\nimport { SingleSelect, MultiSelect } from './Select';\nimport { ColorPanel } from './Input';\nimport { AlgDesc } from '../lib/Algs';\nimport { ScrambleInputView } from './ScrambleInputView';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { config } from 'process';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default,\n      transition: \"all .5s ease-in-out\"\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    setup: {\n      whiteSpace: 'pre-line',\n      fontSize: \"1.4rem\",\n      fontWeight:500,\n      [theme.breakpoints.down('xs')]: {\n      fontSize: \"1.0rem\",\n      fontWeight: 500\n      },\n  },\n    condGap: {\n    },\n    fgap: {\n      flexShrink: 100, flexBasis: \"2.5rem\", minWidth: \"1.5em\",\n      [theme.breakpoints.down('xs')]: {\n        flexBasis: \"1.0rem\", \n        minWidth: \"0.4rem\"\n      }\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    sourceIcon : {\n        color: theme.palette.text.hint,\n        fontSize: 15,\n        padding: 0\n    },\n    sourceIconWrap : {\n        //border: \"1px solid \" + theme.palette.text.hint,\n        //borderRadius: 3\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n  }))\n\n\nfunction getMask(state: AppState) : Mask {\n    if (state.mode === \"fbdr\") {\n      const fbOnly = (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\")\n      //   getActiveName(state.config.fbOnlySelector) === \"FB Last Pair\"\n      return fbOnly ? Mask.fb_mask : Mask.fbdr_mask\n    }\n    else if (state.mode === \"fs\") {\n      let name = getActiveName(state.config.fsSelector)\n      return ({\n        \"Front FS\": Mask.fs_front_mask,\n        \"Back FS\": Mask.fs_back_mask,\n        \"Both\": Mask.fb_mask\n      } as any)[name]\n    }\n    else if (state.mode === \"ss\") {\n      if (state.case.desc.length === 0) return Mask.sb_mask\n      if (state.case.desc[0].kind === \"ss-front\")\n        return Mask.ss_front_mask\n      else\n        return Mask.ss_back_mask\n    }\n    else if (state.mode === \"fb\") {\n      if (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\") {\n        return Mask.fb_mask\n      }\n      else if (state.case.desc[0].kind === \"fbdr\") {\n        return Mask.fbdr_mask\n      } else {\n        return Mask.solved_mask\n      }\n    }\n    else if (state.mode === \"4c\" || state.mode === \"eopair\") {\n      return Mask.solved_mask\n    }\n    else return Mask.sb_mask\n}\n\nfunction getHelperTextForMode(mode: Mode) {\n  if (mode === \"4c\" || mode === \"eopair\") {\n    return (\"Usage: Press space for next case. Enter to redo.\"\n      + \"\\n\\nVirtual Cube: I/K (E/D) for M'/M, J/F for U/U'\")\n  } else {\n    return null\n  }\n}\n\n\nfunction BlockTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n\n    let facelet = FaceletCube.from_cubie(cube, getMask(state))\n\n    let desc : AlgDesc[] = state.case.desc.length ? state.case.desc :\n       [ { algs: [\"\"], setup:\"Press next for new case\", id: \"\", kind: \"\"} ]\n\n    let spaceButtonText = (state.name === \"hiding\") ? \"Reveal\" : \"Next\"\n\n\n    let describe_reveal = function(algs: AlgDesc[]) {\n      let get_algs = (d: AlgDesc) => d.algs;\n      if (algs.length === 1) {\n        return get_algs(algs[0]).join(\"\\n\")\n      } else {\n        return algs.map( alg =>\n          `[${alg.kind}]:\\n` + get_algs(alg).join(\"\\n\") + \"\\n\"\n        )\n      }\n    }\n\n    let describe_hide = (desc: AlgDesc[]) => {\n      let minMove = desc.map( d =>\n        d.algs.map(a => new MoveSeq(a).remove_setup().moves.length))\n        .flat()\n        .reduce( (a, b) => Math.min(a, b), 100 )\n      return `(Min = ${minMove} STM)`\n    }\n    let algText = (state.name === \"hiding\") ? describe_hide(desc)\n      : (state.name === \"revealed\") ? describe_reveal(desc) : \"\"\n\n    const handleSpace = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n      if (spaceButtonText === \"Next\") {\n        setFav(false)\n      }\n    }\n\n\n    const [inputActive, setInputActive] = React.useState(false)\n    const handleInput = () => {\n      setInputActive(true)\n    }\n    const setup = desc.length ? desc[0].setup! : \"\"\n\n\n    const theme = useTheme()\n    const simBackground = getActiveName(state.config.theme) === \"bright\" ? \"#eeeeef\" : theme.palette.background.paper\n\n    // source\n    // Add event listeners\n    React.useEffect(() => {\n      function downHandler(event: KeyboardEvent) {\n        if (event.key === \" \" && spaceButtonText === \"Next\") {\n          setFav(false)\n        }\n        state.keyMapping.handle(event, dispatch);\n      }\n      window.addEventListener('keydown', downHandler);\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n      };\n    });\n\n\n    const [favSelected, setFav] = React.useState(false)\n    const handleFav = () => {\n      if (state.case.desc.length === 0) return\n      const case_ : FavCase = {\n        mode: state.mode,\n        solver: state.case.desc.map(x => x.kind),\n        setup: setup || \"\"\n      }\n      if (!favSelected){\n        setFav(true)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"add\"})\n      } else {\n        setFav(false)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"remove\" })\n      }\n    }\n\n    const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n    const canvas_wh = (gt_sm) ? [400, 350] : [320, 280]\n\n    // helper-text\n    let helperText = getHelperTextForMode(state.mode)\n\n                // <Checkbox  className={classes.sourceIconWrap}\n            //       icon={<FavoriteIcon />}\n            //       checked={favSelected}\n            //       onChange = {handleFav}\n            //       checkedIcon={<FavoriteIcon color=\"primary\" />}\n            //       name=\"fav\" />\n\n    return (\n    <Box className={classes.container}>\n      <Paper className={classes.paper} elevation={1}>\n        <Box style={{display: \"flex\"}}>\n          <Box style={{display: \"flex\", alignItems: \"center\"}}> <Box className={classes.title} style={{}}>\n            Scramble\n          </Box> </Box>\n          <Box style={{}} className={classes.fgap} />\n          <Box style={{display: \"flex\", alignItems: \"center\", flexGrow: 1}}>\n          <Typography className={classes.setup} >\n                {setup}\n          </Typography>\n             \n          </Box>\n          <Box style={{}} className={classes.fgap} />\n\n          <Box style={{display: \"flex\", flexWrap: \"wrap\", padding: 0}}>\n            <ScrambleInputView display = {setup}\n                dispatch={dispatch} scrambles={state.scrambleInput}/>\n\n            <Box>\n            <Button variant={favSelected ? \"contained\" : \"outlined\"}\n                color=\"primary\"\n                size=\"small\"\n                name=\"fav\"\n                onClick={handleFav}\n                startIcon={<FavoriteIcon />} \n                endIcon={favSelected ? null : null}\n                >\n                {favSelected ? \"✓\" : \"ADD\"}\n            </Button></Box>\n          </Box>\n          \n        </Box>\n      </Paper>\n\n      <Paper className={ classes.paper}>\n      <Grid container>\n\n        <Grid item md={6} sm={12} xs={12} className={classes.condGap}>\n          <Box style={{display: \"flex\" }}>\n            <Box display=\"flex\" >\n                <Box style={{display: \"flex\", alignSelf: \"flex-start\"}}> <Box className={classes.title} style={{}}>\n                  Solutions\n                </Box> </Box>\n            </Box>\n            <Box style={{}} className={classes.fgap} />\n            <div>\n              <Box paddingBottom={2} lineHeight={1}>\n                <Typography style={{whiteSpace: 'pre-line', fontSize: 16}} >\n                  {algText}\n                </Typography>\n              </Box>\n            </div>\n          </Box>\n        </Grid>\n\n\n        <Grid item md={6} sm={12} xs={12} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box style={{backgroundColor: \"rgba(0, 0, 0, 0)\"}}>\n            { getActiveName(props.state.config.showCube) === \"Show\" ?\n            <CubeSim\n              width={canvas_wh[0]}\n              height={canvas_wh[1]}\n              cube={facelet}\n\n              colorScheme={state.colorScheme.getColorsForOri(state.cube.ori)}\n              hintDistance={ (state.mode === \"4c\" || state.mode === \"eopair\") ? 3 : 7 }\n              theme={getActiveName(state.config.theme)}\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            /> : null }\n          </Box>\n        </Grid>\n      </Grid>\n      </Paper>\n\n      <Paper className={classes.paper} elevation={2}>\n\n      <Grid container spacing={0}>\n        <Grid item xs={5} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button} size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleSpace}>\n              {spaceButtonText}\n          </Button>\n        </Grid>\n\n      </Grid>\n\n      </Paper>\n\n      <Box height={20}/>\n      <Divider/>\n      <Box height={20}/>\n\n      <ConfigPanelGroup {...{state, dispatch} } />\n\n      {helperText ?\n      <Fragment>\n        <Box height={20}/>\n          <Divider/>\n        <Box height={15}/>\n        <Box>\n        <FormControl component=\"fieldset\" className={classes.prompt}>\n          <FormLabel component=\"legend\">\n            <pre style={{ fontFamily: 'inherit' }}>\n              {helperText}\n            </pre>\n          </FormLabel>\n          </FormControl>\n        </Box>\n      </Fragment> : null }\n    </Box>\n    );\n}\n\n\n\nfunction ConfigPanelGroup(props: {state: AppState, dispatch: React.Dispatch<Action> }) {\n  let { state, dispatch } = props\n  if (state.mode === \"ss\") {\n    let select1 = (config: Config) => { return config.ssSelector }\n    let select2 = (config: Config) => { return config.ssPairOnlySelector }\n    let select3 = (config: Config) => { return config.solutionNumSelector }\n    let select4 = (config: Config) => { return config.ssPosSelector }\n\n    let DRManip = [\n      // names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n      // \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n      { name: \"Toggle Select All\", enableIdx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] },\n      { name: \"Toggle All Oriented\", enableIdx: [0, 2, 4, 6, 8, 10, 12, 14, 16] },\n    ]\n    return (\n      <Fragment>\n\n      <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n      \n      <SingleSelect {...{state, dispatch, select: (c) => c.showCube}}> </SingleSelect>\n      <MultiSelect {...{state, dispatch, select: select4, options: {manipulators: DRManip} }}> </MultiSelect>\n      <ColorPanel {...{state, dispatch}} />\n\n      </Fragment>\n    )\n  } else if (state.mode === \"fbdr\") {\n    let select1 = (config: Config) => { return config.fbdrSelector }\n    let select2 = (config: Config) => { return config.fbOnlySelector }\n    let select3 = (config: Config) => { return config.fbPairSolvedSelector }\n    let select4 = (config: Config) => { return config.fbdrScrambleSelector }\n    let select5 = (config: Config) => { return config.solutionNumSelector }\n\n    let LPEdgeManip = [\n      { name: \"Toggle Select All\", enableIdx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] },\n    ]\n    let pos1 = (config: Config) => { return config.fbdrPosSelector1 }\n    let pos3 = (config: Config) => { return config.fbdrPosSelector3 }\n\n    return (\n      <Fragment>\n      <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select4}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select5}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: (c) => c.showCube}}> </SingleSelect>\n\n      <MultiSelect {...{state, dispatch, select: pos1, options: {manipulators: LPEdgeManip} }}> </MultiSelect>\n      <MultiSelect {...{state, dispatch, select: pos3, options: {manipulators: LPEdgeManip} }}> </MultiSelect>\n      <ColorPanel {...{state, dispatch}} />\n\n      </Fragment>\n    )\n  } else if (state.mode === \"fb\") {\n    let select1 = (config: Config) => { return config.fbPieceSolvedSelector }\n    let select2 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: (c) => c.showCube}}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n\n\n      </Fragment>\n    )\n   } else if (state.mode === \"fs\") {\n    let select1 = (config: Config) => { return config.fsSelector }\n    let select2 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: (c) => c.showCube}}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n\n\n      </Fragment>\n    )\n   }else if (state.mode === \"4c\"){\n    let select1 = (config: Config) => { return config.lseStageSelector }\n    let select2 = (config: Config) => { return config.lseMCSelector }\n    let select3 = (config: Config) => { return config.lseBarSelector }\n    let select4 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: (c) => c.showCube}}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n   } else if (state.mode === \"eopair\"){\n    let select1 = (config: Config) => { return config.lseEOSelector }\n    let select2 = (config: Config) => { return config.lseEOLRMCSelector }\n    let select3 = (config: Config) => { return config.lseBarbieSelector }\n    let select4 = (config: Config) => { return config.lseEOLRScrambleSelector }\n    let select5 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <MultiSelect {...{ state, dispatch, select: select1, options: {noDialog: true}} }> </MultiSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select5 }}> </SingleSelect>\n        <SingleSelect {...{state, dispatch, select: (c) => c.showCube}}> </SingleSelect>\n\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n   }\n   else return <Fragment/>\n}\n\n\n\nexport default BlockTrainerView\n\n\n","import React, { Dispatch } from 'react'\n\nimport { makeStyles } from '@material-ui/core';\nimport { GridList, GridListTile} from '@material-ui/core';\n\nimport { AlgDesc } from \"../lib/Algs\";\nimport { AppState, Action } from '../Types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n      },\n    container: {\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n      },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      gridList: {\n        width: 600,\n        height: 450,\n      },\n}))\n\ntype VisualCubeConfig = {\n    alg: string;\n    stage: string;\n    sch: string; //yrbwog\n}\nfunction VisualCube(props: VisualCubeConfig) {\n  let { alg, stage, sch } = props\n  const template =\n  `http://localhost:8000/visualcube.php?fmt=svg&r=y30x-24&size=150&co=40&fo=100&cc=ccc`\n    + `&stage=${stage}&sch=${sch}&case=${alg}`\n  return <img src={template} alt=\"\"/>\n}\n\nfunction PanoramaTable(props: {algs: AlgDesc[]}){\n    let classes = useStyles()\n    let { algs } = props\n    return <GridList cellHeight={160} className={classes.gridList} cols={3}>\n            {algs.map((alg) => (\n                <GridListTile key={alg.id} cols={1}>\n                    <VisualCube alg={alg.algs[0]} stage=\"f2b\" sch=\"yrbwog\"/>\n                </GridListTile>\n            ))}\n        </GridList>\n}\n\nexport default function PanoramaView(props: { state: AppState, dispatch: Dispatch<Action> }) {\n    let classes = useStyles()\n    let algs : AlgDesc[] = [\n        \"RUR\", \"RU'R'\"\n    ].map( str => ({\n        id: str,\n        algs: [str],\n        kind: \"sb\"\n    }))\n\n    return <div className={classes.root}>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n    </div>\n}","import { CubieCube, Move } from './CubeLib';\nimport { cartesianProduct } from './Math';\n\nexport type PrunerConfig = {\n    size: number,\n    encode: (cube : CubieCube) => number,\n    solved_states: CubieCube[],\n    max_depth: number,\n    moveset: Move[]\n}\n\nexport type PrunerT = {\n    init: () => void,\n    query: (c : CubieCube) => number,\n    equal: (c1 : CubieCube, c2: CubieCube) => boolean,\n    encode: (c : CubieCube) => number\n}\n\nenum PrunerPiece {\n    S, O, I, X\n}; // Solved, Oriented, Ignore, Exclude \nconst { S, I } = PrunerPiece\n\nexport type PrunerDef = {\n    corner: PrunerPiece[],\n    edge:   PrunerPiece[],\n    center: PrunerPiece[],\n    solved_states: string[],\n    moveset: string[],\n    max_depth: number\n}\n\nexport function Pruner(config: PrunerConfig) : PrunerT {\n    let dist: Uint8Array;\n    let { size, encode, solved_states, max_depth, moveset} = config\n    let initialized = false\n    function init() {\n        if (initialized) return\n        initialized = true\n        dist = new Uint8Array(size).fill(255)\n        for (let state of solved_states) {\n            dist[encode(state)] = 0\n        }\n        let frontier = [...solved_states]\n        let total_expanded = frontier.length\n        for (let i = 0; i < max_depth; i++) {\n            console.log(\"pruner: expanding depth \", i)\n            let new_frontier = []\n            for (let state of frontier) {\n                for (let move of moveset) {\n                    let newState = state.apply(move) // clone\n                    let idx = encode(newState)\n                    if (dist[idx] === 255) {\n                        dist[idx] = i + 1;\n                        new_frontier.push(newState)\n                    }\n                }\n            }\n            frontier = new_frontier\n            total_expanded += frontier.length\n        }\n        console.log(\"Initialization complete. size = \", total_expanded)\n    }\n    function query(cube: CubieCube) {\n        let d = dist[encode(cube)]\n        if (d === 255) return max_depth + 1;\n        return d\n    }\n    function equal(cube1: CubieCube, cube2: CubieCube) {\n        return encode(cube1) === encode(cube2)\n    }\n    return  {\n        init,\n        query,\n        equal,\n        encode\n    }\n}\n\n\n\nlet prunerFactory = function(def: PrunerDef): PrunerConfig {\n    // edge\n    if (def.corner.length !== 8 || def.edge.length !== 12 || def.center.length !== 6) {\n        throw new Error(\"Invalid pruner def\");\n    }\n    const {S, O, I, X} = PrunerPiece\n    const def_to_idx = (d : PrunerPiece[], count_all?: boolean) => {\n        let curr_idx = 0, idx_arr = []\n        for (let i = 0; i < d.length; i++) {\n            if (d[i] === S || (count_all && (d[i] === O || d[i] === I))) {\n                idx_arr.push(curr_idx++);\n            } else idx_arr.push(-1);\n        }\n        return idx_arr;\n    }\n    let eosize = def.edge.filter(x => x === S || x === O).length\n    let epsize = def.edge.filter(x => x === S).length\n    let eisize = def.edge.filter(x => x !== X).length\n    let esize = Math.pow(2, eosize) * Math.pow(eisize, epsize)\n    let ep_idx = def_to_idx(def.edge, false);\n    let e_idx = def_to_idx(def.edge, true);\n\n    let cosize = def.corner.filter(x => x === S || x === O).length\n    let cpsize = def.corner.filter(x => x === S).length\n    let cisize = def.edge.filter(x => x !== X).length\n    let csize = Math.pow(2, cosize) * Math.pow(cisize, cpsize)\n    let cp_idx = def_to_idx(def.corner, false);\n    let c_idx = def_to_idx(def.corner, true);\n\n    let tosize = def.center.filter(x => x === O).length\n    let tpsize = def.center.filter(x => x === S).length\n    let tisize = def.edge.filter(x => x !== X).length\n    let tsize = Math.pow(2, tosize) * Math.pow(tisize, tpsize)\n    let tp_idx = def_to_idx(def.center, false);\n\n    let size = esize * csize * tsize;\n\n    function encode(cube: CubieCube) {\n        let eo = 0, ep = 0, co = 0, cp = 0, to = 0, tp = 0, e, c, t\n        for (let i = 0; i < 12; i++) {\n            switch (def.edge[cube.ep[i]]) {\n                case S:\n                    eo = eo * 2 + cube.eo[i];\n                    ep = ep + Math.pow(eisize, ep_idx[cube.ep[i]]) * e_idx[i];\n                    break;\n                case O:\n                    eo = eo * 2 + cube.eo[i];\n                    break;\n            }\n        }\n        e = ep * Math.pow(2, eosize) + eo\n        for (let i = 0; i < 8; i++) {\n            switch (def.corner[cube.cp[i]]) {\n                case S:\n                    co = co * 3 + cube.co[i];\n                    cp = cp + Math.pow(cisize, cp_idx[cube.cp[i]]) * c_idx[i];\n                    break;\n                case O:\n                    co = co * 3 + cube.co[i];\n                    break;\n            }\n        }\n        c = cp * Math.pow(3, cosize) + co\n        for (let i = 0; i < 6; i++) {\n            switch (def.center[cube.tp[i]]) {\n                case S:\n                    tp = Math.pow(tisize, tp_idx[cube.tp[i]]) + i;\n                    break;\n                case O:\n                    to = to * 3 + (cube.tp[i] / 2) | 0;\n                    break;\n            }\n        }\n        t = tp * Math.pow(3, tosize) + to\n        return e * csize * tsize + c * tsize + t\n    }\n\n    const solved_states = def.solved_states.map( m => new CubieCube().apply(m))\n    const moveset : Move[] = def.moveset.map(s => Move.all[s])\n    const max_depth = def.max_depth\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\n\n\nlet fbdrPrunerConfig : PrunerConfig = function() {\n    const esize = Math.pow(24, 4)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        if (cube.cp[i] === 4) {\n          c1 = i * 3 + cube.co[i]\n        } else if (cube.cp[i] === 5) {\n          c2 = i * 3 + cube.co[i];\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0, e4 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n              case 7 : e4 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24 * 24) + e2 * (24 * 24) + e3 * 24 + e4\n      return enc_c + 24 * 24 * enc_e\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const max_depth = 4\n    const moveset : Move[] = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\nlet htm_rwm = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"]\nlet rrwmu = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n    \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\"]\n\nlet fbPrunerConfig = prunerFactory({\n    corner: [I,I,I,I,S,S,I,I],\n    edge:   [I,I,I,I,I,S,I,I,S,S,I,I],\n    center: [I,I,I,I,S,I],\n    solved_states: [\"id\"],\n    moveset: htm_rwm,\n    max_depth: 5\n});\n\nlet fbPrunerConfig_old : PrunerConfig = function() {\n    const esize = Math.pow(24, 3)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize * 6\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        if (cube.cp[i] === 4) {\n          c1 = i * 3 + cube.co[i]\n        } else if (cube.cp[i] === 5) {\n          c2 = i * 3 + cube.co[i];\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24 ) + e2 * (24 ) + e3\n      const enc_ce = enc_c + 24 * 24 * enc_e\n\n      let t1 = 0\n      for (let i = 0; i < 5; i++) {\n          if (cube.tp[i] === 4) { t1 = i }\n      }\n      const enc = enc_ce * 6 + t1\n      return enc\n    }\n\n    const moves = [\"id\"]\n    const solved_states = moves.map( move => new CubieCube().apply(move))\n\n    const max_depth = 4\n    const moveset : Move[] = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"] /* \"E\", \"E'\", \"E2\", \"S\", \"S'\", \"S2\" ]*/\n    .map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\n\n\n\nlet ssPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 3)\n    const c1 = is_front ? 7 : 6;\n    const e1 = is_front ? 11 : 10\n    const e2 = 7\n    function encode(cube:CubieCube) {\n      let v = [0 ,0, 0]\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v[0] = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n          if (cube.ep[i] === e1) v[1] = i * 2 + cube.eo[i];\n          else if (cube.ep[i] === e2) v[2] = i * 2 + cube.eo[i]\n      }\n      return v[0] + v[1] * 24 + v[2] * 24 * 24\n    }\n\n    const moves = [[]] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move))\n\n    const max_depth = 8\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n        \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\nlet sbPrunerConfig = prunerFactory({\n    corner: [I,I,I,I,I,I,S,S],\n    edge:   [I,I,I,I,I,I,I,S,I,I,S,S],\n    center: [I,I,I,I,I,I],\n    solved_states: [\"id\"],\n    moveset: rrwmu,\n    max_depth: 6\n});\n\n\nlet fsPrunerConfig = (is_front: boolean) => prunerFactory({\n        corner: is_front ? [I,I,I,I,S,I,I,I] : [I,I,I,I,I,S,I,I] ,\n        edge:   is_front ? [I,I,I,I,I,S,I,I,S,I,I,I] : [I,I,I,I,I,S,I,I,I,S,I,I] ,\n        center: [I,I,I,I,S,I],\n        solved_states: [\"id\"],\n        moveset: htm_rwm,\n        max_depth: 4\n    });\n\n\nlet lsePrunerConfig : PrunerConfig = function() {\n    const size = Math.pow(12, 6) * 4 * 4 // TODO: optimize this plz\n    function encode(cube:CubieCube) {\n      let edge_encode = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n      let enc = [0, 0, 0, 0, 0, 0]\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx > -1) {\n            enc[idx] = edge_encode[i] * 2 + cube.eo[i];\n        }\n      }\n      let edge_enc = 0;\n      for (let i = 0; i < 6; i++) {\n        edge_enc = edge_enc * 12 + enc[i];\n      }\n      return edge_enc * 4 * 4 + cube.tp[0] * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves = [Move.all[\"id\"]]\n    const solved_states = moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 7\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\nfunction eolrPrunerConfig(center_flag: number, barbie_mode?: string): PrunerConfig {\n    const size = 6 * 6 * Math.pow(2, 6) * 4 * 2 // TODO: optimize this plz\n\n    const edge_encode = [0, 1, 0, 2, 0, -1, 0, -1, -1, -1, -1, -1];\n    const edge_idx = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n    function encode(cube:CubieCube) {\n      let eo = 0, ep = 0\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx >= 0) {\n            eo = eo * 2 + cube.eo[i]\n        }\n        if (idx > 0) {\n            ep += Math.pow(6, idx - 1) * edge_idx[i]\n        }\n      }\n      // make no distinction between centers M2 apart\n      return (eo * 36 + ep) * 4 * 2 + ~~(cube.tp[0] / 2) * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves_ac = cartesianProduct( [\"U'\", \"U\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"] ).map(x => x.join(\" \"))\n    const moves_mc = cartesianProduct( [\"M'\"], [\"U\", \"U'\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"]).map(x => x.join(\" \"))\n    let moves: string[] = []\n    if (center_flag & 0x01) moves = moves.concat(moves_ac)\n    if (center_flag & 0x10) moves = moves.concat(moves_mc)\n\n    const barb_moves_ac = [\"U\", \"U'\"]\n    const barb_moves_mc = [\"M U\", \"M U'\"]\n    let barb_moves: string[] = []\n    if (center_flag & 0x01) barb_moves = barb_moves.concat(barb_moves_ac)\n    if (center_flag & 0x10) barb_moves = barb_moves.concat(barb_moves_mc)\n\n    const pre_moves = barbie_mode === \"barbie\" ? barb_moves :\n        (barbie_mode === \"ab4c\" ? [\"id\"] : moves)\n\n    const solved_states = pre_moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 20\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\n\nexport { fbdrPrunerConfig, fsPrunerConfig, sbPrunerConfig, ssPrunerConfig, fbPrunerConfig, lsePrunerConfig, eolrPrunerConfig,\n    prunerFactory, fbPrunerConfig_old}","import {initialize, solve as min2phaseSolve, Min2PhaseCube} from \"./min2phase.js\"\nimport { CubieCube } from \"../CubeLib\";\n\nexport {initialize}\n\nfunction toMin2Phase(state: CubieCube): Min2PhaseCube {\n  // Note: this is its own inverse.\n  // const conjugate = {\n  //   EDGE: { permutation: [ 1, 0, 3, 2, 5, 4, 7, 6, 8, 9, 11, 10 ],\n  //           orientation: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CORNER: { permutation: [ 0, 3, 2, 1, 4, 5, 6, 7 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CENTER: { permutation: [ 0, 1, 2, 3, 4, 5 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0 ] }\n  // };\n  // const pseudo = Combine(def, Combine(def, conjugate, Invert(def, state)), conjugate);\n\n  return {\n    cp: state.cp,\n    co: state.co,\n    ep: state.ep,\n    eo: state.eo\n  }\n}\n\nexport function solve(state: CubieCube): string {\n  return min2phaseSolve(toMin2Phase(state));\n}\n","import { CubieCube, Move, MoveSeq } from './CubeLib';\nimport { arrayEqual } from './Math';\n\nimport { Pruner, PrunerT, fbdrPrunerConfig, fsPrunerConfig, sbPrunerConfig, ssPrunerConfig, fbPrunerConfig, lsePrunerConfig, PrunerConfig, eolrPrunerConfig, PrunerDef, fbPrunerConfig_old } from './Pruner';\n\nimport { prunerFactory } from './Pruner';\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\n\n\ntype SolverConfig = {\n    is_solved: (cube : CubieCube) => boolean,\n    moveset: Move[],\n    pruners: PrunerT[],\n}\n\ntype Accumulator = {\n    solutions: MoveSeq[],\n    capacity: number\n}\n\nexport type SolverT = {\n    solve: (cube : CubieCube, l : number, r : number, c : number) => MoveSeq[],\n    is_solved: (cube : CubieCube) => boolean,\n    getPruner: () => PrunerT[]\n}\n\n\nfunction Solver(config: SolverConfig) : SolverT{\n    const MAX_STATE_COUNT = 1000000\n    let { moveset, is_solved, pruners } = config\n    let state_count = 0, prune_count = 0;\n    let accum : Accumulator\n    let max_depth : number\n    let min_depth : number\n\n    enum SState {\n        CONTINUE,\n        STOP\n    };\n\n    function solve_depth(cube: CubieCube, min_depth_: number, max_depth_: number, accum_: Accumulator) {\n        accum = accum_\n        max_depth = max_depth_\n        min_depth = min_depth_\n        state_count = 0\n        prune_count = 0\n        search(cube, 0, [])\n        return accum\n    }\n\n    let Moveable = Object.create({})\n    function prepareNextMoveable() {\n        function getAvailableMove(name : string) {\n            switch (name[0]) {\n                case \"U\": return moveset.filter(k => k.name[0] !== \"U\");\n                case \"D\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\");\n                case \"R\": {\n                    let base = moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"r\");\n                    if (name === \"R\") return base.filter(k => k.name !== \"M'\")\n                    if (name === \"R'\") return base.filter(k => k.name !== \"M\")\n                    if (name === \"R2\") return base.filter(k => k.name !== \"M2\")\n                    return base\n                }\n                case \"L\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"r\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"M\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"F\": return moveset.filter(k => k.name[0] !== \"F\");\n                case \"B\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\");\n\n                case \"E\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\" && k.name[0] !== \"E\");\n                case \"S\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\" && k.name[0] !== \"S\");\n            }\n        }\n        for (let move of moveset) {\n            Moveable[move.name] = getAvailableMove(move.name)\n        }\n    }\n    prepareNextMoveable()\n\n    function expand(cube: CubieCube, depth: number, solution: Move[]) : SState{\n        const availableMoves = solution.length > 0 ? Moveable[solution[solution.length - 1].name] : moveset\n        const seen_encodings = new Set()\n        seen_encodings.add(pruners[0].encode(cube))\n        for (let move of availableMoves) {\n            let new_cube = cube.apply(move)\n            let enc = pruners[0].encode(new_cube)\n            let redundant = seen_encodings.has(enc)\n            if (!redundant) {\n                seen_encodings.add(enc)\n                solution.push(move);\n                let st : SState = search(new_cube, depth + 1, solution);\n                solution.pop();\n                if (st === SState.STOP) {\n                    return SState.STOP\n                }\n            }\n        }\n        return SState.CONTINUE\n    }\n\n    function try_push(solution: Move[], depth: number) {\n        if (depth < min_depth) return SState.CONTINUE\n        if (accum.solutions.length < accum.capacity) {\n            let flag = true\n            for (let sol of accum.solutions) {\n                if (arrayEqual(sol.moves, solution)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                accum.solutions.push(new MoveSeq([...solution]))\n            }\n        }\n\n        if (accum.solutions.length === accum.capacity) {\n            return SState.STOP\n        } else {\n            return SState.CONTINUE\n        }\n    }\n\n    function search(cube: CubieCube, depth: number, solution: Move[]) : SState {\n        state_count++;\n        if (state_count > MAX_STATE_COUNT) {\n            return SState.STOP\n        }\n        if (is_solved(cube)) {\n            return try_push(solution, depth)\n        } else {\n            if (depth >= max_depth) return SState.CONTINUE;\n            let d = pruners[0].query(cube)\n            if (d + depth > max_depth) {\n                prune_count++;\n                return SState.CONTINUE\n            } else {\n                return expand(cube, depth, solution)\n            }\n        }\n    }\n\n    function solve(cube: CubieCube, depth_l: number, depth_r: number, capacity: number) {\n        let accum : Accumulator = {\n            solutions: [],\n            capacity\n        }\n        for (let i = depth_l; i <= depth_r; i++) {\n            accum = solve_depth(cube, depth_l, i, accum)\n            if (accum.solutions.length === accum.capacity) {\n                break;\n            }\n        }\n        console.log(`Number of states = ${state_count}, pruned = ${prune_count}`);\n        return accum.solutions\n    }\n\n    function getPruner() {\n        return pruners\n    }\n    return { solve, is_solved, getPruner }\n};\n\nfunction solverFactory(def: PrunerDef | PrunerConfig) {\n    let prunerConfig: PrunerConfig\n    if (\"corner\" in def) {\n        prunerConfig = prunerFactory(def);\n    } else {\n        prunerConfig = def\n    }\n    let pruner = Pruner(prunerConfig)\n    pruner.init()\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    let solved_states = new Set(prunerConfig.solved_states.map(x => pruner.query(x)))\n    let is_solved = (prunerConfig.solved_states.length === 0) ?\n        (cube: CubieCube) => pruner.query(cube) === 0 :\n        (cube: CubieCube) => solved_states.has(pruner.query(cube));\n\n    let config = {\n        is_solved,\n        moveset: prunerConfig.moveset,\n        pruners: [pruner],\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nlet FbSolver = (useOld?: boolean) => solverFactory(useOld ? fbPrunerConfig_old : fbPrunerConfig)\n\nlet FbdrSolver = () => solverFactory(fbdrPrunerConfig)\n\nlet SsSolver = (is_front: boolean) => solverFactory(ssPrunerConfig(is_front))\n\nlet SbSolver = () => solverFactory(sbPrunerConfig)\n\nlet FsSolver = (is_front: boolean) => solverFactory(fsPrunerConfig(is_front))\n\nlet LSESolver = () => solverFactory(lsePrunerConfig)\n\nlet EOLRSolver = (center_flag: number, barbie_mode?: string) =>\n    solverFactory(eolrPrunerConfig(center_flag, barbie_mode))\n\nlet Min2PhaseSolver : () => SolverT = function() {\n    // polyfill for min2phase\n\n    min2phase_init();\n    function solve(cube : CubieCube, l : number, r : number, c : number) {\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp), \"Cube center is not solved: \" + cube.tp)\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        let solution = min2phase_solve(transformed_cube);\n        return [ new MoveSeq(solution).inv() ]\n    }\n    function is_solved(cube: CubieCube) {\n        return true\n    }\n    function getPruner() {\n        return []\n    }\n    return {\n        solve,\n        is_solved,\n        getPruner\n    }\n}\n\n\n\nexport { FbdrSolver, FbSolver, SbSolver, FsSolver, SsSolver, Min2PhaseSolver, LSESolver, EOLRSolver }","import { FbdrSolver, SolverT, FsSolver, SsSolver, SbSolver, FbSolver, Min2PhaseSolver, LSESolver, EOLRSolver} from './Solver';\n\nlet all_solvers = [\n\"fbdr\",\"fb\", \"fs-front\", \"fs-back\", \"ss-front\", \"ss-back\", \"min2phase\",\n\"lse\", \"eolrac\", \"eolrmc\", \"eolr\", \"eolrac-b\", \"eolrmc-b\", \"eolr-b\" ]\n\nlet CachedSolver = function() {\n    let cache : Map<string, SolverT> = new Map()\n    function get(s: string) {\n        if (!cache.has(s)) {\n            switch (s) {\n                case \"fbdr\": cache.set(s, FbdrSolver()); break\n                case \"fb\": cache.set(s, FbSolver()); break\n                case \"fs-front\": cache.set(s, FsSolver(true)); break\n                case \"fs-back\": cache.set(s, FsSolver(false)); break\n                case \"ss-front\": cache.set(s, SsSolver(true)); break\n                case \"ss-back\": cache.set(s, SsSolver(false)); break\n                case \"sb\": cache.set(s, SbSolver()); break\n\n                case \"min2phase\": cache.set(s, Min2PhaseSolver()); break\n                case \"lse\": cache.set(s, LSESolver()); break\n                case \"lse-ab4c\": cache.set(s, EOLRSolver(0x01, \"ab4c\")); break\n                case \"eolrac\": cache.set(s, EOLRSolver(0x01)); break\n                case \"eolrmc\": cache.set(s, EOLRSolver(0x10)); break\n                case \"eolr\": cache.set(s, EOLRSolver(0x11)); break\n                case \"eolrac-b\": cache.set(s, EOLRSolver(0x01, \"barbie\")); break\n                case \"eolrmc-b\": cache.set(s, EOLRSolver(0x10, \"barbie\")); break\n                case \"eolr-b\": cache.set(s, EOLRSolver(0x11, \"barbie\")); break\n            }\n        }\n        return cache.get(s) as SolverT\n    }\n    return {get}\n}()\n\nexport {CachedSolver, all_solvers}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  Button, IconButton, DialogContent, TextField, DialogContentText\n} from '@material-ui/core';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { Table, Paper, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\n\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport AddIcon from '@material-ui/icons/Add';\nimport { AppState, Action, FavCase } from '../Types';\nimport { all_solvers } from '../lib/CachedSolver';\n\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    width: '100%',\n    minWidth: 200,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport function warnDialog(props: { confirm: () => void} ) {\n\n}\n\nfunction parseAddString(state: AppState, s : string) : [ FavCase[], boolean] {\n  const res : FavCase[] = []\n\n  const allSolvers = new Set(all_solvers);\n  for (const line of s.split('\\n')) {\n    let cols = line.split(',')\n    if (cols.length !== 2) continue\n    let solver = cols[0].trim().split(\"|\")\n    let setup = cols[1].trim()\n\n    if (solver.every(x => allSolvers.has(x))) {\n      let case_ : FavCase = {\n        mode: state.mode,\n        solver,\n        setup\n      }\n      res.push(case_)\n    }\n  }\n  if (res.length > 0) return [res, true]\n  else return [ [], false]\n}\n\nexport default function FavListView(props: { state: AppState, dispatch: React.Dispatch<Action> }) {\n  const {state, dispatch} = props\n  const classes = useStyles();\n  const favList = state.favList.filter(c => c.mode === state.mode)\n\n  const play = (i: number) => {\n    dispatch({ type: \"favList\", content: [ favList[i] ], action: \"replay\" })\n  }\n  const remove = () => {\n    if (dialogID >= 0 && dialogID < favList.length)\n    dispatch({ type: \"favList\", content: [ favList[dialogID] ], action: \"remove\" })\n  }\n  const [ dialogID, setDialogID ] = React.useState(-1)\n\n  const handleClose = () => setDialogID(-1)\n  const handleRemove = () => { remove(); setDialogID(-1); }\n  const dialogDelete = (<Dialog open={dialogID >= 0} onClose={handleClose} >\n    <DialogTitle id=\"alert-dialog-title\">{\"Delete this alg from favorites?\"}</DialogTitle>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        No\n    </Button>\n      <Button onClick={handleRemove} color=\"primary\" autoFocus>\n        Yes\n    </Button>\n    </DialogActions>\n  </Dialog>)\n\n  const [ addDialogOpen, setAddDialogOpen ] = React.useState(false)\n  const [ addString, setAddString ] = React.useState(\"\")\n  const handleAdd = () => setAddDialogOpen(true)\n  const handleAddClose = () => setAddDialogOpen(false)\n  const handleAddSuccess = () => {\n    let [res, status] = parseAddString(state, addString)\n    if (status) {\n      dispatch({ type: \"favList\", content: res, action: \"add\" })\n    }\n    handleAddClose()\n  }\n  const handleTextChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\n    setAddString(event.target.value)\n  }\n  const dialogAdd = <Dialog open={addDialogOpen} onClose={handleAddClose} aria-labelledby=\"form-dialog-title\">\n    <DialogTitle id=\"form-dialog-title\">Add New Cases</DialogTitle>\n    <DialogContent>\n      <DialogContentText>\n        Input your cases here. (one per line) <br></br>\n        Format: [category], [setup algorithm].\n        category := fb | fbdr | ss-front | ss-back\n      </DialogContentText>\n      <TextField\n        autoFocus\n        multiline\n        margin=\"dense\"\n        id=\"name\"\n        fullWidth\n        onChange={handleTextChange}\n        onKeyDown={ (event) => { event.stopPropagation() } }\n      />\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleAddClose} color=\"primary\">\n        Cancel\n    </Button>\n      <Button onClick={handleAddSuccess} color=\"primary\">\n        Add All\n    </Button>\n    </DialogActions>\n  </Dialog>\n\n\n  return (\n    <div>\n    {dialogDelete}\n    {dialogAdd}\n    <Paper>\n      <Table className={classes.table} size=\"small\" >\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"> Scramble </TableCell>\n            <TableCell align=\"center\" rowSpan={1}>\n              <IconButton   onClick={handleAdd} component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <AddIcon />\n              </IconButton>\n              \n            {/* <IconButton component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <FileCopyIcon />\n              </IconButton> */}\n             </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {favList.map((value, i) => {\n            //const labelId = `favlist-label-${i}`;\n            return (\n              <TableRow key={i}>\n                {/* <TableCell align=\"center\" >\n                  {/* padding=checkbox <Checkbox></Checkbox> */}\n\n                <TableCell align=\"center\">\n                { value.solver.join(\"|\") + \",\" + value.setup }\n                </TableCell>\n                <TableCell align=\"center\">\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => play(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <PlaylistPlayIcon />\n                  </IconButton>\n\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => setDialogID(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <DeleteOutlineIcon />\n                  </IconButton>\n\n                </TableCell>\n              </TableRow>\n            )\n          })}</TableBody>\n      </Table>\n    </Paper>\n    </div>\n  )\n}","import React from \"react\";\n\nimport { makeStyles } from '@material-ui/core';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { ENABLE_DEV } from '../settings';\nimport InfoIcon from '@material-ui/icons/Info';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles(theme => {\n    let is_bright = theme.palette.primary.main === '#556cd6';\n    return ({\n    page: {\n      backgroundColor: theme.palette.background.default\n    },\n    container: {\n      display: \"flex\"\n    },\n    icon: {\n      minWidth: 0\n    },\n    root: {\n      display: \"flex\"\n    },\n    bar: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.background.paper,\n      //borderRadius: \"5px\"\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n    },\n    select: {\n      backgroundColor: is_bright ? \"#657ce9\" : \"#bfc4e2\",\n      color: theme.palette.background.paper,\n      paddingLeft: 12,\n      marginRight: 15,\n      marginLeft: 15,\n      fontWeight: 500,\n      fontSize: \"0.9rem\",\n      paddingTop: 8,\n      paddingBottom: 8,\n      borderRadius: 4,\n      //borderBottom: \"1px solid \" + theme.palette.background.default,\n    }\n})})\nconst description = [\n\"Solve Analysis (Beta)\", \"FB Last Pair (+DR)\", \"First Square\", \"First Block\", \"Second Square\", \"CMLL\", \"LSE 4c\", \"EOLR / EOLRb\"\n]\n\nfunction TopBarView(props: { value: number, onChange: (x: number) => void,\n    toggleFav: () => void, toggleBright: () => void, handleInfoOpen: () => void } )\n{\n    let classes = useStyles()\n    let { value, onChange, toggleFav, toggleBright, handleInfoOpen } = props\n    let value_str = description[value]\n    let handleChange = (event: React.ChangeEvent<{ value: unknown }>) =>  {\n        onChange(description.indexOf(event.target.value as string))\n        //\n    }\n    return <div>\n            <Box boxShadow={4} >\n        <Toolbar className={classes.bar} >\n        <Typography style={{fontSize: \"0.9rem\", fontFamily: \"Public Sans\", flexShrink: 10}} >\n            Roux Trainer\n        </Typography>\n        <FormControl style={{flexShrink: 1}}>\n            <Select\n                 value={value_str}\n                 className={classes.select}\n                 onChange={handleChange}\n                 onFocus={(e) => e.target.blur()}\n            >\n                { description.map( (s, i) => <MenuItem key={i} value={s}>{s}</MenuItem> )}\n            </Select>\n        </FormControl>\n        <Box style={{flexGrow: 10}}> </Box>\n        <IconButton onClick={toggleFav}>\n            <BookmarkIcon />\n        </IconButton>\n        <IconButton onClick={toggleBright}>\n            <Brightness6Icon/>\n        </IconButton>\n        <IconButton onClick={handleInfoOpen}>\n            <InfoIcon />\n        </IconButton>\n        </Toolbar>\n        </Box>\n    </div>\n}\n\nexport default TopBarView;","import { EventAvailableOutlined } from \"@material-ui/icons\";\nimport { setEmitFlags } from \"typescript\";\nimport { MoveSeq } from \"./CubeLib\";\nimport two_gram_meter from './two_gram_v1.json'\nexport abstract class Evaluator {\n    abstract evaluate(moves: MoveSeq) : number;\n    abstract name : string;\n}\nexport class SeqEvaluator extends Evaluator {\n    name = \"sequential\";\n    static moveCost_gen() {\n        let pairs: [string, number][] = [\n            [\"U\", 0.8], [\"U'\", 0.8], [\"U2\", 1.0],\n            [\"R\", 0.8], [\"R'\", 0.8], [\"R2\", 1.2],\n            [\"r\", 1], [\"r'\", 1], [\"r2\", 1.3],\n            [\"L\", 1], [\"L'\", 1], [\"L2\", 1.4],\n            [\"F\", 1.4], [\"F'\", 1.4], [\"F2\", 1.8],\n            [\"B\", 1.6], [\"B'\", 1.6], [\"B2\", 2.2],\n            [\"D\", 1.4], [\"D'\", 1.4], [\"D2\", 1.7],\n            [\"M\", 1.5], [\"M'\", 1.2], [\"M2\", 1.8],\n            [\"S\", 1.7], [\"S'\", 1.7], [\"S2\", 3.0],\n            [\"E\", 1.5], [\"E'\", 1.5], [\"E2\", 2.4],\n        ];\n        let costMap = new Map(pairs);\n        return costMap;\n    }\n    static moveCost = SeqEvaluator.moveCost_gen();\n\n    evaluate(moves: MoveSeq) {\n        let sum = 0;\n        for (let m of moves.moves) {\n            const value = (SeqEvaluator.moveCost.get(m.name)) || 1.4;\n            sum += value;\n        }\n        return sum;\n    }\n\n}\n\nexport class QTMEvaluator extends Evaluator {\n    name = \"qtm\";\n    evaluate(moves: MoveSeq) {\n        let sum = 0;\n        for (let m of moves.moves) {\n            sum += m.name[1] === \"2\" ? 2 : 1;\n        }\n        return sum;\n    }\n}\n\nexport class DefaultEvaluator extends Evaluator {\n    name = \"default\";\n    evaluate(moves: MoveSeq) {\n        return moves.moves.length;\n    }\n}\n\n\nexport class TwoGramEvaluator extends Evaluator {\n    name = \"two-gram\";\n    static meter = two_gram_meter as {[s: string]: string};\n    evaluate(moves_input: MoveSeq) {\n        let score = 0\n        let moves = [\"\", ...moves_input.moves.map(x => x.name), \"\"]\n        for (let i =0; i < moves.length - 1; i++) {\n            let two_gram = moves[i] + moves[i + 1]\n            let curr_score = Number.parseFloat(TwoGramEvaluator.meter[two_gram])\n            if (Number.isNaN(curr_score)) {\n                curr_score = 0.3;\n            }\n            score += curr_score;\n        }\n        return score\n    }\n}\n\n//ames: [\"sequential\", \"two-gram\", \"QTM\", \"default\"],\nexport function getEvaluator(s: string) {\n    switch (s) {\n        case \"sequential\": return new SeqEvaluator();\n        case \"two-gram\": return new TwoGramEvaluator();\n        case \"qtm\": return new QTMEvaluator();\n        case \"default\": \n        default :\n            return new DefaultEvaluator();\n    }\n} ","\nimport { CubeUtil, CubieCube, Mask, Move, MoveSeq } from './CubeLib';\nimport { CachedSolver } from '../lib/CachedSolver';\nimport { getEvaluator } from '../lib/Evaluator';\n\nexport type AnalyzerState = {\n    scramble: string,\n    post_scramble: string, // the part of solution leading up to the stage under analysis\n    full_solution: SolutionDesc[],\n    stage: string,\n    orientation: string,\n    pre_orientation: string,\n    num_solution: number,\n    show_mode: string //\"foreach\" | \"combined\"\n}\nexport let initialState : AnalyzerState = {\n    scramble: \"L2 D2 R2 B2 F' D2 U2 L2 B2 F L B' U2 F' D U B L D2 \",\n    post_scramble: \"\",\n    full_solution: [],\n    stage: \"fb\",\n    orientation: \"x2y\",\n    pre_orientation: \"\",\n    num_solution: 1,\n    show_mode: \"foreach\"\n}\n\nexport type SolverConfig = {\n    premoves?: string[],\n    num_solution: number,\n    upper_limit: number,\n    lower_limit?: number,\n    evaluator?: string\n  }\n  \nexport type SolutionDesc = {\n    solution: MoveSeq,\n    premove: string,\n    score: number,\n    orientation?: string,\n    stage: string\n}\n  \nfunction is_fb_solved(cube: CubieCube, oris: MoveSeq[]) {\n    for (let ori of oris) {\n        let cube1 = cube.changeBasis(ori).apply(ori.inv())\n        if (CubeUtil.is_solved(cube1, Mask.fb_mask)) return ori  \n    }\n    return null\n}\n\n\n\nexport function analyze_roux_solve(cube: CubieCube, solve: MoveSeq) {\n    //todo: break up half turns to detect cancellation in between stages\n    let oris = get_oris(\"cn\").map(m => new MoveSeq(m))\n    let pres = [\"\", \"x\", \"x'\", \"x2\"].map(m => new MoveSeq(m))\n    const defaultSolution = {\n        solution: [], premove: \"\", orientation: \"\", stage: \"\", score: 0\n    }\n    // figure out which fb gets solved first\n    let stages = [\"fb\", \"ss\", \"sp\", \"cmll\", \"lse\"]\n    let solution : SolutionDesc[] = [];\n    let current_moves : Move[] = []\n    let stage_idx = 0\n    let getMasksForStage = (s: string) => {\n        switch (s) {\n            case \"ss\": return [Mask.ss_front_mask, Mask.ss_back_mask]\n            case \"sp\": return [Mask.sb_mask]\n            case \"cmll\": return [Mask.cmll_mask]\n            case \"lse\": return [Mask.solved_mask]\n            default: return [Mask.solved_mask]\n        }\n    }\n\n    let moves = [ Move.all[\"id\"], ...solve.moves]\n    for (let move of moves) {\n        cube = cube.apply(move)\n        if (move.name !== \"id\") current_moves.push(move)\n\n        if (stage_idx === 0) {\n            let res = is_fb_solved(cube, oris)\n            if (res !== null) {\n                let orientation = res\n                solution.push({ ...defaultSolution,\n                    solution: new MoveSeq(current_moves),\n                    orientation: orientation.moves.join(\"\"),\n                    stage: \"fb\"\n                })\n                stage_idx++\n                current_moves = []\n                cube = cube.changeBasis(orientation).apply(orientation.inv())\n            }\n        }\n        else if (stage_idx !== 3) {\n            let stage = stages[stage_idx]\n            let masks = getMasksForStage(stage)\n            if (masks.some(mask => CubeUtil.is_solved(cube, mask))) {\n                solution.push({ ...defaultSolution, \n                    solution: new MoveSeq(current_moves),\n                    stage\n                })\n                stage_idx++\n                current_moves = []\n            }\n        } else {\n            if (CubeUtil.is_cmll_solved(cube)) {\n                solution.push({ ...defaultSolution, \n                    solution: new MoveSeq(current_moves),\n                    stage: \"cmll\"\n                })\n                stage_idx++\n                current_moves = []\n            }\n        }\n        if (stage_idx >= stages.length) break\n    }\n    if (current_moves.length > 0) {\n        solution.push({ ...defaultSolution, \n            solution: new MoveSeq(current_moves),\n            stage: \"unknown\"\n        })\n    }\n    return solution\n}\n\nfunction solve(solver_str: string, cube: CubieCube, config: SolverConfig) {\n    const solver = CachedSolver.get(solver_str)\n    let { premoves, num_solution, upper_limit } = config\n    let ev = getEvaluator(config.evaluator || \"sequential\")\n    let solver_num_solution = (num_solution < 10) ? 10 : num_solution\n    let solutions = (premoves || [\"\"]).map(pm => \n        solver.solve(cube.apply(pm), 0, upper_limit, solver_num_solution)\n            .map(x => ({premove: pm, solution: x, score: ev.evaluate(x)}))\n    ).flat()\n    return solutions.sort( (x, y) => x.score - y.score).slice(0, num_solution) \n}\n\nconst get_oris = (ori: string, preori?: string) => {\n    let oris : string[] = []\n    if (ori === \"x2y\") {\n        oris = (preori === \"\") ? [\"\", \"y\", \"y'\", \"y2\", \"x2\", \"x2y\", \"x2y'\", \"x2y2\"] :\n        (preori === \"x\") ? [\"x\", \"xy\", \"xy'\", \"xy2\", \"x'\", \"x'y\", \"x'y'\", \"x'y2\"] :\n        [\"z\", \"zy\", \"zy'\", \"zy2\", \"z'\", \"z'y\", \"z'y'\", \"z'y2\"]\n    \n    } else if (ori === \"cn\") {\n        oris = [\"\", \"y\", \"y'\", \"y2\", \"x2\", \"x2y\", \"x2y'\", \"x2y2\",\n                \"x\", \"xy\", \"xy'\", \"xy2\", \"x'\", \"x'y\", \"x'y'\", \"x'y2\",\n                \"z\", \"zy\", \"zy'\", \"zy2\", \"z'\", \"z'y\", \"z'y'\", \"z'y2\"]\n    }\n    return oris\n}\nfunction analyze_fb(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        premoves: [\"\", \"x\", \"x'\", \"x2\"],\n        num_solution: state.num_solution,\n        upper_limit: 9\n    }\n    let oris = get_oris(state.orientation, state.pre_orientation)\n\n    let solutions = oris.map(ori => solve(\"fb\", cube.changeBasis(new MoveSeq(ori)), config).map(sol => ({\n    ...sol, orientation: ori, stage: \"fb\"\n    })).sort( (x, y) => x.score - y.score)).flat()\n\n    return solutions\n}\n\nfunction analyze_ss(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 15\n    }\n    let solutions = [\"ss-front\", \"ss-back\"].map(name => solve(name, cube, config).map(sol => ({\n        ...sol, stage: name\n    })).sort( (x, y) => x.score - y.score)).flat()\n    return solutions\n}\n\nfunction analyze_sp(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 10\n    }\n    let solutions = solve(\"sb\", cube, config).map(sol => ({\n        ...sol, stage: \"sp\"\n    })).sort( (x, y) => x.score - y.score)\n\n    return solutions\n}\n\nfunction analyze_lse(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 20\n    }\n    let solutions = solve(\"lse\", cube, config).map(sol => ({\n        ...sol, stage: \"lse\"\n    })).sort( (x, y) => x.score - y.score)\n\n    return solutions\n}\n\n\nexport function analyze(state: AnalyzerState) {\n    let cube = new CubieCube().apply(state.scramble).apply(state.post_scramble)\n    if (state.stage === \"fb\") return analyze_fb(state, cube)\n    else {\n        let ori = new MoveSeq((state.full_solution[0]?.orientation) || \"\")\n        cube = cube.changeBasis(ori).apply(ori.inv())\n        if (state.stage === \"ss\") return analyze_ss(state, cube)\n        else if (state.stage === \"sp\") return analyze_sp(state, cube)\n        else if (state.stage === \"lse\") return analyze_lse(state, cube)\n    }\n    return []\n}","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, makeStyles, Typography, useTheme, FormControl, FormLabel, Size, } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { CubeUtil, CubieCube, FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState,  Action, Config, FavCase, Mode} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\n\nimport { SingleSelect, MultiSelect } from './Select';\nimport { ColorPanel } from './Input';\nimport { AlgDesc } from '../lib/Algs';\nimport TextField from '@material-ui/core/TextField';\n\nimport { AnalyzerState, SolverConfig, SolutionDesc, initialState, analyze_roux_solve } from '../lib/Analyzer';\n\nimport * as Comlink from 'comlink';\n/* eslint-disable import/no-webpack-loader-syntax */\nimport Worker from \"worker-loader!../lib/Worker\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport Chip from '@material-ui/core/Chip';\nimport { BoxBufferGeometry, BoxHelper } from 'three';\nimport { CachedSolver } from '../lib/CachedSolver';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { createNonNullChain } from 'typescript';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// web work solution: worker-loader + comlink interface\n// https://dev.to/nicolasrannou/web-workers-in-create-react-app-cra-without-unmounting-4865\n// https://github.com/webpack-contrib/worker-loader#integrating-with-typescript\n// const worker = new Worker()\n// const obj = Comlink.wrap(worker)\n// async function init() {\n//   await (obj as any).inc();\n//   await (obj as any).inc();\n//   let ct = await (obj as any).counter\n//   console.log(\"Testing \",  ct);\n// }\n// init()\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default, \n      transition: \"all .5s ease-in-out\"\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    paper2: {\n      paddingLeft: theme.spacing(3),\n      paddingTop: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    setup: {\n      whiteSpace: 'pre-line',\n      fontSize: \"1.4rem\",\n      fontWeight:500,\n      [theme.breakpoints.down('xs')]: {\n      fontSize: \"1.0rem\",\n      fontWeight: 500\n      },\n  },\n    condGap: {\n    },\n    fgap: {\n      flexShrink: 100, flexBasis: \"2.5rem\", minWidth: \"1.5em\",\n      [theme.breakpoints.down('xs')]: {\n        flexBasis: \"1.0rem\", \n        minWidth: \"0.4rem\"\n      }\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    title1 : {\n      fontWeight: 500,\n      marginTop: 7,         \n      border: \"1px solid\",\n      borderRadius: 4,\n      fontSize: \"0.8rem\"\n   },\n    stage: {\n      paddingTop: 5,\n      paddingLeft: 5,\n    },\n    configItem: {\n      paddingRight: 15\n    },\n    stageText: {\n      color: theme.palette.text.primary,\n      textTransform: \"none\"\n    },\n    sourceIcon : {\n        color: theme.palette.secondary.main,\n        fontSize: 15,\n        padding: 0\n    },\n    sourceIconWrap : {\n        //border: \"1px solid \" + theme.palette.text.hint,\n        //borderRadius: 3\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    formControl: {\n      margin: theme.spacing(0),\n      minWidth: 120,\n    },\n  }))\n\nconst resetState = (state: AnalyzerState) => {\n  return {\n    ...state,\n    postScramble: \"\",\n    full_solution: [],\n    scramble: \"\",\n    stage: \"fb\"\n  }\n}\nfunction ScrambleView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void }) {\n    let { state, setState } = props\n    let classes = useStyles()\n    // Add event listeners\n    let [ value, setValue ] = React.useState(state.scramble)\n\n    let onScrambleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(event?.target.value)\n    }\n\n    let handleBegin = () => {\n\n      setState({...resetState(state), scramble: value})\n    }\n    let handleGen = () => {\n      let cube = CubeUtil.get_random_with_mask(Mask.empty_mask)\n      let scramble = CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0].inv().toString()\n      setState({...resetState(state), scramble})\n      setValue(scramble)\n    }\n\n    return (\n    <Box style={{display: \"flex\"}}>\n    \n      <Box style={{display: \"flex\", alignItems: \"center\", flexGrow: 1}}>\n        <TextField\n          size=\"small\"\n          fullWidth\n          multiline\n          rowsMax={3}\n          label={\"Scramble\"}\n          value={value}\n          onChange={onScrambleChange}\n          variant=\"filled\"\n        />\n      </Box>\n      <Box style={{}} className={classes.fgap} />\n      <Button onFocus={(evt) => evt.target.blur() } onClick={handleGen}\n            size=\"medium\" variant=\"contained\" color=\"primary\" >\n              Gen\n      </Button>\n      <Button onFocus={(evt) => evt.target.blur() } onClick={handleBegin}\n            size=\"medium\" variant=\"contained\" color=\"primary\" >\n              GO\n      </Button>\n    </Box> )\n}\n\nconst bases = \"\"\nfunction ConfigView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void}) {\n  let { state, setState } = props\n  let classes = useStyles()\n  let fb_ori_str = state.orientation + \",\" + state.pre_orientation\n  let handleFBOri = (event: React.ChangeEvent<{ value: unknown }>) => {\n    let value: string[]= (event.target.value as string).split(\",\")\n    setState({...state, orientation: value[0], pre_orientation: value[1]})\n  }\n  let display_mode_str = state.show_mode\n  let handle_display_mode = (event: React.ChangeEvent<{ value: unknown }>) =>  {\n    let value = (event.target.value as string)\n    setState({...state, show_mode: value})\n  }\n  let handle_num_solution = (event: React.ChangeEvent<{ value: unknown }>) =>  {\n    let value = Number.parseInt(event.target.value as string)\n    setState({...state, num_solution: value || state.num_solution})\n  }\n  return (\n  <Box display=\"flex\">\n    <Box className={classes.configItem}>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-helper-label\">FB Orientation</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          value={fb_ori_str}\n          onChange={handleFBOri}\n        >\n          <MenuItem value={\"x2y,\"}>x2y on White/Yellow</MenuItem>\n          <MenuItem value={\"x2y,x\"}>x2y on Blue/Green</MenuItem>\n          <MenuItem value={\"x2y,z\"}>x2y on Red/Orange</MenuItem>\n          <MenuItem value={\"cn,\"}>Color Neutral</MenuItem>\n        </Select>\n        <FormHelperText></FormHelperText>\n      </FormControl>\n    </Box>\n    <Box className={classes.configItem}>\n      <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-helper-label\">Display Mode</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={display_mode_str}\n        onChange={handle_display_mode}\n      >\n        <MenuItem value={\"foreach\"}>Per orientation</MenuItem>\n        <MenuItem value={\"combined\"}>Combined </MenuItem>\n      </Select>\n      <FormHelperText></FormHelperText>\n     </FormControl>\n    </Box>\n    <Box  className={classes.configItem}>\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-helper-label\"># Solutions</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={state.num_solution}\n        onChange={handle_num_solution}\n      >\n        <MenuItem value={1}>1</MenuItem>\n        <MenuItem value={3}>3 </MenuItem>\n        <MenuItem value={5}>5</MenuItem>\n        <MenuItem value={10}>10 </MenuItem>\n        <MenuItem value={25}>25 </MenuItem>\n      </Select>\n      <FormHelperText></FormHelperText>\n    </FormControl>\n    </Box>\n\n  </Box>)\n}\n\n\nfunction SolutionInputView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void}) {\n  let classes = useStyles()\n  let [editing, setEditing] = React.useState(false)\n  let [value, setValue] = React.useState(\"\")\n  let textField = React.useRef<HTMLInputElement | null>(null)\n  let container = React.useRef<HTMLInputElement | null>(null)\n  let editButton = React.useRef<HTMLElement | null>(null)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(event.target.value)\n      event.stopPropagation()\n  }\n  const toggleEdit = () => {\n      setEditing(true)\n  }\n  const handleClose = () => {\n    setEditing(false)\n    let t = Date.now()\n    let full_solution = analyze_roux_solve(new CubieCube().apply(props.state.scramble), new MoveSeq(value))\n    if (full_solution.length > 1 || full_solution.length === 1 && full_solution[0].solution.moves.length > 0 )\n      props.setState({...props.state, full_solution})\n  }\n  const onEntered = () => {\n      textField.current && textField.current.focus()\n  }\n  return <Box>\n    <Box >\n          <Button variant={editing ? \"contained\" : \"outlined\"}\n              color=\"primary\"\n              size=\"small\"\n              onClick={toggleEdit}\n              \n              startIcon={<EditIcon />}\n          >\n              {\"Input Your Solution\"}\n          </Button>\n    </Box>\n\n    <Dialog open={editing} \n            onClose={handleClose}  \n            onEntered={onEntered}\n            maxWidth=\"sm\"\n            fullWidth\n            >\n          <DialogTitle> Input your reconstructed solution </DialogTitle>\n          <DialogContent>\n                <TextField\n                    inputRef={textField}\n                    multiline\n                    size=\"medium\"\n                    fullWidth\n                    rowsMax={10}\n                    rows={5}\n                    value={value}\n                    onChange={onChange}\n                    variant=\"outlined\">\n                </TextField>\n          </DialogContent>\n          <DialogActions>\n              <Box padding={1}>\n              <Button onClick={handleClose} color=\"primary\" variant=\"outlined\" fullWidth >\n                  Confirm\n              </Button>\n              </Box>\n          </DialogActions>\n    </Dialog>\n  </Box>\n}\n\n\nfunction StageSolutionView(props: { solution: SolutionDesc }) {\n  let { solution, stage, premove, orientation } = props.solution\n  let getTags = () => {\n    if (stage === \"fb\") {\n      return [ orientation ]\n    } else if (stage === \"ss-front\" || stage === \"ss-back\"){\n      return [ stage ]\n    } else return []\n  }\n  let tags = getTags()\n  return (\n    <Box style={{display: \"flex\", marginBottom: \"2px\"}}>\n      {tags.filter(x=>x).map( (t, i) => <Chip variant=\"outlined\" size=\"small\" color=\"primary\" label={t} key={i} />) }\n      <Box style={{marginLeft: 5}}>\n        <Typography>\n          {premove + \" \" + solution.moves.map(m => m.name).join(\" \")}\n        </Typography>\n      </Box>\n    </Box>\n  )\n}\n\n\nfunction StageSolutionListView(props: { solutions: SolutionDesc[], state: AnalyzerState, setState: (newState: AnalyzerState) => void} ) {\n  let { solutions, state, setState } = props\n\n  return (\n    <Box lineHeight={1}>\n      { solutions.map( (s, i) => <StageSolutionView solution={s} key={i}/>) }\n    </Box>\n  ) \n}\n\nfunction FullSolutionView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void} ) {\n  let { state, setState } = props\n  let classes = useStyles()\n\n  let setStage = (i: number) => () => {\n    setState({...state, \n      stage: state.full_solution[i].stage,\n      post_scramble: state.full_solution.slice(0, i).map(x => x.premove + x.solution.toString()).join(\" \")\n    })\n  }\n  let [show, setShow] = React.useState(-1)\n  let stageView = (sol: SolutionDesc, i: number) => {\n    return (\n      <Box display=\"flex\" key={i} className={classes.stage} \n        onMouseLeave={ () => setShow(-1)} onMouseEnter={() => setShow(i)} onClick={() => setShow(show === i ? -1 : i)}>\n        <Button variant={\"text\"}\n              color=\"primary\"\n              size=\"small\"\n              onClick={setStage(i)}\n              style={{fontSize: \"0.7rem\", marginLeft: 5, border: (show === i) ? \"1px solid\" : \"1px solid rgba(0, 0,0,0)\"\n            }} >\n        <Typography variant=\"subtitle1\" className={classes.stageText}>{sol.solution.toString()} // {sol.stage}\n        </Typography>        \n        <SearchIcon fontSize=\"small\"/>\n        </Button>\n\n      </Box>\n    )\n  }\n  return (\n    <Box paddingBottom={2} lineHeight={1} >\n      <Box>\n        <SolutionInputView state={state} setState={setState}/>\n      </Box>\n      <Box style={{fontFamily: \"Public Sans\"}}>\n        { props.state.full_solution.map( (desc, i) => stageView(desc, i))}\n      </Box>\n    </Box>\n  )\n  \n}\n\nconst worker_raw = new Worker()\nconst worker = Comlink.wrap(worker_raw)\n\nfunction AnalyzerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state: appState, dispatch: appDispatch } = props\n    \n    const theme = useTheme()\n    let [ state, setState ] = React.useState(initialState)\n\n    let [ solutions, setSolutions ] = React.useState<SolutionDesc[]>([])\n\n    let classes = useStyles()\n\n    let mask = Mask.solved_mask\n    let cubieCube = new CubieCube().apply(state.scramble).apply(state.post_scramble)\n    let faceletCube = FaceletCube.from_cubie(cubieCube, mask)\n\n    let ycube = FaceletCube.from_cubie(cubieCube.changeBasis(new MoveSeq(\"y\")))\n\n    let solutions_to_display = solutions.slice()\n    if (state.show_mode === \"combined\") {\n      solutions_to_display = solutions_to_display.sort( (x, y) => x.score - y.score).slice(0, state.num_solution)\n    } else {\n     /// solutions_to_display = solutions.slice(0, Math.ceil(config.num_solution / oris.length))\n    }\n    React.useEffect(() => {\n      async function effect() {\n\n        let t = Date.now()\n        let curr_solutions = await (worker as any).analyze(state) as SolutionDesc[]\n        // console.log(\"web worker finished after \" + (Date.now() - t) + \" ms\")\n        //console.log(\"result = \", curr_solutions)\n\n        setSolutions(curr_solutions)\n        //l/et curr_solutions = await analyzer_worker(state, cubieCube)\n        //\n      }\n      effect()\n    }, [state.scramble, state.stage, state.post_scramble, state.num_solution, state.orientation, state.pre_orientation])\n\n    const gt_md = useMediaQuery(theme.breakpoints.up('md'));\n    const gt_sm = useMediaQuery(theme.breakpoints.up('sm'));\n    const canvas_wh = (gt_md) ? [400, 350] : (gt_sm) ? [400, 350] : [320, 280]\n\n    return (\n    <Box className={classes.container}>\n      <Paper className={classes.paper} elevation={1}>\n        <ScrambleView state={state} setState={setState}/>\n      </Paper>\n\n\n      <Paper className={classes.paper} elevation={2}>\n        <ConfigView state={state} setState={setState}/>\n      </Paper>\n\n      <Paper className={classes.paper2} elevation={1}>\n        <Box display=\"flex\" >\n          {\n            state.full_solution.length >= 1 ? <>\n              <Box style={{display: \"flex\", flexDirection: \"column\", alignSelf: \"flex-start\"}}> \n                <Box className={classes.title} style={{}}>\n                  My Solution\n                </Box> \n              </Box>\n              <Box style={{}} className={classes.fgap} /> \n            </>\n          : null\n          }\n\n          <FullSolutionView state={state} setState={setState}/>\n        </Box>\n\n      </Paper>\n\n      <Paper className={ classes.paper}>\n      <Grid container>\n        <Grid item md={6} sm={12} className={classes.condGap}>\n          <Box style={{display: \"flex\" }}>\n            <Box display=\"flex\" >\n                <Box style={{display: \"flex\", flexDirection: \"column\", alignSelf: \"flex-start\"}}> \n                  <Box className={classes.title} style={{}}>\n                    Solutions\n                  </Box> \n                  <Box>\n                  <Button className={classes.title1} size=\"small\" variant=\"outlined\" color=\"primary\">\n                    { state.stage }\n                  </Button>\n                  </Box>\n                </Box>\n            </Box>\n            <Box style={{}} className={classes.fgap} />\n           \n              <StageSolutionListView solutions={solutions_to_display} state={state} setState={setState}/>\n           \n          </Box>\n        </Grid>\n\n\n        <Grid item md={6} xs={12} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box style={{backgroundColor: \"rgba(0, 0, 0, 0)\"}}>\n            <CubeSim\n              width={canvas_wh[0]}\n              height={canvas_wh[1]}\n              cube={faceletCube}\n              colorScheme={appState.colorScheme.getColorsForOri(appState.cube.ori)}\n              hintDistance={ 6 }\n              theme={getActiveName(appState.config.theme)}\n\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            />\n          </Box>\n\n\n        </Grid>\n      </Grid>\n      </Paper>\n\n\n\n      <Box height={20}/>\n      <Divider/>\n      <Box height={20}/>\n\n\n    </Box>\n    );\n}\n\n\nexport default AnalyzerView\n\n\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/Worker.10e3feeb.worker.js\");\n}\n","import React from 'react'\nimport { AppState, Mode, Action } from \"../Types\";\n\nimport { Box, Typography,Button, makeStyles } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { Grid, Container } from '@material-ui/core';\n\nimport CmllTrainerView from './CmllTrainerView';\nimport BlockTrainerView from './BlockTrainerView';\nimport PanoramaView from './PanoramaView';\n\n\n//import 'typeface-roboto';\n\nimport FavListView from './FavListView';\nimport TopBarView from './TopBarView';\nimport AnalyzerView from './AnalyzerView';\n\n\ninterface TabPanelProps {\n  value: number,\n  index: number,\n  children: any,\n  [key: string]: any\n}\nfunction TabPanel(props: TabPanelProps ) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </Typography>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  page: {\n    backgroundColor: theme.palette.background.default\n  },\n  container: {\n    display: \"flex\"\n  },\n  icon: {\n    minWidth: 0\n  },\n  root: {\n    display: \"flex\"\n  },\n  bar: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.paper,\n    //borderRadius: \"5px\"\n  },\n  select: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.paper,\n    borderRadius: 4,\n    border: \"1px solid \" + theme.palette.background.default,\n  }\n}))\n\n\nconst modes : Mode[] = [\"analyzer\", \"fbdr\", \"fs\", \"fb\", \"ss\", \"cmll\", \"4c\", \"eopair\"]\n\nfunction _getInitialHashLocation() {\n  const default_idx = 1\n  if (window.location.hash) {\n    let idx = (modes as string[]).indexOf(window.location.hash.slice(1))\n    if (idx === -1) {\n      window.location.hash = \"\";\n      return default_idx;\n    } else {\n      return idx;\n    }\n  } else {\n    return default_idx\n  }\n}\n\n\n// TODO: Write getter and setter for config items, and also write handlers that map to setters\nfunction AppView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n  //const [locations, setLocations] = React.useState([])\n  let { state, dispatch } = props\n  let classes = useStyles()\n\n  const handleChange = React.useCallback( (newValue:number) => {\n    if (newValue < modes.length) {\n      setValue(newValue)\n      let mode = modes[newValue]\n      dispatch({type: \"mode\", content: mode})\n    }\n  }, [dispatch])\n\n  const [ open, setOpen ] = React.useState(false)\n\n  const [value, setValue] = React.useState(_getInitialHashLocation());\n  React.useEffect( () => {\n    dispatch({type: \"mode\", content: modes[_getInitialHashLocation()]})\n  }, [])\n\n  const handleInfoOpen = () => { setOpen(true) }\n  const handleInfoClose = () => { setOpen(false) }\n\n  const toggleBright = () => {\n    const theme_flag = [...state.config.theme.flags]\n    theme_flag[0] = 1 - theme_flag[0]\n    theme_flag[1] = 1 - theme_flag[1]\n    dispatch({ type: \"config\", content: {\n      theme: {\n        ...state.config.theme,\n        flags: theme_flag\n    }}})\n  }\n  const toggleFav = () => {\n    setFav(!showFav)\n  }\n\n  const [ showFav, setFav ] = React.useState(false)\n\n  return (\n    <main>\n      <Dialog open={open} onClose={handleInfoClose} >\n      <DialogTitle>About</DialogTitle>\n      <DialogContent dividers>\n        <Typography gutterBottom style={{whiteSpace: 'pre-line', fontSize: '1.3rem'}}>\n          Welcome to my awesome roux block trainer.\n        </Typography>\n        <br/>\n\n        <Typography gutterBottom style={{whiteSpace: 'pre-line'}}>\n\n        A bunch of shortcuts: <br/>\n        - Space for the next scramble. <br/>\n        - Enter to reset the virtual cube to current scramble. <br/>\n        - Cstimer style virtual cube control. <br/>\n\n        <br/>\n        </Typography>\n\n        {/* <Typography gutterBottom style={{whiteSpace: 'pre-line'}} variant=\"subtitle2\">\n        Currently supporting: FB+DR, SS, CMLL\n        </Typography> */}\n\n        <Typography gutterBottom style={{whiteSpace: 'pre-line'}} variant=\"body2\">\n\n        Feature requests are most definitely welcome. :)\n        </Typography>\n\n        <Typography gutterBottom variant=\"overline\">\n\n        --onionhoney(Zhouheng Sun)\n        </Typography>\n\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={handleInfoClose}>\n          Got it!\n        </Button>\n      </DialogActions>\n      </Dialog>\n\n      <TopBarView onChange={handleChange} value={value}\n        handleInfoOpen={handleInfoOpen} toggleBright={toggleBright} toggleFav={toggleFav}\n      />\n\n\n      <Box paddingY={2}>\n      <Container maxWidth={showFav ? \"lg\" : \"md\" }>\n\n      {\n      value === -1?\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item md={12} sm={12} xs={12}>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <PanoramaView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      :\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item hidden={!showFav} md={4} sm={4} xs={12} >\n        <FavListView {...{state, dispatch}} />\n        </Grid>\n\n        <Grid item md={showFav ? 8 : 12} sm={showFav ? 8 : 12} xs={12}>\n        <TabPanel value={value} index={0} className={classes.page}>\n          <AnalyzerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={1} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={2} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={3} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={5} className={classes.page}>\n          <CmllTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={6} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={7} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      }\n      </Container></Box>\n\n\n\n    </main>\n  )\n}\nexport default AppView","\nimport { Config, FavCase } from \"./Types\"\nexport const initialFavList : FavCase[] = []\nexport const initialConfig : Config = (() => {\n    let arr_ori_flag = Array(24).fill(0)\n    arr_ori_flag[7] = 1 // YR\n    return {\n        showCube: {\n            label: \"Virtual Cube\",\n            names:[\"Show\", \"Hide\"],\n            flags: [1,0],\n            kind: \"virtual-cube\"\n        },\n        theme: {\n            names: [\"bright\", \"dark\"],\n            flags: [1,0],\n            kind: \"theme\"\n        },\n        evaluator: {\n            label: \"solution sorting metrics\",\n            names: [\"sequential\", \"two-gram\", \"QTM\", \"default\"],\n            flags: [1,0, 0, 0],\n            kind: \"evaluator\"\n        },\n        cmllSelector: {\n            names: [\"o\", \"s\", \"as\", \"t\", \"l\", \"u\", \"pi\", \"h\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"cmll\",\n        },\n        cmllAufSelector: {\n            names: [\"None\", \"U\", \"U'\", \"U2\"],\n            flags: [1, 1, 1, 1],\n            kind: \"u_auf\"\n        },\n        cmllCubeMaskSelector: {\n            names: [\"Show\", \"Hide\", \"Hide LSE\"],\n            flags: [1, 0, 0],\n            kind: \"cube_mask\"\n        },\n        triggerSelector: {\n            names: [\"RUR'\", \"RU'R'\", \"R'U'R\", \"R'UR\"],\n            flags: [0, 0, 0, 0],\n            kind: \"trigger\"\n        },\n        hyperOriSelector: {\n            names: [\"off\", \"L/R\", \"F/B\"],\n            flags: [1 ,0, 0],\n            kind: \"hyperori\"\n        },\n        orientationSelector: {\n            label: \"Color Scheme (U-F)\",\n            names: [\n                \"WG\", \"WB\", \"WO\", \"WR\",\n                \"YG\", \"YB\", \"YO\", \"YR\",\n                \"BW\", \"BY\", \"BO\", \"BR\",\n                \"GW\", \"GY\", \"GO\", \"GR\",\n                \"OW\", \"OY\", \"OB\", \"OG\",\n                \"RW\", \"RY\", \"RB\", \"RG\",\n            ],\n            flags: arr_ori_flag,\n            kind: \"orientation\"\n        },\n        fbdrSelector: {\n            label: \"Position of square\",\n            names: [\"FS at back\", \"FS at front\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"fbdr\"\n        },\n        fbdrScrambleSelector: {\n            label: \"Type of scramble\",\n            names: [\"Short (Concerning FBDR Pieces only)\", \"Random State (Entire cube, useful for practicing F2B)\"],\n            flags: [1, 0],\n            kind: \"fbdr-scramble\"\n        },\n        fbOnlySelector: {\n            label: \"Pieces to solve\",\n            names: [\"FB Last Pair + DR\", \"FB Last Pair Only\"],\n            flags: [0, 1],\n            kind: \"fb-only\"\n        },\n        fbPairSolvedSelector: {\n            label: \"Last Pair pattern\",\n            names: [\"Random\", \"Solved(FS at back only)\"],\n            flags: [1, 0],\n            kind: \"fb-pair-solved\"\n        },\n        fbdrPosSelector1: {\n            label: \"Position of FB edge\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-1\"\n        },\n        fbdrPosSelector2: {\n            label: \"Position of FB edge\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-2\"\n        },\n        fbdrPosSelector3: {\n            label: \"Position of DR\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-3\"\n        },\n        fsSelector: {\n            label: \"Position of square\",\n            names: [\"Front FS\", \"Back FS\", \"Both\"],\n            flags: [0, 0, 1],\n            kind: \"fs\"\n        },\n        ssSelector: {\n            label: \"Position of square\",\n            names: [\"SS at front\", \"SS at back\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"ss\"\n        },\n        ssEOSelector: {\n            label: \"Orientation of DR\",\n            names: [\"Oriented\", \"Misoriented\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"ss-orientation\"\n        },\n        ssPosSelector: {\n            label: \"Position of DR\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"ss-position\"\n        },\n        ssPairOnlySelector: {\n            label: \"Solve w/wo DR\",\n            names: [\"SS\", \"SB First Pair\"],\n            flags: [1, 0],\n            kind: \"sb-pair-only\"\n        },\n        solutionNumSelector: {\n            label: \"Number of solutions\",\n            names: [\"1\", \"3\", \"5\", \"10\", \"25\"],\n            flags: [0, 0, 1, 0, 0],\n            kind: \"solution-num\"\n        },\n        fbPieceSolvedSelector: {\n            label: \"Difficulty\",\n            names: [\"Hard over x2y(Scramble only)\", \"Hard\", \"DL Solved\", \"BL Solved\", \"Random\"],\n            flags: [1, 0, 0, 0, 0],\n            kind: \"fb-piece-solved\"\n        },\n        lseMCSelector: {\n            label: \"Center\",\n            names: [\"Aligned\", \"Misaligned\"],\n            flags: [0, 1],\n            kind: \"lse-mc\"\n        },\n        lseBarSelector: {\n            label: \"EO Pair\",\n            names: [\"ULUR\", \"UFUB\"],\n            flags: [1, 0],\n            kind: \"lse-bar\"\n        },\n        lseStageSelector: {\n            label: \"Stage\",\n            names: [\"4b for MC(1 move EOPair insert)\", \"M2 to 4c\", \"4c\"],\n            flags: [0, 1, 0],\n            kind: \"lse-stage\"\n        },\n        lseEOSelector: {\n            label: \"EO\",\n            names: [\"solved\", \"arrow\", \"4/0\", \"2o/0\", \"2a/0\", \"1/1\", \"6flip\", \"2o/2\", \"0/2\", \"2a/2\"],\n            flags: [0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"lse-eo\"\n        },\n        lseEOLRMCSelector: {\n            label: \"Center strategy\",\n            names: [\"Non MC only\", \"MC only\", \"Combined\",\"Filter by Non-MC shorter\",  \"Filter by MC shorter\", ],\n            flags: [0, 0, 1, 0, 0],\n            kind: \"lse-eolrmc\"\n        },\n        lseBarbieSelector: {\n            label: \"EOLR / EOLRb\",\n            names: [\"EOLR\", \"EOLRb\"],\n            flags: [1, 0],\n            kind: \"lse-barbie\"\n        },\n        lseEOLRScrambleSelector: {\n            label: \"Type of scramble\",\n            names: [\"Short\", \"Random State\"],\n            flags: [0, 1],\n            kind: \"lse-eolr-scramble\"\n        }\n    }\n})()\n","import { Config, FavCase, Mode } from \"../Types\"\nimport { version } from \"../Version\"\nimport { initialConfig, initialFavList } from \"../Initialization\"\n\nexport type FavCaseStore = {mode: Mode, setup: string, solver: string }\nlet favListManager = function() {\n    const key = \"fav\"\n    let cache : FavCase[] | null = null\n    let getFavList = () => {\n        if (cache) return cache\n        const item = window.localStorage.getItem(key)\n        const item1 : FavCaseStore[] = item ? JSON.parse(item) : initialFavList\n        const item2 : FavCase[] = item1.map( ({mode, setup, solver}) => ({mode, setup, solver: solver.trim().split(\"|\")}) );\n        return item2\n    }\n    let setFavList = (item : FavCase[]) => {\n        const item1 : FavCaseStore[] = item.map(({mode, setup, solver}) => ({mode, setup, solver: solver.join(\"|\")}) );\n        window.localStorage.setItem(key, JSON.stringify(item1));\n        cache = item\n    }\n    return {\n        getFavList,\n        setFavList\n    }\n}()\n\nlet configManager = function() {\n    const key = \"config\"\n    const versionKey = \"version\"\n    let cache : Config | null = null\n\n    let getConfig = () => {\n        if (cache) {\n            return cache\n        }\n        const item = window.localStorage.getItem(key);\n        const vers = window.localStorage.getItem(versionKey)\n\n        const item1 : Partial<Config> = item ? JSON.parse(item) : initialConfig\n\n        if ( vers !== version) {\n            // version out of date\n            // let's preserve orientation\n            let config = initialConfig\n            if (item1.orientationSelector) {\n                config = {...initialConfig, orientationSelector: item1.orientationSelector}\n            }\n            window.localStorage.setItem(key, JSON.stringify(config));\n            window.localStorage.setItem(versionKey, version)\n\n            return config\n        }\n\n        // In rare cases we want to update new attributes but maintain previous version\n        if ( (item1 === null) || (item1 === undefined) || Object.keys(item1).length === 0) {\n            window.localStorage.setItem(key, JSON.stringify(initialConfig));\n            return initialConfig\n        }\n        // we will also add in unseen fields\n        if (Object.keys(item1).length < Object.keys(initialConfig).length) {\n            const item2 = {...initialConfig, ...item1}\n            window.localStorage.setItem(key, JSON.stringify(item2));\n            return item2\n        }\n        return item1 as Config\n    }\n\n    let setConfig = (partial: Partial<Config>) => {\n        let newConfig : Config = Object.assign(getConfig(), partial)\n        window.localStorage.setItem(key, JSON.stringify(newConfig));\n        cache = newConfig\n    }\n\n    return {\n        getConfig,\n        setConfig\n    }\n}()\n\nlet getConfig = configManager.getConfig\nlet setConfig = configManager.setConfig\nlet getFavList = favListManager.getFavList\nlet setFavList = favListManager.setFavList\n\nexport {\n    getConfig, setConfig, getFavList, setFavList\n}\n","const version = \"1.1\"\n\nexport {version}","import { AppState, Config, FavCase } from \"../Types\";\n/* State Manager\n * \"Passively\" updates localstorage in reduce.\n * Action types\n *  - move: respond to cube move\n *  - replay: replay case\n *  - reactToConfig: respond to changes in config\n */\nexport abstract class AbstractStateM {\n    state: AppState;\n    constructor(state: AppState) {\n        this.state = state;\n    }\n    abstract onMove(s: string): AppState;\n    abstract onConfig(conf: Config): AppState;\n    abstract onControl(s: string): AppState;\n    onReplay(case_: FavCase): AppState {\n        return this.state;\n    }\n}\n\nexport class StateFactory {\n    static create = (state: AppState) => {\n        let filler = ( (()=>1) as unknown ) as (state: AppState) => AbstractStateM;\n        return filler(state);\n    }\n}","// source: \"https://sites.google.com/view/kianroux/cmll\" and https://github.com/AshleyF/briefcubing/blob/master/algs.js\n\n//type oll_case = \"o\"|\"h\"|\"pi\"|\"u\"|\"t\"|\"s\"|\"as\"|\"l\"\nimport { Selector } from \"../lib/Selector\";\nimport { rand_choice } from \"./Math\";\n\nconst get_active_names = (sel : Selector) => {\n    let res = []\n    for (let i = 0; i < sel.names.length; i++) {\n        if (sel.flags[i]) {\n            res.push(sel.names[i]);\n        }\n    }\n    return res\n}\n\nexport type AlgDesc = {\n    id: string,\n    algs: string[],\n    setup?: string,\n    kind: string\n}\n\nexport let createAlg = (id: string, alg: string | string[], kind:string, setup?: string) : AlgDesc => ({\n    id, algs:Array.isArray(alg) ? alg : [alg], kind, setup\n})\n\nconst empty_alg = createAlg(\"empty\", \"\", \"any\")\n\nconst cmll_algs : AlgDesc[] = [\n    createAlg(\"o_adjacent_swap\", \"R U R' F' R U R' U' R' F R2 U' R'\", \"cmll\" ),\n    createAlg(\"o_diagonal_swap\", \"F R U' R' U' R U R' F' R U R' U' R' F R F'\", \"cmll\" ),\n    createAlg(\"h_columns\", \"R U R' U R U' R' U R U2 R'\", \"cmll\" ),\n    createAlg(\"h_rows\", \"F R U R' U' R U R' U' R U R' U' F'\", \"cmll\" ),\n    createAlg(\"h_column\", \"U R U2' R2' F R F' U2 R' F R F'\", \"cmll\" ),\n    createAlg(\"h_row\", \"r U' r2' D' r U' r' D r2 U r'\", \"cmll\" ),\n    createAlg(\"pi_right_bar\", \"F R U R' U' R U R' U' F'\", \"cmll\" ),\n    createAlg(\"pi_back_slash\", \"U F R' F' R U2 R U' R' U R U2' R'\", \"cmll\" ),\n    createAlg(\"pi_x_checkerboard\", \"U' R' F R U F U' R U R' U' F'\", \"cmll\" ),\n    createAlg(\"pi_forward_slash\", \"R U2 R' U' R U R' U2' R' F R F'\", \"cmll\" ),\n    createAlg(\"pi_columns\", \"U' r U' r2' D' r U r' D r2 U r'\", \"cmll\" ),\n    createAlg(\"pi_left_bar\", \"U' R' U' R' F R F' R U' R' U2 R\", \"cmll\" ),\n    createAlg(\"u_forward_slash\", \"U2 R2 D R' U2 R D' R' U2 R'\", \"cmll\" ),\n    createAlg(\"u_back_slash\", \"R2' D' R U2 R' D R U2 R\", \"cmll\" ),\n    createAlg(\"u_front_row\", \"R2' F U' F U F2 R2 U' R' F R\", \"cmll\" ),\n    createAlg(\"u_rows\", \"U' F R2 D R' U R D' R2' U' F'\", \"cmll\" ),\n    createAlg(\"u_x_checkerboard\", \"U2 r U' r' U r' D' r U' r' D r\", \"cmll\" ),\n    createAlg(\"u_back_row\", \"U' F R U R' U' F'\", \"cmll\" ),\n    createAlg(\"t_left_bar\", \"U' R U R' U' R' F R F'\", \"cmll\" ),\n    createAlg(\"t_right_bar\", \"U L' U' L U L F' L' F\", \"cmll\" ),\n    createAlg(\"t_rows\", \"F R' F R2 U' R' U' R U R' F2\", \"cmll\" ),\n    createAlg(\"t_front_row\", \"r' U r U2' R2' F R F' R\", \"cmll\" ),\n    createAlg(\"t_back_row\", \"r' D' r U r' D r U' r U r'\", \"cmll\" ),\n    createAlg(\"t_columns\", \"U2 r2' D' r U r' D r2 U' r' U' r\", \"cmll\" ),\n    createAlg(\"s_left_bar\", \"U R U R' U R U2 R'\", \"cmll\" ),\n    createAlg(\"s_x_checkerboard\", \"U L' U2 L U2' L F' L' F\", \"cmll\" ),\n    createAlg(\"s_forward_slash\", \"U F R' F' R U2 R U2' R'\", \"cmll\" ),\n    createAlg(\"s_columns\", \"U2 R' U' R U' R2' F' R U R U' R' F U2' R\", \"cmll\" ),\n    createAlg(\"s_right_bar\", \"U' R U R' U R' F R F' R U2' R'\", \"cmll\" ),\n    createAlg(\"s_back_slash\", \"U R U' L' U R' U' L\", \"cmll\" ),\n    createAlg(\"as_right_bar\", \"U R' U' R U' R' U2' R\", \"cmll\" ),\n    createAlg(\"as_columns\", \"U' R2 D R' U R D' R' U R' U' R U' R'\", \"cmll\" ),\n    createAlg(\"as_back_slash\", \"U' F' L F L' U2' L' U2 L\", \"cmll\" ),\n    createAlg(\"as_x_checkerboard\", \"U' R U2' R' U2 R' F R F'\", \"cmll\" ),\n    createAlg(\"as_forward_slash\", \"U' L' U R U' L U R'\", \"cmll\" ),\n    createAlg(\"as_left_bar\", \"U R U2' R' F R' F' R U' R U' R'\", \"cmll\" ),\n    createAlg(\"l_mirror\", \"F R U' R' U' R U R' F'\", \"cmll\" ),\n    createAlg(\"l_inverse\", \"F R' F' R U R U' R'\", \"cmll\" ),\n    createAlg(\"l_pure\", \"U2 R U2 R' U' R U R' U' R U R' U' R U' R'\", \"cmll\" ),\n    createAlg(\"l_front_commutator\", \"R U2 R D R' U2 R D' R2'\", \"cmll\" ),\n    createAlg(\"l_diag\", \"U2 R' U' R U R' F' R U R' U' R' F R2\", \"cmll\" ),\n    createAlg(\"l_back_commutator\", \"U' R' U2 R' D' R U2 R' D R2\", \"cmll\" )\n]\n\nlet trigger_algs: AlgDesc[] = [\n    createAlg(\"RUR'_1\", \"R U R'\", \"trigger\"),\n    createAlg(\"RUR'_2\", \"r U r'\", \"trigger\"),\n    createAlg(\"RU'R'_1\", \"R U' R'\", \"trigger\"),\n    createAlg(\"RU'R'_2\", \"r U' r'\", \"trigger\"),\n    createAlg(\"R'U'R_1\", \"R' U' R\", \"trigger\"),\n    createAlg(\"R'U'R_2\", \"r' U' r\", \"trigger\"),\n    createAlg(\"R'UR_1\", \"R' U R\", \"trigger\"),\n    createAlg(\"R'UR_2\", \"r' U r\", \"trigger\")\n]\n\nlet u_auf_algs: AlgDesc[] = [\n    createAlg(\"U\", \"U\", \"u_auf\"),\n    createAlg(\"U'\", \"U'\", \"u_auf\"),\n    createAlg(\"U2\", \"U2\", \"u_auf\"),\n    createAlg(\"None\", \"\", \"u_auf\"),\n]\n\nlet ori_algs: AlgDesc[] =\n    [\"WG\", \"WB\", \"WO\", \"WR\",\n    \"YG\", \"YB\", \"YO\", \"YR\",\n    \"BW\", \"BY\", \"BO\", \"BR\",\n    \"GW\", \"GY\", \"GO\", \"GR\",\n    \"OW\", \"OY\", \"OB\", \"OG\",\n    \"RW\", \"RY\", \"RB\", \"RG\"].map(s => createAlg(s, \"\", \"orientation\"))\n\nlet lookup_algset = (kind : string) => {\n    switch (kind) {\n        case \"cmll\": return cmll_algs;\n        case \"trigger\": return trigger_algs;\n        case \"orientation\": return ori_algs;\n        case \"u_auf\": return u_auf_algs;\n        default: return []\n    }\n}\n\nlet alg_generator = (selector: Selector) => {\n    let algSet = lookup_algset(selector.kind)\n    let lookup = new Set(get_active_names(selector))\n    let get_prefix = (id: string) => {\n        return id.split(\"_\", 1)[0]\n    }\n    let algs : AlgDesc[] = (() => {\n        return algSet.filter(alg => {\n            let prefix = get_prefix(alg.id);\n            return lookup.has(prefix)\n        })\n    })()\n\n    let next = () => {\n        if (algs.length === 0) {\n            return empty_alg\n        } else {\n            return rand_choice(algs)\n        }\n    }\n    return next\n}\n\nexport { alg_generator }","import { AppState, Config, FavCase } from \"../Types\";\nimport { alg_generator, AlgDesc } from \"../lib/Algs\";\nimport { Face, Typ, FBpairPos } from \"../lib/Defs\";\nimport { CubieCube, CubeUtil, Mask, FaceletCube, MoveSeq } from '../lib/CubeLib';\nimport { Evaluator, getEvaluator } from \"../lib/Evaluator\";\nimport { getActiveName, getActiveNames } from '../lib/Selector';\nimport { CachedSolver } from \"../lib/CachedSolver\";\nimport { rand_choice, arrayEqual } from '../lib/Math';\nimport { AbstractStateM, StateFactory } from \"./AbstractStateM\";\n\nexport abstract class BlockTrainerStateM extends AbstractStateM {\n    abstract solverL: number;\n    abstract solverR: number;\n    scrambleMargin: number = 1;\n    scrambleCount: number = 1;\n    algDescWithMoveCount: string = \"\";\n    expansionFactor = 2;\n    premoves: string[] = [\"\"];\n    orientations: string[] = [\"\"];\n    evaluator : Evaluator;\n\n    abstract getRandom(): [CubieCube, string[]] | [CubieCube, string[], string];\n    constructor(state: AppState) {\n        super(state)\n        let evalName = getActiveName(this.state.config.evaluator)\n        this.evaluator = getEvaluator(evalName)\n    }\n    _solve_with_solvers(cube: CubieCube, solverNames: string[]): AlgDesc[]{\n        const state = this.state;\n        const totalSolutionCap = 0 | (+(getActiveName(state.config.solutionNumSelector) || 5) * this.expansionFactor);\n        const selectedSolutionCap = +(getActiveName(state.config.solutionNumSelector) || 5);\n        let getDesc = (solverName: string) => {\n            const solver = CachedSolver.get(solverName);\n            const premoves = this.premoves || [\"\"]\n            let solutions = premoves.map(pm =>\n                solver\n                .solve(cube.apply(pm), 0, this.solverR, totalSolutionCap)\n                .map(sol => ({pre: pm, sol: sol, score: this.evaluator.evaluate(sol)}) )).flat()\n            solutions.sort((a, b) => a.score - b.score);\n            const toString = (sol: any) =>\n                (sol.pre === \"\" ? \"\" : \"(\" + sol.pre + \") \") + sol.sol.toString(this.algDescWithMoveCount);\n            const algs = solutions.slice(0, selectedSolutionCap).map(toString);\n            let algdesc: AlgDesc = {\n                id: `${solverName}`,\n                algs,\n                kind: `${solverName}`\n            }\n            return algdesc\n        }\n        return solverNames.map(getDesc)\n    }\n\n    _solve(cube: CubieCube, solverNames: string[], options?: {\n        updateSolutionOnly?: boolean, scrambleSolver?: string,\n        scramble?: string,\n    }) {\n        const state = this.state;\n        options = options || {}\n        let algDescs = this._solve_with_solvers(cube, solverNames);\n        const scrambleMargin = 1;\n        let setup : string\n        if (options.scramble) {\n            setup = options.scramble\n        } else if (options.updateSolutionOnly) {\n            setup = this.state.case.desc[0]!.setup!\n        } else {\n            const scramble = options.scrambleSolver === \"min2phase\"?\n            CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0].inv() :\n            (()=>{\n            const solutionLength = new MoveSeq(algDescs[0].algs[0]).remove_setup().moves.length;\n            return rand_choice(\n                CachedSolver.get(options.scrambleSolver || solverNames[0])\n                .solve(cube, Math.max(this.solverL, solutionLength + scrambleMargin),\n                    this.solverR, this.scrambleCount || 1)).inv()\n            })()\n            setup = scramble.toString()\n        }\n        if (algDescs.length === 0) {\n            algDescs = [{\n                id: `min2phase`,\n                algs: [],\n                setup,\n                kind: `min2phase`\n            }];\n        } else {\n            // populate setup into setup\n            algDescs.forEach(algDesc => algDesc.setup = setup);\n        }\n\n        const ori = (options.updateSolutionOnly) ? this.state.cube.ori : alg_generator(state.config.orientationSelector)().id;\n        const name = options.updateSolutionOnly ? this.state.name : \"hiding\";\n        // console.log(\"algdesc\", algdesc)\n        return {\n            ...state,\n            name: name,\n            cube: {\n                ...state.cube,\n                state: cube,\n                ori\n            },\n            case: {\n                state: new CubieCube().apply(setup),\n                desc: algDescs\n            }\n        };\n    }\n    _updateCase(): AppState {\n        let [cube, solverName, scrambleSolver] = this.getRandom();\n        let inputScramble : string | undefined = undefined\n        if (this.state.scrambleInput.length > 0) {\n            inputScramble = this.state.scrambleInput[0]\n            cube = new CubieCube().apply(inputScramble)\n        }\n        let state = this._solve(cube, solverName, {\n            updateSolutionOnly: false,\n            scrambleSolver,\n            scramble: inputScramble\n        });\n        if (inputScramble) {\n            state = {...state, \n                scrambleInput: state.scrambleInput.slice(1)\n            }\n        }\n        return state\n    }\n    _updateCap(): AppState {\n        const state = this.state;\n        if (state.case.desc.length === 0) {\n            return state;\n        }\n        const [cube, solverNames] = [state.cube.state, state.case.desc!.map(x => x.kind)];\n        return this._solve(cube, solverNames, {\n            updateSolutionOnly:true\n        });\n    }\n    onReplay(case_: FavCase): AppState {\n        const cube = new CubieCube().apply(case_.setup)\n        const state1 = this._solve(cube, case_.solver, {scramble: case_.setup});\n        return {\n            ...state1,\n            mode: case_.mode\n        };\n    }\n    onControl(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            if (state.name === \"revealed\") {\n                return this._updateCase();\n            }\n            else {\n                return {\n                    ...state,\n                    name: \"revealed\"\n                };\n            }\n        }\n        else if (s === \"#enter\") {\n            return {\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                }\n            };\n        }\n        else {\n            return state;\n        }\n    }\n    onMove(movestr: string): AppState {\n        let state = this.state;\n        let move = new MoveSeq(movestr);\n        let cube = state.cube.state.apply(move);\n        return {\n            ...state,\n            cube: {\n                ...state.cube,\n                state: cube\n            }\n        };\n    }\n    onConfig(conf: Config): AppState {\n        // see if solution cap changed\n        let changed = !arrayEqual(this.state.config.solutionNumSelector.flags, conf.solutionNumSelector.flags);\n        if (changed) {\n            return (StateFactory.create({ ...this.state, config: conf }) as BlockTrainerStateM)._updateCap();\n        }\n        else {\n            return this.state;\n        }\n    }\n}\n// const m_premove = [[], Move.all[\"M\"], Move.all[\"M'\"], Move.all[\"M2\"]];\nexport class FbdrStateM extends BlockTrainerStateM {\n    solverL = 8;\n    solverR = 10;\n    _get_pair_solved_front() {\n        let [cp, co, ep, eo] = rand_choice(FBpairPos);\n        //let mask = Mask.copy(Mask.fs_front_mask)\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 8; i++) {\n            if (cube.cp[i] === 4) {\n                cube.cp[i] = cube.cp[cp];\n                cube.co[i] = cube.co[cp];\n                cube.cp[cp] = 4;\n                cube.co[cp] = co;\n            }\n        }\n        for (let i = 0; i < 12; i++) {\n            if (cube.ep[i] === 8) {\n                cube.ep[i] = cube.ep[ep];\n                cube.eo[i] = cube.eo[ep];\n                cube.ep[ep] = 8;\n                cube.eo[ep] = eo;\n            }\n        }\n        return cube;\n    }\n    _edge_piece_in_pattern(cube: CubieCube, idx: number, pattern: [number, number][]) {\n        let dr_ep = cube.ep.indexOf(idx);\n        let dr_eo = cube.eo[dr_ep];\n        let good = (pattern.find( ([eo, ep]) => (eo === dr_eo) && (ep === dr_ep)))\n        return good\n    }\n    _get_random_fs_back() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 1000; i++) {\n            if (this._edge_piece_in_pattern(cube, 7, this.allowed_dr) &&\n                this._edge_piece_in_pattern(cube, 8, this.allowed_pedge)) break;\n            cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        }\n        return cube;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    _get_random_fs_front() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        for (let i = 0; i < 1000; i++) {\n            if (this._edge_piece_in_pattern(cube, 7, this.allowed_dr) &&\n                this._edge_piece_in_pattern(cube, 9, this.allowed_pedge)) break;\n            cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        }\n        return cube;;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    edgePositionMap : [number, number][] = [\n        [0, 0], [1, 0],\n        [0, 1], [1, 1],\n        [0, 2], [1, 2],\n        [0, 3], [1, 3],\n        [0, 4], [1, 4],\n        [0, 6], [1, 6],\n        [0, 7], [1, 7],\n        [0, 10], [1, 10],\n        [0, 11], [1, 11]\n    ]\n    allowed_pedge : [number, number][] = []\n    allowed_dr : [number, number][] = []\n    getRandom(): [CubieCube, string[], string] {\n        const fbOnly = getActiveName(this.state.config.fbOnlySelector) === \"FB Last Pair Only\";\n        const pairSolved = getActiveName(this.state.config.fbPairSolvedSelector) !== \"Random\";\n        const scrambleType = getActiveName(this.state.config.fbdrScrambleSelector) || \"Short\";\n        const useMin2PhaseScramble = !scrambleType.startsWith(\"Short\");\n        const solverName = fbOnly ? \"fb\" : \"fbdr\";\n        const scrambleSolver = useMin2PhaseScramble ? \"min2phase\" : solverName\n        let active = getActiveNames(this.state.config.fbdrSelector)[0];\n        //console.log(\"active\", active)\n        this.allowed_pedge = this.state.config.fbdrPosSelector1.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => this.edgePositionMap[i] )\n        this.allowed_dr = this.state.config.fbdrPosSelector3.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => this.edgePositionMap[i] )\n\n        // decide which random scramble generator to use. but prioritize use input if there's any\n        \n        if (active === \"FS at back\") {\n            if (pairSolved)\n                return [this._get_pair_solved_front(), [solverName], scrambleSolver];\n            else\n                return [this._get_random_fs_back(), [solverName], scrambleSolver];\n        }\n        else if (active === \"FS at front\") {\n            return [this._get_random_fs_front(), [solverName], scrambleSolver];\n        }\n        else\n            return [ rand_choice([ () => this._get_random_fs_back(), () => this._get_random_fs_front()])(),\n                [solverName], scrambleSolver];\n    }\n}\nexport class SsStateM extends BlockTrainerStateM {\n    solverL = 9;\n    solverR = 10;\n    _get_random_fb(allowed_dr_eo_ep: [number, number][]) {\n        let active = getActiveName(this.state.config.ssPairOnlySelector);\n        let mask = (active === \"SS\") ? Mask.fb_mask : Mask.fbdr_mask;\n        let cube : CubieCube;\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(mask);\n            if (active !== \"SS\") break;\n            let ep = cube.ep.indexOf(7);\n            let eo = cube.eo[ep];\n            if (allowed_dr_eo_ep.find( ([eo_, ep_]) => (eo === eo_) && (ep === ep_))) {\n                break\n            }\n        }\n        return cube\n    }\n    getRandom(): [CubieCube, string[] ] {\n        let active = getActiveNames(this.state.config.ssSelector)[0];\n        const drPositionMap : [number, number][] = [\n            [0, 0], [1, 0],\n            [0, 1], [1, 1],\n            [0, 2], [1, 2],\n            [0, 3], [1, 3],\n            [0, 4], [1, 4],\n            [0, 6], [1, 6],\n            [0, 7], [1, 7],\n            [0, 10], [1, 10],\n            [0, 11], [1, 11]\n        ]\n        let allowed_dr_eo_ep_patterns = this.state.config.ssPosSelector.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => drPositionMap[i] )\n        let cube = this._get_random_fb(allowed_dr_eo_ep_patterns);\n        let solver;\n        if (active === \"SS at front\") {\n            solver = \"ss-front\";\n        }\n        else if (active === \"SS at back\") {\n            solver = \"ss-back\";\n        }\n        else {\n            solver = rand_choice([\"ss-back\", \"ss-front\"]);\n        }\n        return [cube, [solver] ];\n    }\n}\nexport class FbStateM extends BlockTrainerStateM {\n    solverL: number = 9;\n    solverR: number = 11;\n    //premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    expansionFactor = 1;\n\n    _find_center_connected_edges(cube: CubieCube, is_l_only: boolean) {\n        let centers = is_l_only ? [ Face.L ] : [ Face.F, Face.B, Face.L, Face.R]\n        let edges = CubeUtil.stickers.filter(c => c[2] === Typ.E && centers.includes(c[3])\n            && FaceletCube.color_of_sticker(cube, [c[0], c[1], c[2]]) === c[3]);\n        return edges;\n    }\n    _get_random(): [CubieCube, string] {\n        let active = getActiveName(this.state.config.fbPieceSolvedSelector);\n        let mask;\n        if (active === \"Random\")\n            mask = Mask.empty_mask;\n        else if (active === \"DL Solved\")\n            mask = Mask.dl_solved_mask;\n        else if (active === \"BL Solved\")\n            mask = Mask.bl_solved_mask;\n        else if (active === \"Zhouheng Variant\")\n            mask = Mask.zhouheng_mask;\n        else\n            mask = Mask.empty_mask;\n        let cube = CubeUtil.get_random_with_mask(mask);\n\n        let solver = \"fb\";\n        if (active === \"Zhouheng Variant\") {\n            // B F'\n            cube = cube.apply(\"B F'\");\n            solver = \"fbdr\";\n        }\n        const hard_str = \"Hard\";\n        const g_hard_str = \"Hard over x2y(Scramble only)\"\n        if (active === g_hard_str) {\n            solver = \"min2phase\";\n        }\n        if (active !== hard_str && active !== g_hard_str) {\n            return [cube, solver];\n        }\n        let n = 0;\n        let is_l_only = active === hard_str\n        while (true) {\n            let pairs = CubeUtil.find_pairs(cube);\n            let cc_edges = this._find_center_connected_edges(cube, is_l_only);\n            n++;\n            if (pairs.length === 0 && cc_edges.length === 0) {\n                console.log(\"Successful after \" + n + \" tries \");\n                return [cube, solver];\n            }\n            cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        }\n    }\n    getRandom() : [CubieCube, string[], string]{\n        let [cube, solver] = this._get_random();\n        return [cube, solver === \"min2phase\" ? [] : [solver], solver ];\n    }\n}\n\n\nexport class FsStateM extends BlockTrainerStateM {\n    solverL = 7;\n    solverR = 11;\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    expansionFactor = 1;\n\n    getRandom(): [CubieCube, string[], string] {\n        let cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        let name = getActiveName(this.state.config.fsSelector)\n        if (name === \"Front FS\") {\n            return [cube, [\"fs-front\"], \"fb\"]\n        } else if (name === \"Back FS\") {\n            return [cube, [\"fs-back\"], \"fb\"]\n        } else {\n            return [cube, [\"fs-front\", \"fs-back\"], \"fb\" ];\n        }\n    }\n}","\nimport { BlockTrainerStateM } from \"./BlockTrainerStateM\";\nimport { Mask, CubeUtil, CubieCube, Move } from \"../lib/CubeLib\";\nimport { getActiveName, getActiveNames } from \"../lib/Selector\";\nimport { rand_choice } from \"../lib/Math\";\nimport { CachedSolver } from \"../lib/CachedSolver\";\n\nexport class LSEStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n    getRandom(): [CubieCube, string[]] {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let bars = getActiveName(this.state.config.lseBarSelector)\n\n        let cube = CubeUtil.get_random_with_mask(Mask.lse_4c_mask);\n\n        let move = new Move().from_cube(cube, \"\")\n\n        if (bars === \"UFUB\") {\n            cube = new CubieCube().apply(rand_choice([\"U\", \"U\"])).apply(move)\n        } else {\n            cube = new CubieCube().apply(move)\n        }\n\n        let is_mc = getActiveName(this.state.config.lseMCSelector) === \"Misaligned\";\n        let lse_premove = is_mc ? [Move.all[\"M\"], Move.all[\"M'\"]] : [ [], Move.all[\"M2\"] ]\n        cube = cube.apply(rand_choice(lse_premove))\n\n        let stage = getActiveName(this.state.config.lseStageSelector)\n        if (stage === \"M2 to 4c\")  {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return [cube, [\"lse\"]];\n        } else if (stage.startsWith(\"4b for MC\")) {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            cube = cube.apply(rand_choice([\"M\", \"M'\"]))\n            cube = cube.apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return [cube, [\"lse\"]];\n        } else {\n            return [cube, [\"lse\"]];\n        }\n    }\n}\n\nconst lseEODef = [\n    {kind: \"solved\", eo: [0,0,0,0,0,0]},\n    {kind: \"arrow\", eo: [1,1,0,1,1,0]},\n    {kind: \"arrow\", eo: [0,1,1,1,0,1]},\n    {kind: \"4/0\", eo: [1,1,1,1,0,0]},\n    {kind: \"2o/0\", eo: [1,0,1,0,0,0]},\n    {kind: \"1/1\", eo: [1,0,0,0,0,1]},\n    {kind: \"1/1\", eo: [0,0,1,0,1,0]},\n    {kind: \"6flip\", eo: [1,1,1,1,1,1]},\n    {kind: \"2o/2\", eo: [0,1,0,1,1,1]},\n    {kind: \"0/2\", eo: [0,0,0,0,1,1]},\n    {kind: \"2a/2\", eo: [0,1,1,0,1,1]},\n]\nconst lseEODefLookup = function() {\n    let map = Object.assign({});\n    lseEODef.forEach( (def) => {\n        map[def.eo.toString()] = def.kind\n    })\n    return map\n}();\n\nexport class EOLRStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n\n    _getEOType(cube: CubieCube) {\n        for (let i = 0; i < 4; i++) {\n            let eo_arr = cube.eo.slice(0, 5)\n            eo_arr.push(cube.eo[6])\n            let eo = (lseEODefLookup[eo_arr.toString()])\n            if (eo) {\n\n                console.log(eo, eo_arr)\n                return eo;\n            }\n            cube = cube.apply(\"U\")\n        }\n        return \"Error\"\n    }\n\n    getRandom(): [CubieCube, string[], string] {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let targetEO = rand_choice(getActiveNames(this.state.config.lseEOSelector))\n\n        let cube: CubieCube\n        let count = 0;\n        let eolrMCMode = getActiveName(this.state.config.lseEOLRMCSelector)\n        let compare = eolrMCMode === \"Filter by Non-MC shorter\" || eolrMCMode === \"Filter by MC shorter\"\n        let useBarbie = getActiveName(this.state.config.lseBarbieSelector) === \"EOLRb\"\n        let useFullScramble = getActiveName(this.state.config.lseEOLRScrambleSelector) === \"Random State\"\n\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(Mask.lse_mask);\n            cube = cube.apply(rand_choice([\"id\", \"M2\"]))\n            console.log(\"targetEO\", targetEO)\n\n            if (count++ > 1000) {\n                console.log(\"something wrong\")\n                break\n            }\n\n            if (this._getEOType(cube) !== targetEO)\n                continue\n            if (compare) {\n                let acSolver = useBarbie ? \"eolrac-b\" : \"eolrac\"\n                let mcSolver = useBarbie ? \"eolrmc-b\" : \"eolrmc\"\n                let acLength = CachedSolver.get(acSolver).solve(cube, 0, 20, 1)[0].moves.length\n                let mcLength = CachedSolver.get(mcSolver).solve(cube, 0, 20, 1)[0].moves.length\n                if ( eolrMCMode === \"Filter by Non-MC shorter\" && acLength > mcLength ) continue\n                if ( eolrMCMode === \"Filter by MC shorter\" && mcLength > acLength ) continue\n            }\n            break\n        }\n\n        const ss = useFullScramble? \"lse\" : \"lse-ab4c\";\n        switch (eolrMCMode) {\n            case \"Non MC only\": return [cube, useBarbie ? [\"eolrac-b\"] : [\"eolrac\"], ss];\n            case \"MC only\": return [cube, useBarbie ? [\"eolrmc-b\"] : [\"eolrmc\"], ss];\n            case \"Combined\": return [cube, useBarbie ? [\"eolr-b\"] : [\"eolr\"], ss];\n            case \"Filter by Non-MC shorter\":\n            case \"Filter by MC shorter\": return [cube, useBarbie ? [\"eolr-b\"] : [\"eolr\"], ss];\n            default: return [cube, [\"eolr\"], ss];\n        }\n    }\n}\n","import { AppState, StateT, Config } from \"../Types\";\nimport { alg_generator, AlgDesc, createAlg } from \"../lib/Algs\";\nimport { CubieCube, Move, CubeUtil, MoveSeq } from '../lib/CubeLib';\nimport { AbstractStateM } from \"./AbstractStateM\";\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\nimport { arrayEqual } from \"../lib/Math\";\n\nexport abstract class CmllStateM extends AbstractStateM {\n    _get2PhaseSolution(cube: CubieCube): AlgDesc {\n        // Aha! f = g(b) but you modified b later, and f won't update!\n\n        let m2_away = false\n        if (cube.tp[0] !== 0) {\n            m2_away = true\n            cube = cube.apply(\"M2\")\n        }\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp))\n\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        min2phase_init();\n        let solution = min2phase_solve(transformed_cube);\n        if (m2_away) {\n            solution += \" M2\"\n        }\n        const algDesc: AlgDesc = createAlg(\"scramble\", solution, \"scramble\")\n        console.log(solution);\n        return algDesc;\n    }\n    _generateCase(): AppState {\n        let state = this.state;\n        let { config } = state;\n        let { cmllSelector, triggerSelector, cmllAufSelector, orientationSelector } = config;\n        let generator = alg_generator(cmllSelector);\n        let trig_generator = alg_generator(triggerSelector);\n        let u_auf_generator = alg_generator(cmllAufSelector);\n        let ori_generator = alg_generator(orientationSelector);\n        let trigger_alg: AlgDesc = trig_generator();\n        let cmll_alg: AlgDesc = generator();\n        let u_auf_alg: AlgDesc = u_auf_generator();\n        let alg_str = trigger_alg.algs + \" \" + u_auf_alg.algs + \" \" + cmll_alg.algs;\n        let moves: Move[] = new MoveSeq(alg_str).inv().moves;\n\n        let lse_cube: CubieCube\n        while (true) {\n            lse_cube = CubeUtil.get_random_lse().apply(moves)\n            if (lse_cube.is_solveable()) {\n                break;\n            }\n        }\n        let solution = this._get2PhaseSolution(lse_cube);\n        // ori based on ...?\n        let ori: string = ori_generator().id;\n        //console.log(\"current ori selector's ori \", ori)\n        return ({\n            ...state,\n            name: \"solving\",\n            cube: {\n                state: lse_cube,\n                ori,\n                history: [],\n            },\n            case: {\n                state: lse_cube,\n                desc: [trigger_alg, u_auf_alg, cmll_alg, solution]\n            },\n        });\n    }\n    onControl(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            // SCRAMBLE\n            // enter cleared solving state based on selection\n            return this._generateCase();\n        }\n        else if (s === \"#enter\") {\n            // REDO\n            return ({\n                ...state,\n                name: \"solving\",\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                    history: []\n                },\n                case: {\n                    ...state.case,\n                }\n            });\n        }\n        else {\n            throw new Error(\"Unrecognized control code\");\n        }\n    }\n    onConfig(conf: Config): AppState {\n        return this.state;\n    }\n}\nexport class SolvingStateM extends CmllStateM {\n    onMove(move: string): AppState {\n        let state = this.state;\n        let moves = new MoveSeq(move).moves;\n        if (moves.length > 0) {\n            let move = moves[0];\n            let cube = state.cube.state.apply(move);\n            let cmll_solved = CubeUtil.is_cmll_solved(cube);\n            let newState: StateT = cmll_solved ? \"solved\" : \"solving\";\n            return ({\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.cube.state.apply(move),\n                    history: [...state.cube.history, move],\n                },\n                name: newState\n            });\n        }\n        else {\n            // Nothing to apply\n            return state;\n        }\n    }\n}\nexport class SolvedStateM extends CmllStateM {\n    onMove(move: string): AppState {\n        return this.state;\n    }\n}\n","import { StateFactory} from './AbstractStateM';\nimport { AppState, Mode } from '../Types';\nimport { FbdrStateM, SsStateM, FbStateM, FsStateM} from './BlockTrainerStateM';\nimport { LSEStateM, EOLRStateM } from './LSETrainerStateM';\nimport { SolvingStateM, SolvedStateM } from './CmllStateM';\n\nStateFactory.create = function(state: AppState) {\n        let mode: Mode = state.mode;\n        switch (mode) {\n            case \"fbdr\":\n                return new FbdrStateM(state);\n            case \"ss\":\n                return new SsStateM(state);\n            case \"fs\":\n                return new FsStateM(state);\n            case \"fb\":\n                return new FbStateM(state);\n            case \"cmll\": {\n                switch (state.name) {\n                    case \"solving\": return new SolvingStateM(state);\n                    case \"solved\": return new SolvedStateM(state);\n                    default: throw new Error(\"impossible\");\n                }\n            }\n            case \"4c\":\n                return new LSEStateM(state);\n            case \"eopair\":\n                return new EOLRStateM(state);\n            case \"experimental\":\n                return new FbStateM(state);\n            case \"analyzer\":\n                return new FbStateM(state)\n        }\n        ;\n    }\n\nexport { StateFactory };","import { Action } from \"./Types\";\n\nconst defaultKeyMapping : { [key: string]: string } = {\n    \"I\": \"R\",\n    \"K\": \"R'\",\n    \"W\": \"B\",\n    \"O\": \"B'\",\n    \"S\": \"D\",\n    \"L\": \"D'\",\n    \"D\": \"L\",\n    \"E\": \"L'\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"H\": \"F\",\n    \"G\": \"F'\",\n    \";\": \"y\",\n    \"A\": \"y'\",\n    \"U\": \"r\",\n    \"R\": \"l'\",\n    \"M\": \"r'\",\n    \"V\": \"l\",\n    \"T\": \"x\",\n    \"Y\": \"x\",\n    \"N\": \"x'\",\n    \"B\": \"x'\",\n    \".\": \"M'\",\n    \"X\": \"M'\",\n    \"5\": \"M\",\n    \"6\": \"M\",\n    \"P\": \"z\",\n    \"Q\": \"z'\",\n    \"Z\": \"d\",\n    \"C\": \"u'\",\n    \",\": \"u\",\n    \"/\": \"d'\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n  }\n\n\nconst lseKeyMapping : { [key: string]: string } = {\n    \"I\": \"M'\",\n    \"E\": \"M'\",\n    \"K\": \"M\",\n    \"D\": \"M\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"S\": \"E'\",\n    \"L\": \"E\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n  }\n\n\nexport abstract class KeyMapping {\n    abstract handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) : void;\n}\n\nexport class DefaultKeyMapping extends KeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (defaultKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: defaultKeyMapping[key]\n            });\n        }\n    }\n}\n\nexport class LSEKeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (lseKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: lseKeyMapping[key]\n            });\n        }\n    }\n}","import { AppState, StateT, Mode } from \"../Types\";\nimport { CubieCube, ColorScheme } from '../lib/CubeLib';\nimport { getConfig, getFavList } from '../lib/LocalStorage';\nimport { getActiveName } from '../lib/Selector';\nimport { DefaultKeyMapping, LSEKeyMapping } from \"../KeyMapping\";\n\n\nexport const getInitialState = (mode?: Mode): AppState => {\n    mode = mode || \"fbdr\";\n    let initialStateName: StateT = function () {\n        switch (mode) {\n            case \"cmll\": return \"solved\";\n            case \"fbdr\":\n            case \"ss\":\n            case \"fb\":\n            case \"4c\":\n            case \"eopair\":\n            case \"fs\":\n                return \"revealed\";\n            case \"experimental\":\n                return \"revealed\";\n            case \"analyzer\":\n                return \"revealed\"\n        }\n    }();\n    let ori = getActiveName(getConfig().orientationSelector) || \"YR\";\n    return {\n        name: initialStateName,\n        mode,\n        scrambleInput: [],\n        cube: {\n            state: new CubieCube(),\n            ori,\n            history: [],\n        },\n        case: {\n            state: new CubieCube(),\n            desc: []\n        },\n        config: getConfig(),\n        favList: getFavList(),\n        keyMapping: (mode === \"4c\" || mode === \"eopair\") ? new LSEKeyMapping() : new DefaultKeyMapping(),\n        colorScheme: new ColorScheme()\n    };\n};\n","\nimport { AppState, Action, Config, FavListAction } from \"../Types\"\nimport { setConfig, setFavList} from '../lib/LocalStorage';\nimport { StateFactory } from \"./StateFactory\";\nimport { arrayEqual } from \"../lib/Math\";\nimport { getInitialState } from \"./InitialState\";\n\nexport { getInitialState }\nfunction reduceByFavlist(state: AppState, action: FavListAction) {\n    let favList = state.favList;\n\n    switch (action.action) {\n        case \"add\":\n            favList = [...action.content, ...favList]\n            setFavList(favList)\n            break;\n        case \"remove\": {\n        // only remove one at a time for now\n            const rem = action.content[0]\n            favList = favList.filter((value) => {\n                return !(value.mode === rem.mode && value.setup === rem.setup && arrayEqual(value.solver, rem.solver))\n            })\n            setFavList(favList)\n            break;\n        };\n        case \"replay\": {\n            return StateFactory.create(state).onReplay(action.content[0])\n        }\n    }\n    return {\n        ...state,\n        favList\n    }\n}\n\nexport function reducer(state: AppState, action: Action): AppState {\n    // todo: cache values based on this\n    // console.log(\"prev state\", state)\n    switch (action.type) {\n        case \"key\": {\n            let newState = reduceByKey(state, action.content)\n            return newState\n        };\n        case \"config\": {\n            // LESSON: Object.assign is dangerous\n            let newConfig = {...state.config, ...action.content}\n            setConfig(newConfig)\n            let newState = reduceByConfig(state, newConfig)\n            return {\n                ...newState,\n                config: newConfig\n            }\n        };\n        case \"mode\": {\n            let mode = action.content\n            window.location.hash = mode\n            state = getInitialState(mode)\n            return state\n        };\n        case \"scrambleInput\":\n            return {\n                ...state,\n                scrambleInput: action.content\n            }\n        case \"favList\":\n            return reduceByFavlist(state, action)\n        case \"colorScheme\":\n            return {\n                ...state,\n                colorScheme: state.colorScheme.set(action.content)\n            }\n        case \"custom\":\n            return action.content(state)\n        default:\n            return state\n        }\n}\n\n\nfunction reduceByKey(state: AppState, code: string): AppState {\n    if (code === \"\") return state;\n\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    if (code[0] === \"#\") {\n        return stateM.onControl(code)\n    } else {\n        return stateM.onMove(code)\n    }\n}\nfunction reduceByConfig(state: AppState, conf: Config): AppState {\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    return stateM.onConfig(conf)\n}","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  name: \"bright\",\n  palette: {\n    primary: {\n      main: '#556cd6',// '#e0e8ff'//b0c4ee', //\n    },\n    secondary: {\n      main: '#d32f2f',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#eeeeef',\n      paper: '#fff'\n    },\n    text: {\n      primary: '#000',\n      secondary: '#888',\n      hint: '#556cd6'\n    }\n  },\n  /*\n  typography: {\n    \"fontFamily\": `\"Public Sans\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n    \"fontSize\": 14,\n    \"fontWeightLight\": 400,\n    \"fontWeightRegular\": 500,\n    \"fontWeightMedium\": 600\n  }\n  */\n\n});\nconst themeDark = createMuiTheme({\n  name: \"dark\",\n  palette: {\n    primary: {\n      main: '#9FA4C2', // '#757575',\n    },\n    secondary: {\n      main: '#ffffff', //f55057',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#121212',\n      paper: '#252525' //#424242'\n    },\n    text: {\n      primary: '#fff',\n      secondary: '#ddd',\n      hint: '#eee'\n    }\n  },\n  overrides: {\n    // Style sheet name ⚛️\n    MuiDivider: {\n      // Name of the rule\n      // Some CSS\n      root: {\n        backgroundColor: 'rgba(255, 255 ,255, 0.3)',\n      }\n    },\n  }\n\n});\n\nexport { theme, themeDark };","import React from 'react'\nimport AppView from \"../components/AppView\"\nimport { reducer } from '../reducers/Reducer'\nimport { getInitialState } from \"../reducers/InitialState\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme, themeDark } from '../theme';\nimport { getActiveName } from '../lib/Selector';\nimport \"typeface-roboto\";\nimport \"fontsource-public-sans\";\n\nwindow.addEventListener('keypress', function(e) {\n  if(e.keyCode === 32 && e.target === document.body) {\n    e.preventDefault();\n  }\n});\n\nfunction App(props: {}) {\n  const [state, dispatch] = React.useReducer( reducer, getInitialState() )\n\n\n\n  const appTheme = getActiveName(state.config.theme) === \"bright\" ? theme : themeDark\n  return (\n    <ThemeProvider theme={appTheme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <AppView state={state} dispatch={dispatch} />\n    </ThemeProvider>\n  )\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\nfunction createArray(length) {\n\tconst arr = Array(length);\n\tfor (var i=0; i<length; i++) {\n\t\tarr[i] = 0;\n\t}\n\treturn arr;\n}\n\nfunction createArrays(length1, length2) {\n\tconst arr = Array(length1);\n\tfor (var i=0; i<length1; i++) {\n\t\tarr[i] = Array(length2);\n\t\tfor (var j=0; j<length2; j++) {\n\t\t\tarr[i][j] = 0;\n\t\t}\n\t}\n\treturn arr;\n}\n\nfunction bitOdd(i) {\n\ti ^= i >>> 1;\n\ti ^= i >>> 2;\n\ti ^= i >>> 4;\n\ti ^= i >>> 8;\n\treturn i & 1;\n}\n\nfunction bitCount(i) {\n\ti = i - ((i >>> 1) & 0x55555555);\n\ti = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n\treturn (i + (i >>> 8) + (i >>> 4)) & 0x0f;\n}\n\nfunction get4Parity(idx) {\n\tvar p = 0;\n\tfor (var i=2; i>=0; i--) {\n\t\tp += idx % (4-i);\n\t\tidx = ~~(idx / (4-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get8Parity(idx) {\n\tvar p = 0;\n\tfor (var i=6; i>=0; i--) {\n\t\tp += idx % (8-i);\n\t\tidx = ~~(idx / (8-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get12Parity(idx) {\n\tvar p = 0;\n\tfor (var i=10; i>=0; i--) {\n\t\tp += idx % (12-i);\n\t\tidx = ~~(idx / (12-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\n\nfunction binarySearch(arr, key) {\n\tvar length = arr.length;\n\tif (key <= arr[length-1]) {\n\t\tvar l = 0;\n\t\tvar r = length-1;\n\t\twhile (l <= r) {\n\t\t\tvar mid = (l+r)>>>1;\n\t\t\tvar val = arr[mid];\n\t\t\tif (key > val) {\n\t\t\t\tl = mid + 1;\n\t\t\t} else if (key < val) {\n\t\t\t\tr = mid - 1;\n\t\t\t} else {\n\t\t\t\treturn (mid);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0xffff;\n}\n\nvar fact = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600];\nvar perm3 = [[11, 10, 9], [10, 11, 9], [11, 9, 10], [9, 11, 10], [10, 9, 11], [9, 10, 11]];\nvar ud2std = [0, 1, 2, 4, 7, 9, 10, 11, 13, 16];\nvar std2ud = createArray(18);\nvar Cnk = createArrays(12, 13);\nvar move2str = [\"U \", \"U2\", \"U'\", \"R \", \"R2\", \"R'\", \"F \", \"F2\", \"F'\", \"D \", \"D2\", \"D'\", \"L \", \"L2\", \"L'\", \"B \", \"B2\", \"B'\"];\nvar urfMove = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17], \n\t\t\t\t\t\t\t\t\t\t\t[6, 7, 8, 0, 1, 2, 3, 4, 5,15,16,17, 9,10,11,12,13,14],\n\t\t\t\t\t\t\t\t\t\t\t[3, 4, 5, 6, 7, 8, 0, 1, 2,12,13,14,15,16,17, 9,10,11],\n\t\t\t\t\t\t\t\t\t\t\t[2, 1, 0, 5, 4, 3, 8, 7, 6,11,10, 9,14,13,12,17,16,15], \n\t\t\t\t\t\t\t\t\t\t\t[8, 7, 6, 2, 1, 0, 5, 4, 3,17,16,15,11,10, 9,14,13,12],\n\t\t\t\t\t\t\t\t\t\t\t[5, 4, 3, 8, 7, 6, 2, 1, 0,14,13,12,17,16,15,11,10, 9]];\nfor (var i=0; i<12; i++) {\n\tCnk[i][0] = 1;\n\tCnk[i][i] = 1;\n\tCnk[i][i+1] = 0;\n\tfor (var j=1; j<i; j++) {\n\t\tCnk[i][j] = (Cnk[i-1][j-1] + Cnk[i-1][j]);\n\t}\n}\nfor (var i=0; i<10; i++) {\n\tstd2ud[ud2std[i]] = i;\n}\n\nvar ckmv = Array(19);//new boolean[19][18];\nvar ckmv2 = Array(11);//new boolean[11][10];\nckmv[18] = Array(18);\nckmv2[10] = Array(10);\nfor (var i=0; i<18; i++) {\n\tckmv[i] = Array(18);\n\tfor (var j=0; j<18; j++) {\n\t\tckmv[i][j] = (~~(i/3) == ~~(j/3)) || ((~~(i/3)%3 == ~~(j/3)%3) && (i>=j));\n\t}\n\tckmv[18][i] = false;\n}\nfor (var i=0; i<10; i++) {\n\tckmv2[i] = Array(10);\n\tfor (var j=0; j<10; j++) {\n\t\tckmv2[i][j] = ckmv[ud2std[i]][ud2std[j]];\n\t}\n\tckmv2[10][i] = false;\n}\n\n\n//********************************************************************************//\n\nfunction CubieCube() {\n\tthis.cp = [0, 1, 2, 3, 4, 5, 6, 7];\n\tthis.co = [0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.ep = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\tthis.eo = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.getFlip = function getFlip() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tidx |= this.eo[i] << i;\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getFlipSym = function getFlipSym() {\n\t\tif (FlipR2S != 0) {\n\t\t\treturn FlipR2S[this.getFlip()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(FlipS2R, temps.getFlip());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tthis.setFlip = function setFlip(idx) {\n\t\tthis.eo[11] = bitOdd(idx);\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tthis.eo[i] = idx & 1;\n\t\t\tidx >>>= 1;\n\t\t}\n\t}\n\t\n\tthis.getTwist = function getTwist() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<7; i++) {\n\t\t\tidx *= 3;\n\t\t\tidx += this.co[i];\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getTwistSym = function getTwistSym() {\n\t\tif (TwistR2S != null) {\n\t\t\treturn TwistR2S[this.getTwist()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tlet idx = binarySearch(TwistS2R, temps.getTwist());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\n\tthis.setTwist = function setTwist(idx) {\n\t\tvar twst = 0;\n\t\tfor (var i=6; i>=0; i--) {\n\t\t\ttwst += this.co[i] = idx % 3;\n\t\t\tidx = ~~(idx/3);\n\t\t}\n\t\tthis.co[7] = (15 - twst) % 3;\n\t}\n\t\n\tthis.getUDSlice = function getUDSlice() {\n\t\tvar idx = 0;\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (this.ep[i] >= 8) {\n\t\t\t\tidx += Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t}\n\n\tthis.setUDSlice = function setUDSlice(idx) {\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (idx >= Cnk[11-i][r]) {\n\t\t\t\tidx -= Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t\tthis.ep[i] = (11-r);\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (i+r-4);\n\t\t\t}\n\t\t}\n\t}\n\tthis.getMPerm = function getMPerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=8; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\n\t}\t\n\tthis.setMPerm = function setMPerm(idx) {\n\t\tthis.ep[11] = 8;\n\t\tfor (var i=10; i>=8; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i) + 8);\n\t\t\tidx = ~~(idx / (12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getMid3 = function getMid3() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] >= 9) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\n\t}\n\t\n\tthis.setMid3 = function setMid3(idxA) {\n\t\tvar edge = perm3[idxA % 6];\n\t\tidxA = ~~(idxA / 6);\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (idxA >= Cnk[i][r]) {\n\t\t\t\tidxA -= Cnk[i][r--];\n\t\t\t\tthis.ep[i] = edge[2-r];\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (8-i+r);\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getURtoUL = function getURtoUL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] <= 2) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\n\n\tthis.getDRtoDL = function getDRtoDL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (4 <= this.ep[i] && this.ep[i] <= 6) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\t\n\n\tthis.setEdgePerm = function setEdgePerm(idx) {\n\t\tthis.ep[11] = 0;\n\t\tfor (var i=10; i>=0; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i));\n\t\t\tidx = ~~(idx/(12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\t\t\n\t}\n\t\n\tthis.getEdgePerm = function getEdgePerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=0; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\t\t\n\t}\n\n\tthis.getCPermSym = function getCPermSym() {\n\t\tif (EPermR2S != null) {\n\t\t\tvar idx = EPermR2S[get8Perm(this.cp)];\n\t\t\tidx ^= e2c[idx&0x0f];\n\t\t\treturn idx;\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(CPermS2R, get8Perm(temps.cp));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tthis.getEPermSym = function getEPermSym() {\t\n\t\tif (EPermR2S != null) {\n\t\t\treturn EPermR2S[get8Perm(this.ep)];\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(EPermS2R, get8Perm(temps.ep));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\t\n\n\tthis.URFConjugate = function URFConjugate() {\n\t\tCornMult(urf2, this, temps);\n\t\tCornMult(temps, urf1, this);\t\t\n\t\tEdgeMult(urf2, this, temps);\n\t\tEdgeMult(temps, urf1, this);\t\t    \t\t\n\t}\n\t\n\tthis.invCubieCube = function invCubieCube() {\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.ep[this.ep[edge]] = edge;\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.eo[edge] = this.eo[temps.ep[edge]];\n\t\tfor (var corn=0; corn<8; corn++)\n\t\t\ttemps.cp[this.cp[corn]] = corn;\n\t\tfor (var corn=0; corn<8; corn++) {\n\t\t\tvar ori = this.co[temps.cp[corn]];\n\t\t\ttemps.co[corn] = -ori;\n\t\t\tif (temps.co[corn] < 0)\n\t\t\t\ttemps.co[corn] += 3;\n\t\t}\n\t\tthis.copy(temps);\n\t}\n\n\n\tthis.init = function init(cperm, twist, eperm, flip) {\n\t\tset8Perm(this.cp, cperm);\n\t\tthis.setTwist(twist);\n\t\tthis.setEdgePerm(eperm);\n\t\tthis.setFlip(flip);\n\t}\n\t\n\tthis.copy = function copy(c) {\n\t\tfor (var i=0; i<8; i++) {\n\t\t\tthis.cp[i] = c.cp[i];\n\t\t\tthis.co[i] = c.co[i];\n\t\t}\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tthis.ep[i] = c.ep[i];\n\t\t\tthis.eo[i] = c.eo[i];\n\t\t}\n\t}\n}\n\nconst cctemp = new CubieCube();\nconst temps = new CubieCube();\n\nfunction set8Perm(arr, idx) {\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar p = fact[7-i];\n\t\tvar v = ~~(idx / p);\n\t\tidx %= p;\n\t\tv <<= 2;\n\t\tarr[i] = ((val >> v) & 7);\n\t\tvar m = (1 << v) - 1;\n\t\tval = (val & m) + ((val >> 4) & ~m);\n\t}\n\tarr[7] = val;\n}\n\nfunction get8Perm(arr) {\n\tvar idx = 0;\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar v = arr[i] << 2;\n\t\tidx = (8 - i) * idx + ((val >> v) & 7);\n\t\tval -= 0x11111110 << v;\n\t}\n\treturn idx;\t\n}\n\nfunction CornMult(a, b, prod) {\n\tfor (var corn=0; corn<8; corn++) {\n\t\tprod.cp[corn] = a.cp[b.cp[corn]];\n\t\tvar oriA = a.co[b.cp[corn]];\n\t\tvar oriB = b.co[corn];\n\t\tvar ori = oriA;\n\t\tori += (oriA<3) ? oriB : 3-oriB;\n\t\tori %= 3;\n\t\tif (oriA < 3 ^ oriB < 3) {\n\t\t\tori += 3;\n\t\t}\n\t\tprod.co[corn] = ori;\n\t}\n}\t\n\nfunction EdgeMult(a, b, prod) {\n\tfor (var ed=0; ed<12; ed++) {\n\t\tprod.ep[ed] = a.ep[b.ep[ed]];\n\t\tprod.eo[ed] = (b.eo[ed] ^ a.eo[b.ep[ed]]);\n\t}\n}\n\nfunction CornConjugate(a, idx, b) {\n\tCornMult(CubeSym[SymInv[idx]], a, cctemp);\n\tCornMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nfunction EdgeConjugate(a, idx, b) {\n\tEdgeMult(CubeSym[SymInv[idx]], a, cctemp);\n\tEdgeMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nvar CubeSym = Array(16);\nvar moveCube = Array(18);\nvar SymInv = Array(16);\nvar SymMult = Array(16);\nvar SymMove = Array(16);\nvar Sym8Mult = Array(8);\nvar Sym8Move = Array(8);\nvar Sym8MultInv = Array(8);\nvar SymMoveUD = Array(16);\nvar FlipS2R = Array(336);\nvar TwistS2R = Array(324);\nvar CPermS2R = Array(2768);\nvar EPermS2R = CPermS2R;\nvar FlipR2S = Array(2048);\nvar TwistR2S = Array(2187);\nvar EPermR2S = createArray(40320);\nfor (var i=0; i<40320; i++) {\n\tEPermR2S[i] = 0;\n}\nvar MtoEPerm = Array(40320);\nvar merge = Array(56);\nvar e2c = [0, 0, 0, 0, 1, 3, 1, 3, 1, 3, 1, 3, 0, 0, 0, 0];\nconst urf1 = new CubieCube();\nurf1.init(2531, 1373, 67026819, 1877);\nconst urf2 = new CubieCube();\nurf2.init(2089, 1906, 322752913, 255);\n\n\nfunction CubieInit() {\n\tvar mc = Array(6);\n\tmc[0] = new CubieCube();\n\tmc[0].init(15120, 0, 119750400, 0);\n\tmc[1] = new CubieCube();\n\tmc[1].init(21021, 1494, 323403417, 0);\n\tmc[2] = new CubieCube();\n\tmc[2].init(8064, 1236, 29441808, 802);\n\tmc[3] = new CubieCube();\n\tmc[3].init(9, 0, 5880, 0);\n\tmc[4] = new CubieCube();\n\tmc[4].init(1230, 412, 2949660, 0);\n\tmc[5] = new CubieCube();\n\tmc[5].init(224, 137, 328552, 1160);\n\tfor (var m=0; m<6; m++) {\n\t\tmoveCube[m*3] = mc[m];\n\t\tfor (var p=0; p<2; p++) {\n\t\t\tmoveCube[m*3+p+1] = new CubieCube();\n\t\t\tEdgeMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t\tCornMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t}\n\t}\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar temp;\n\tvar f2 = new CubieCube();\n\tf2.init(28783, 0, 259268407, 0);\n\tvar u4 = new CubieCube();\n\tu4.init(15138, 0, 119765538, 1792);\n\tvar lr2 = new CubieCube();\n\tlr2.init(5167, 0, 83473207, 0);\n\tlr2.co = [ 3, 3, 3, 3, 3, 3, 3, 3 ];\n\tfor (var i=0; i<16; i++) {\n\t\tSymMult[i] = Array(16);\n\t\tSymMove[i] = Array(18);\n\t\tSymMoveUD[i] = Array(10);\n\t\tCubeSym[i] = new CubieCube();\n\t\tCubeSym[i].copy(c);\n\t\tCornMult(c, u4, d);\n\t\tEdgeMult(c, u4, d);\n\t\ttemp = d;\td = c;\tc = temp;\n\t\tif (i % 4 == 3) {\n\t\t\tCornMult(c, lr2, d);\n\t\t\tEdgeMult(c, lr2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\t\t\t\t\n\t\t}\n\t\tif (i % 8 == 7) {\n\t\t\tCornMult(c, f2, d);\n\t\t\tEdgeMult(c, f2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\n\t\t}\n\t}\n\n\tfor (var j=0; j<16; j++) {\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornMult(CubeSym[j], CubeSym[k], c);\n\t\t\tif (c.cp[0] == 0 && c.cp[1] == 1 && c.cp[2] == 2) {\n\t\t\t\tSymInv[j] = k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i=0; i<16; i++) {\n\t\tfor (var j=0; j<16; j++) {\n\t\t\tCornMult(CubeSym[i], CubeSym[j], c);\n\t\t\tfor (var k=0; k<16; k++) {\n\t\t\t\tif (CubeSym[k].cp[0] == c.cp[0] && CubeSym[k].cp[1] == c.cp[1] && CubeSym[k].cp[2] == c.cp[2]) {\n\t\t\t\t\tSymMult[i][j] = k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tCornConjugate(moveCube[j], SymInv[s], c);\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar found = 1;\n\t\t\t\tfor (var i=0; i<8; i++) {\n\t\t\t\t\tif (c.cp[i] != moveCube[m].cp[i] || c.co[i] != moveCube[m].co[i]) {\n\t\t\t\t\t\tfound = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found) {\n\t\t\t\t\tSymMove[s][j] = m;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<10; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tSymMoveUD[s][j] = std2ud[SymMove[s][ud2std[j]]];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tSym8Mult[j] = Array(8);\n\t\tSym8Move[j] = Array(18);\n\t\tSym8MultInv[j] = Array(8);\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Mult[j][s] = (SymMult[j<<1][s<<1]>>>1);\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Move[s][j] = SymMove[s<<1][j];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8MultInv[j][s] = Sym8Mult[j][SymInv[s<<1]>>1];\n\t\t}\n\t}\n\n\tconst occ = new Array(1260);\n\n\tvar count = 0;\n\tfor (var i=0; i<64; occ[i++] = 0);\n\n\tfor (var i=0; i<2048; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setFlip(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = d.getFlip();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tFlipR2S[idx] = ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tFlipS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\tcount = 0;\n\tfor (var i=0; i<69; occ[i++] = 0);\n\tfor (var i=0; i<2187; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setTwist(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tCornConjugate(c, s, d);\n\t\t\t\tvar idx = d.getTwist();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tTwistR2S[idx] =  ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tTwistS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\n\tvar mask = Array(56);\n\tfor (var i=0; i<56; i++) {\n\t\tmask[i] = Array(2);\n\t\tmerge[i] = Array(56);\n\t}\n\tfor (var i=0; i<40320; i++) {\n\t\tset8Perm(c.ep, i);\n\t\tvar a = ~~(c.getURtoUL() / 6);\n\t\tvar b = ~~(c.getDRtoDL() / 6);\n\t\tmask[a][b>>>5] |= 1 << (b&0x1f);\n\t}\n\t\n\tfor (var i=0; i<56; i++) {\n\t\tcount = 0;\n\t\tfor (var j=0; j<56; j++) {\n\t\t\tif ((mask[i][j>>>5]&(1<<(j&0x1f))) != 0) {\n\t\t\t\tmerge[i][j] = count++;\n\t\t\t}\n\t\t}\n\t}\n\tcount = 0;\n\tfor (var i=0; i<1260; occ[i++] = 0);\n\tfor (var i=0; i<40320; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tset8Perm(c.ep, i);\n\t\t\tfor (var s=0; s<16; s++) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = get8Perm(d.ep);\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tvar a = d.getURtoUL();\n\t\t\t\tvar b = d.getDRtoDL();\n\t\t\t\tvar m = (merge[~~(a/6)][~~(b/6)] * 4032 + a * 12 + b % 6 * 2 + get8Parity(idx));\n\t\t\t\tMtoEPerm[m] = (count << 4 | s);\n\t\t\t\tEPermR2S[idx] = (count << 4 | s);\n\t\t\t}\n\t\t\tEPermS2R[count++] = i;\n\t\t}\n\t}\n}\n\nvar UDSliceMove = Array(495);//new char[495][18];\nvar TwistMove = Array(324);//new char[324][18];\nvar FlipMove = Array(336);//new char[336][18];\nvar UDSliceConj = Array(495);//new char[495][8];\nvar UDSliceTwistPrun = Array(495*324);//new byte[495 * 324];\nvar UDSliceFlipPrun = Array(495*336);//new byte[495 * 336];\n\t\nvar TwistFlipPrun = Array(336*324*8);//new byte[336 * 324 * 8];\n\t\n\t//phase1to2\nvar Mid3Move = Array(1320);//new char[1320][18];\nvar Mid32MPerm = Array(24);//new byte[24];\nvar CParity = Array(87);//new byte[2768/8];\n\n\t//phase2\nvar CPermMove = Array(2768);//new char[2768][18];\nvar EPermMove = Array(2768);//new char[2768][10];\nvar MPermMove = Array(24);//new byte[24][10];\nvar MPermConj = Array(24);//new byte[24][16];\nvar MCPermPrun = Array(24*2768);//new byte[24*2768];\nvar MEPermPrun = Array(24*2768);//new byte[24*2768];\n\n\nfunction CoordInit() {\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar i, j;\n\tfor (i=0; i<2768; i++) {\n\t\tCPermMove[i] = Array(18);\n\t\tset8Perm(c.cp, CPermS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tCPermMove[i][j] = d.getCPermSym();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<2768; i++) {\n\t\tEPermMove[i] = Array(10);\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tEPermMove[i][j] = d.getEPermSym();\n\t\t}\n\t}\n\tfor (i=0; i<336; i++) {\n\t\tFlipMove[i] = Array(18);\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tFlipMove[i][j] = d.getFlipSym();\n\t\t}\n\t}\n\tfor (i=0; i<324; i++) {\n\t\tTwistMove[i] = Array(18);\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tTwistMove[i][j] = d.getTwistSym();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceMove[i] = Array(18);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tUDSliceMove[i][j] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceConj[i] = Array(8);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<16; j+=2) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tUDSliceConj[i][j>>>1] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<1320; i++) {\n\t\tMid3Move[i] = Array(18);\n\t\tc.setMid3(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tMid3Move[i][j] = d.getMid3();\n\t\t}\n\t}\t\n\tfor (i=0; i<24; i++) {\n\t\tc.setMPerm(i);\n\t\tMid32MPerm[c.getMid3() % 24] = i;\n\t}\n\tfor (i=0; i<2768; i++) {\n\t\tCParity[i>>>3] |= (get8Parity(CPermS2R[i])) << (i & 7);\n\t}\n\tfor (i=0; i<24; i++) {\n\t\tMPermMove[i] = Array(10);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tMPermMove[i][j] = d.getMPerm();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<24; i++) {\n\t\tMPermConj[i] = Array(16);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<16; j++) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tMPermConj[i][j] = d.getMPerm();\n\t\t}\n\t}\n\t\n\tvar SymState = Array(324);\n\tfor (i=0; i<324; i++) {\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tCornConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(TwistS2R, d.getTwist()) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tvar SymStateF = Array(324);\n\tfor (i=0; i<336; i++) {\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tEdgeConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(FlipS2R, d.getFlip()) != 0xffff) {\n\t\t\t\tSymStateF[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\t\t\n\tfor (i=0; i<336*324*8; i++) {\n\t\tTwistFlipPrun[i] = -1;\n\t}\n\tfor (i=0; i<8; i++) {\n\t\tTwistFlipPrun[i] = 0;\n\t}\n\tvar depth = 0;\n\tvar done = 8;\n\tvar inv;\n\tvar select;\n\tvar check;\n\t\n\twhile (done < 336*324*8) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<336*324*8; i++) {\n\t\t\tif (TwistFlipPrun[i] != select)\n\t\t\t\tcontinue;\n\t\t\tvar twist = ~~(i / 2688);\n\t\t\tvar flip = i % 2688;\n\t\t\tvar fsym = i & 7;\n\t\t\tflip >>>= 3;\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\tvar tsymx = twistx & 7;\n\t\t\t\ttwistx >>>= 3;\n\t\t\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\t\t\tvar fsymx = Sym8MultInv[Sym8Mult[flipx & 7][fsym]][tsymx];\n\t\t\t\tflipx >>>= 3;\n\t\t\t\tvar idx = twistx * 2688 + (flipx << 3 | fsymx);\n\t\t\t\tif (TwistFlipPrun[idx] == check) {\n\t\t\t\t\tdone++;\n\t\t\t\t\tif (inv) {\n\t\t\t\t\t\tTwistFlipPrun[i] = depth;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTwistFlipPrun[idx] = depth;\n\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\tvar symF = SymStateF[flipx];\n\t\t\t\t\t\tif (sym != 1 || symF != 1) {\n\t\t\t\t\t\t\tfor (var j=0; j<8; j++, symF >>= 1) {\n\t\t\t\t\t\t\t\tif ((symF & 1) == 1) {\n\t\t\t\t\t\t\t\t\tvar fsymxx = Sym8MultInv[fsymx][j];\n\t\t\t\t\t\t\t\t\tfor (var k=0; k<8; k++) {\n\t\t\t\t\t\t\t\t\t\tif ((sym & (1 << k)) != 0) {\n\t\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymxx][k]);\n\t\t\t\t\t\t\t\t\t\t\tif (TwistFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tTwistFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n\tfor (i=0; i<495*324; i++) {\n\t\tUDSliceTwistPrun[i] = -1;\n\t}\n\tUDSliceTwistPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 324) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*324; i++) {\n\t\t\tif (UDSliceTwistPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar twist = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\t\tvar symx = twistx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\ttwistx >>>= 3;\n\t\t\t\t\tvar idx = twistx * 495 + slicex;\n\t\t\t\t\tif (UDSliceTwistPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceTwistPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceTwistPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceTwistPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceTwistPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\n\tfor (i=0; i<495*336; i++) {\n\t\tUDSliceFlipPrun[i] = -1;\n\t}\n\tUDSliceFlipPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 336) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*336; i++) {\n\t\t\tif (UDSliceFlipPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar flip = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar flipx = FlipMove[flip][m];\n\t\t\t\t\tvar symx = flipx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\tflipx >>>= 3;\n\t\t\t\t\tvar idx = flipx * 495 + slicex;\n\t\t\t\t\tif (UDSliceFlipPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceFlipPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceFlipPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymStateF[flipx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = flipx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tdepth++;\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\n\t\n\tSymState = Array(2768);\n\tfor (i=0; i<2768; i++) {\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=1; j<16; j++) {\n\t\t\tEdgeConjugate(c, j, d);\n\t\t\tif (binarySearch(EPermS2R, get8Perm(d.ep)) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tfor (i=0; i<24*2768; i++) {\n\t\tMEPermPrun[i] = -1;\n\t}\n\tMEPermPrun[0] = 0;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MEPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar edge = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar edgex = EPermMove[edge][m];\n\t\t\t\t\tvar symx = edgex & 15;\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tedgex >>>= 4;\n\t\t\t\t\tvar idx = edgex * 24 + midx;\n\t\t\t\t\tif (MEPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMEPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMEPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[edgex];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = edgex * 24 + MPermConj[midx][j];\n\t\t\t\t\t\t\t\t\t\tif (MEPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMEPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\t\t\n\tfor (i=0; i<24*2768; i++) {\n\t\tMCPermPrun[i] = -1;\n\t}\n\tMCPermPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MCPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar corn = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar cornx = CPermMove[corn][ud2std[m]];\n\t\t\t\t\tvar symx = (cornx & 15);\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tcornx >>>= 4;\n\t\t\t\t\tvar idx = cornx * 24 + midx;\n\t\t\t\t\tif (MCPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMCPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMCPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[cornx];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = cornx * 24 + MPermConj[midx][j ^ e2c[j]];\n\t\t\t\t\t\t\t\t\t\tif (MCPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMCPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n}\t\t\t\t\t\n\nfunction randomCube() {\n\tvar eperm;\n\tvar cperm;\n\tdo {\n\t\teperm = ~~(Math.random() * 479001600);\n\t\tcperm = ~~(Math.random() * 40320);\n\t} while (((get8Parity(cperm) ^ get12Parity(eperm))) != 0);\n\tvar c = new CubieCube();\n\tc.init(cperm, ~~(Math.random() * 2187), eperm, ~~(Math.random() * 2048));\n\treturn c;\n}\n\nvar move = Array(31);\n\nvar corn = Array(20);\nvar csym = Array(20);\nvar mid3 = Array(20);\nvar e1 = Array(20);\nvar e2 = Array(20);\nvar urfidx;\n\nvar twist = Array(6);\nvar tsym = Array(6);\nvar flip = Array(6);\nvar fsym = Array(6);\nvar slice = Array(6);\nvar corn0 = Array(6);\nvar csym0 = Array(6);\nvar mid30 = Array(6);\nvar e10 = Array(6);\nvar e20 = Array(6);\nvar prun = Array(6);\n\nvar length1 = 0;\nvar maxlength2 = 0;\nvar sol = 999;\nvar valid1 = 0;\nvar valid2 = 0;\nvar solution = \"\";\nvar useSeparator = false;\n\nfunction Solve(c) {\n\tc.temps = new CubieCube();\n\tfor (var i=0; i<6; i++) {\n\t\ttwist[i] = c.getTwistSym();\n\t\ttsym[i] = twist[i] & 7;\n\t\ttwist[i] >>>= 3;\n\t\tflip[i] = c.getFlipSym();\n\t\tfsym[i] = flip[i] & 7;\n\t\tflip[i] >>>= 3;\n\t\tslice[i] = c.getUDSlice();\n\t\tcorn0[i] = c.getCPermSym();\n\t\tcsym0[i] = corn0[i] & 15;\n\t\tcorn0[i] >>>= 4;\n\t\tmid30[i] = c.getMid3();\n\t\te10[i] = c.getURtoUL();\n\t\te20[i] = c.getDRtoDL();\n\t\tprun[i] = Math.max(Math.max(UDSliceTwistPrun[twist[i] * 495 + UDSliceConj[slice[i]][tsym[i]]],\n\t\t\t\t\t\tUDSliceFlipPrun[flip[i] * 495 + UDSliceConj[slice[i]][fsym[i]]]),\n\t\t\t\t\t\tTwistFlipPrun[twist[i] * 2688 + (flip[i] << 3 | Sym8MultInv[fsym[i]][tsym[i]])]);\n\t\tc.URFConjugate();\n\t\tif (i==2) {\n\t\t\tc.invCubieCube();\n\t\t}\n\t}\n\tsolution = null;\n\tsol = 22;\n\tfor (length1=0; length1<sol; length1++) {\n\t\tmaxlength2 = Math.min(sol/2+1, sol-length1);\n\t\tfor (urfidx=0; urfidx<6; urfidx++) {\n\t\t\tcorn[0] = corn0[urfidx];\n\t\t\tcsym[0] = csym0[urfidx];\n\t\t\tmid3[0] = mid30[urfidx];\n\t\t\te1[0] = e10[urfidx];\n\t\t\te2[0] = e20[urfidx];\n\t\t\tif ((prun[urfidx] <= length1)\n\t\t\t\t\t&& phase1(twist[urfidx], tsym[urfidx], flip[urfidx], fsym[urfidx],\n\t\t\t\t\t\t\t\tslice[urfidx], length1, 18)) {\n\t\t\t\tif (solution == null) {\n\t\t\t\t\treturn \"Error 8\";\n\t\t\t\t} else {\n\t\t\t\t\treturn solution;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn \"Error 7\";\n}\n\nfunction phase1(twist, tsym, flip, fsym, slice, maxl, lm) {\n\tif (twist==0 && flip==0 && slice==0 && maxl < 5) {\n\t\treturn maxl == 0 && init2();\n\t}\n\tfor (var m=0; m<18; m++) {\n\t\tif (ckmv[lm][m]) {\n\t\t\tm+=2;\n\t\t\tcontinue;\n\t\t}\n\t\tvar slicex = UDSliceMove[slice][m];\n\t\tvar twistx = TwistMove[twist][Sym8Move[tsym][m]];\n\t\tvar tsymx = Sym8Mult[twistx & 7][tsym];\n\t\ttwistx >>>= 3;\n\t\tif (UDSliceTwistPrun[twistx * 495 + UDSliceConj[slicex][tsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\tvar fsymx = Sym8Mult[flipx & 7][fsym];\n\t\tflipx >>>= 3;\n\t\tif (TwistFlipPrun[twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymx][tsymx])] >= maxl\n\t\t\t\t||UDSliceFlipPrun[flipx * 495 + UDSliceConj[slicex][fsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[length1-maxl] = m;\n\t\tvalid1 = Math.min(valid1, length1-maxl);\n\t\tif (phase1(twistx, tsymx, flipx, fsymx, slicex, maxl-1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction init2() {\n//\tif (System.currentTimeMillis() > timeOut) {\n//\t\treturn true;\n//\t}\n\tvalid2 = Math.min(valid2, valid1);\n\tfor (var i=valid1; i<length1; i++) {\n\t\tvar m = move[i];\n\t\tcorn[i+1] = CPermMove[corn[i]][SymMove[csym[i]][m]];\n\t\tcsym[i+1] = SymMult[corn[i+1] & 15][csym[i]];\n\t\tcorn[i+1] >>>= 4;\n\t\tmid3[i+1] = Mid3Move[mid3[i]][m];\n\t}\n\tvalid1 = length1;\n\tvar mid = Mid32MPerm[mid3[length1] % 24];\n\tvar prun = MCPermPrun[corn[length1] * 24 + MPermConj[mid][csym[length1]]];\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\tfor (var i=valid2; i<length1; i++) {\n\t\te1[i+1] = Mid3Move[e1[i]][move[i]];\n\t\te2[i+1] = Mid3Move[e2[i]][move[i]];\n\t}\n\tvalid2 = length1;\n\tvar cornx = corn[length1];\n\tvar ex = merge[~~(e1[length1]/6)][~~(e2[length1]/6)] * 4032\n\t\t\t\t + e1[length1] * 12 + e2[length1] % 6 * 2 + (((CParity[cornx>>>3]>>>(cornx&7))&1) ^ get4Parity(mid));\n\tvar edge = MtoEPerm[ex];\n\tvar esym = edge & 15;\n\tedge >>>= 4;\n\t\tprun = Math.max(MEPermPrun[edge * 24 + MPermConj[mid][esym]], prun);\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\t\tvar lm = length1==0 ? 10 : std2ud[~~(move[length1-1]/3)*3+1];\n\tfor (var i=prun; i<maxlength2; i++) {\n\t\tif (phase2(edge, esym, corn[length1], csym[length1], mid, i, length1, lm)) {\n\t\t\tsol = length1 + i;\n\t\t\tvar sb = \"\";\n\t\t\tvar urf = urfidx;\n//\t\t\tif (inverse) {\n\t\t\t\turf = (urf + 3) % 6;\n//\t\t\t}\n\t\t\tif (urf < 3) {\n\t\t\t\tfor (var s=0; s<length1; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1; s<sol; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var s=sol-1; s>=length1; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1-1; s>=0; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// sb += \"(\" + sol + \"f)\";\n\t\t\tsolution = sb;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction phase2(edge, esym, corn, csym, mid, maxl, depth, lm) {\n\tif (edge==0 && corn==0 && mid==0) {\n\t\treturn true;\n\t}\n\tfor (var m=0; m<10; m++) {\n\t\tif (ckmv2[lm][m]) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar midx = MPermMove[mid][m];\n\t\tvar edgex = EPermMove[edge][SymMoveUD[esym][m]];\n\t\tvar esymx = SymMult[edgex & 15][esym];\n\t\tedgex >>>= 4;\n\t\tif (MEPermPrun[edgex * 24 + MPermConj[midx][esymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar cornx = CPermMove[corn][SymMove[csym][ud2std[m]]];\n\t\tvar csymx = SymMult[cornx & 15][csym];\n\t\tcornx >>>= 4;\n\t\tif (MCPermPrun[cornx * 24 + MPermConj[midx][csymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[depth] = ud2std[m];\n\t\tif (phase2(edgex, esymx, cornx, csymx, midx, maxl-1, depth+1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nvar initialized = false;\n\nfunction initialize() {\n\tif (initialized) {\n\t\treturn;\n\t}\n\tCubieInit();\n\tCoordInit();\n\tinitialized = true;\n}\n\nfunction solve(c) {\n\tinitialize();\n\tconst cc = new CubieCube();\n\tcc.cp = c.cp;\n\tcc.co = c.co;\n\tcc.ep = c.ep;\n\tcc.eo = c.eo;\n\treturn Solve(cc);\n};\n\nmodule.exports.initialize = initialize;\nmodule.exports.solve = solve;\nmodule.exports.randomCube = randomCube;\n"],"sourceRoot":""}