{"version":3,"sources":["lib/Defs.tsx","components/CubeSim.tsx","lib/Math.ts","lib/CubeLib.tsx","lib/Selector.tsx","components/Select.tsx","components/CmllTrainerView.tsx","components/BlockTrainerView.tsx","components/PanoramaView.tsx","lib/Pruner.tsx","lib/min2phase/min2phase-wrapper.ts","lib/Solver.tsx","lib/CachedSolver.tsx","components/FavListView.tsx","components/AppView.tsx","Config.tsx","lib/Local.tsx","Version.tsx","reducers/AbstractStateM.tsx","lib/Algs.tsx","reducers/BlockTrainerStateM.tsx","reducers/LSETrainerStateM.tsx","reducers/CmllStateM.tsx","reducers/StateFactory.tsx","KeyMapping.tsx","reducers/Reducer.tsx","theme.js","app/App.tsx","serviceWorker.js","index.js","lib/min2phase/min2phase.js"],"names":["Face","Typ","U","D","F","B","L","R","C","E","T","corners_coord","edges_coord","cstimer_corners_coord","cstimer_edges_coord","u","cpc","coc","epc","eoc","tpc","name","f","r","l","d","b","m","e","s","u_face","f_face","FBpairPos","color_map","TAU","Math","PI","axesInfo","THREE","cubeSim","width","height","colorScheme","mode","faces","stickers_tmpl","stickerwrap_tmpl","facesToReveal","hintDistance","scene","camera","renderer","antialias","geo","geo_border","setPixelRatio","window","devicePixelRatio","position","copy","lookAt","cubeG","add","updateWidthHeight","clearColor","canvas","domElement","setSize","setClearColor","aspect","updateProjectionMatrix","updateCube","cube","remove","i","cubie","rot","makeRotationFromEuler","rot1","setRotationFromMatrix","multiply","z","x","idx","curr_tmpl","sticker","clone","stickerwrap","indexOf","stickerhint","scale","set","drawCube","renderScene","render","cleanup","dispose","updateColorScheme","colorScheme_","materials","Array","fill","map","_","mat","color","side","alphaTest","mesh","setRotationFromEuler","materials_border","updateFacesToReveal","updateDrawParam","distance","setup","CubeSim","props","mount","React","useRef","useEffect","dom","current","appendChild","bgColor","removeChild","ref","style","rand_int","floor","random","rand_incl","rand_choice","arr","length","cartesianProduct","allEntries","reduce","results","entries","result","entry","concat","subResults","getParity","perm","visited","follow","cnt","res","arrayEqual","arr1","arr2","CubieCube","value","cp","co","ep","eo","tp","this","Id","o","p","oc","pc","mod","o_new","p_new","console","assert","src","dst","move","_apply_partial","toc","isArray","MoveSeq","moves","apply_one","apply","facelet_mapping","pos","piece","j","_rotate_coord","push","fm","custom_corners_coord","custom_edges_coord","idxOf","a_","target","a","getOriPerm","ori","_backward_rotate_coord","coord_pair","newpos","newOri","newPerm","_to_facelet_mapping","_from_facelet_mapping","perm_correct","ori_correct","y","fs","last_face","first_face","Move","arg","from_moves","from_cube","get_change","acc_p","acc_o","slice","all","generate_base_moves","make_rot_set","us","rs","ls","ds","bs","ms","es","ss","rws","lws","uws","xs","ys","zs","flat","moves_dict","Object","create","forEach","parse","str","tokens","token","ch","ord","charCodeAt","newMoves","nextMove","shift","pop","combined","_combine","reverse","inv","useMetric","toString","join","move1","move2","getCnt","getStr","auf_moves","auf_move","SeqEvaluator","Map","sum","moveCost","get","moveCost_gen","FaceletCube","mult_move","face","face_new","work","typ","mod_for_typ","p1","p2","p_curr","o_curr","color_of_c","o1","o2","color_of_e","color_of_t","color_of_sticker","Error","d_face","l_face","r_face","b_face","from_cubie","mask","facelet","X","from_cubie_partial_masked","from_cubie_partial","to_unfolded_cube_str","faceletCube","face_count","str_face_map","color_cube","face_char","hasOwnProperty","count","to_cubejs_str","lse_mask","CubeUtil","ext","stickers","find_pairs","edge_stickers","filter","corner_stickers","ep_stickers","cp_stickers","epcp_pairs","c","efs","cfs","match","get_color","connected_pairs","u_premove","m2_premove","get_random_with_mask","cp_rand","ep_rand","par","random_ori","ori_mask","random_perm","perm_mask","undecided","tmp","rand_shuffle","ori_to_color_scheme","colorMap","valid_scheme_mapper","split","sel","is_cmll_solved","premove","cube1","solved","is_mask_solved","get_random_lse","is_cube_solved","id","Mask","fs_back_mask","fs_front_mask","fbdr_mask","fb_mask","sb_mask","cmll_mask","ss_front_mask","ss_back_mask","empty_mask","dl_solved_mask","db_solved_mask","solved_mask","zhouheng_mask","lse_4c_mask","getActiveNames","ans","flags","names","getActiveName","useStyles","makeStyles","theme","container","paddingTop","spacing","paddingBottom","backgroundColor","palette","background","default","button","paper","padding","display","overflow","flexDirection","canvasPaper","infoColumn","scrambleColumn","paddingLeft","textColumn","breakpoints","up","minHeight","fixedHeight","title","flexGrow","select","text","primary","selectLabel","secondary","SingleSelect","state","dispatch","config","classes","radioValue","label","FormControl","component","className","FormLabel","RadioGroup","aria-label","onChange","evt","n","new_flags","new_config","JSON","stringify","fbPairSolvedSelector","fbdrSelector","type","content","row","FormControlLabel","key","control","Radio","labelPlacement","MultiSelect","options","handleChange","checked","useState","open","setOpen","handleClose","manipChecked","setManipChecked","manipulator_row","manipulators","FormGroup","manip","enableIdx","Checkbox","fillValue","makeManipulator","Fragment","makeBox","noDialog","Box","Button","variant","borderWidth","onClick","fontSize","marginLeft","marginRight","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","DialogActions","hint","fontWeight","borderBottom","prompt","CmllTrainerView","clsx","_getMask","cmllCubeMaskSelector","useTheme","simBackground","panel","cmllSelector","cmllAufSelector","triggerSelector","orientationSelector","setReveal","reveal","alg","case","desc","moves_c","collapse","Grid","item","Paper","margin","elevation","lineHeight","Typography","whiteSpace","onFocus","blur","size","sm","md","Divider","sourceIcon","sourceIconWrap","fab","top","left","ConfigPanelGroup","ssSelector","ssPairOnlySelector","solutionNumSelector","ssPosSelector","fbOnlySelector","fbdrScrambleSelector","fbPieceSolvedSelector","lseStageSelector","lseMCSelector","lseBarSelector","lseEOSelector","lseEOLRMCSelector","lseBarbieSelector","BlockTrainerView","kind","getMask","alt_algs","spaceButtonText","algs","undefined","minMove","min","algText","favSelected","setFav","justify","alignItems","icon","case_","solver","action","checkedIcon","root","flexWrap","justifyContent","textAlign","gridList","VisualCube","stage","sch","template","alt","PanoramaTable","GridList","cellHeight","cols","GridListTile","PanoramaView","Pruner","dist","encode","solved_states","max_depth","moveset","initialized","init","Uint8Array","frontier","total_expanded","log","new_frontier","newState","query","equal","cube2","fbdrPrunerConfig","pow","c1","c2","enc_c","e1","e2","e3","e4","fbPrunerConfig","enc_ce","t1","lsePrunerConfig","edge_encode","enc","edge_enc","solve","min2phaseSolve","toMin2Phase","Solver","accum","min_depth","SState","is_solved","pruners","state_count","prune_count","solve_depth","min_depth_","max_depth_","accum_","search","Moveable","depth","solution","STOP","CONTINUE","solutions","capacity","flag","sol","try_push","availableMoves","seen_encodings","Set","new_cube","has","st","expand","getAvailableMove","k","base","prepareNextMoveable","depth_l","depth_r","getPruner","SsSolver","is_front","prunerConfig","v","ssPrunerConfig","pruner","EOLRSolver","center_flag","use_barbie","edge_idx","moves_ac","moves_mc","barb_moves","eolrPrunerConfig","all_solvers","CachedSolver","cache","FbdrSolver","FbSolver","min2phase_init","transformed_cube","to_cstimer_cube","is_solveable","min2phase_solve","LSESolver","table","minWidth","FavListView","play","favList","dialogID","setDialogID","dialogDelete","autoFocus","addDialogOpen","setAddDialogOpen","addString","setAddString","handleAddClose","dialogAdd","aria-labelledby","DialogContentText","TextField","multiline","fullWidth","event","onKeyDown","stopPropagation","trim","includes","parseAddString","Table","TableHead","TableRow","TableCell","align","rowSpan","IconButton","edge","TableBody","TabPanel","children","index","other","role","hidden","page","modes","_getInitialHashLocation","location","hash","AppView","useCallback","newValue","setValue","handleInfoClose","showFav","dividers","gutterBottom","AppBar","Tabs","scrollButtons","indicatorColor","Tab","theme_flag","paddingY","Container","maxWidth","initialFavList","initialConfig","arr_ori_flag","ssEOSelector","favListManager","getFavList","localStorage","getItem","setFavList","setItem","configManager","getConfig","vers","item1","keys","item2","setConfig","partial","newConfig","assign","AbstractStateM","StateFactory","empty_alg","cmll_algs","trigger_algs","u_auf_algs","ori_algs","alg_generator","selector","algSet","lookup_algset","lookup","get_active_names","prefix","BlockTrainerStateM","solverL","solverR","scrambleMargin","scrambleCount","algDescWithMoveCount","algdesc","solverName","updateSolutionOnly","_solve_min2phase","solutionCap","solutionLength","use2PhaseScramble","max","sort","evaluate","getRandom","_solve","state1","_updateCase","movestr","conf","_updateCap","FbdrStateM","fbOnly","pairSolved","useMin2PhaseScramble","startsWith","active","_get_pair_solved_front","_get_random_fs_back","_get_random_fs_front","SsStateM","allowed_dr_eo_ep","find","eo_","ep_","drPositionMap","allowed_dr_eo_ep_patterns","_get_random_fb","FbStateM","is_l_only","centers","g_hard","pairs","cc_edges","_find_center_connected_edges","_get_random","LSEStateM","bars","lse_premove","lseEODef","lseEODefLookup","def","EOLRStateM","eo_arr","targetEO","eolrMCMode","compare","useBarbie","_getEOType","acSolver","mcSolver","acLength","mcLength","CmllStateM","m2_away","algDesc","lse_cube","generator","trig_generator","u_auf_generator","ori_generator","trigger_alg","cmll_alg","u_auf_alg","alg_str","_get2PhaseSolution","history","_generateCase","SolvingStateM","SolvedStateM","defaultKeyMapping","lseKeyMapping","DefaultKeyMapping","altKey","ctrlKey","metaKey","toUpperCase","LSEKeyMapping","getInitialState","initialStateName","scrSource","cubejs","keyMapping","reducer","code","stateM","reduceByKey","reactToConfig","reduceByConfig","rem","replay","reduceByFavlist","createMuiTheme","main","error","red","A400","themeDark","addEventListener","keyCode","document","body","preventDefault","App","useReducer","downHandler","handle","removeEventListener","appTheme","ThemeProvider","CssBaseline","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","createArray","bitCount","get8Parity","get12Parity","binarySearch","mid","val","fact","perm3","ud2std","std2ud","Cnk","length1","length2","createArrays","move2str","urfMove","ckmv","ckmv2","getFlip","getFlipSym","FlipR2S","EdgeConjugate","SymInv","temps","FlipS2R","setFlip","bitOdd","getTwist","getTwistSym","TwistR2S","CornConjugate","TwistS2R","setTwist","twst","getUDSlice","setUDSlice","getMPerm","t","setMPerm","getMid3","idxA","idxB","setMid3","getURtoUL","getDRtoDL","setEdgePerm","getEdgePerm","getCPermSym","EPermR2S","get8Perm","e2c","CPermS2R","getEPermSym","EPermS2R","URFConjugate","CornMult","urf2","urf1","EdgeMult","invCubieCube","corn","cperm","twist","eperm","flip","set8Perm","cctemp","prod","oriA","oriB","ed","CubeSym","moveCube","SymMult","SymMove","Sym8Mult","Sym8Move","Sym8MultInv","SymMoveUD","MtoEPerm","merge","UDSliceMove","TwistMove","FlipMove","UDSliceConj","UDSliceTwistPrun","UDSliceFlipPrun","TwistFlipPrun","Mid3Move","Mid32MPerm","CParity","CPermMove","EPermMove","MPermMove","MPermConj","MCPermPrun","MEPermPrun","urfidx","csym","mid3","tsym","fsym","corn0","csym0","mid30","e10","e20","prun","maxlength2","valid1","valid2","phase1","maxl","lm","cornx","ex","get4Parity","esym","phase2","sb","urf","init2","slicex","twistx","tsymx","flipx","fsymx","midx","edgex","esymx","csymx","initialize","mc","temp","f2","u4","lr2","found","occ","CubieInit","SymState","SymStateF","check","done","sym","symF","fsymxx","idxx","symx","CoordInit","module","exports","cc","Solve","randomCube"],"mappings":"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","file":"static/js/main.d4ba72b8.chunk.js","sourcesContent":["export enum Face {\n    U = 0, D, F, B, L, R, X\n}\nconst U = Face.U;\nconst D = Face.D;\nconst F = Face.F;\nconst B = Face.B;\nconst L = Face.L;\nconst R = Face.R;\nexport {U, D, F, B, L, R};\n\nexport enum Typ {\n    C = 0, E, T\n}\nconst C = Typ.C;\nconst E = Typ.E;\nconst T = Typ.T;\nexport {C, E, T}\n\nexport type CubieT = {\n    co: Array<number>,\n    cp: Array<number>,\n    eo: Array<number>,\n    ep: Array<number>,\n    tp: Array<number>\n}\n\nexport type FaceletCube = Array<string>\n\nexport type CornerCoord = [Face, Face, Face]\nlet corners_coord : Array<CornerCoord> = [\n    [U,F,L], [U,L,B], [U,B,R], [U,R,F],\n    [D,L,F], [D,B,L], [D,R,B], [D,F,R]\n]\n\nexport type EdgeCoord = [Face, Face]\nlet edges_coord : Array<EdgeCoord> = [\n    [U,F], [U,L], [U,B], [U,R],\n    [D,F], [D,L], [D,B], [D,R],\n    [F,L], [B,L], [B,R], [F,R],\n]\n\nlet cstimer_corners_coord : Array<CornerCoord> = [\n    [U,R,F],[U,F,L], [U,L,B], [U,B,R],\n    [D,F,R],[D,L,F], [D,B,L], [D,R,B]\n]\n\nlet cstimer_edges_coord : Array<EdgeCoord> = [\n    [U, R], [U,F], [U,L], [U,B],\n    [D, R], [D,F], [D,L], [D,B],\n    [F, R], [F,L], [B,L], [B,R]\n]\n\nexport {corners_coord, edges_coord, cstimer_corners_coord, cstimer_edges_coord }\n\nexport type FaceletMapping = [Face[], Face[]][]\n\nexport type PermChg = [number, number]\nexport type OriChg = number\n\nexport type MoveT = {\n    cpc: Array<PermChg>,\n    coc: Array<OriChg>,\n    epc: Array<PermChg>,\n    eoc: Array<OriChg>,\n    tpc: Array<PermChg>,\n    name: string\n}\n\nlet u : MoveT = {\n    cpc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    coc: [0, 0, 0, 0],\n    epc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"U\"\n}\n\nlet f : MoveT = {\n    cpc: [[0, 3], [3, 7], [7, 4], [4, 0]],\n    coc: [1, 2, 1, 2],\n    epc: [[0, 11], [11, 4], [4, 8], [8, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"F\",\n}\n\nlet r : MoveT = {\n    cpc: [[3, 2], [2, 6], [6, 7], [7, 3]],\n    coc: [1, 2, 1, 2],\n    epc: [[3, 10], [10, 7], [7, 11], [11, 3]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"R\",\n}\n\nlet l : MoveT = {\n    cpc: [[0, 4], [4, 5], [5, 1], [1, 0]],\n    coc: [2, 1, 2, 1],\n    epc: [[1, 8], [8, 5], [5, 9], [9, 1]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"L\",\n}\n\nlet d : MoveT = {\n    cpc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    coc: [0, 0, 0, 0],\n    epc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"D\",\n}\n\nlet b : MoveT = {\n    cpc: [[1, 5], [5, 6], [6, 2], [2, 1]],\n    coc: [2, 1, 2, 1],\n    epc: [[2, 9], [9, 6], [6, 10], [10, 2]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"B\",\n}\n\nlet m : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[0, 4], [4, 6], [6, 2], [2, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 2], [2, 1], [1, 3], [3, 0]],\n    name: \"M\",\n}\n\nlet e : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[8, 9], [9, 10], [10, 11], [11, 8]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[2, 4], [4, 3], [3, 5], [5, 2]],\n    name: \"E\",\n}\n\nlet s : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[1, 3], [3, 7], [7, 5], [5, 1]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 5], [5, 1], [1, 4], [4, 0] ],\n    name: \"S\",\n}\n\nexport {u, d, f, b, l, r, m, e, s}\n\nexport type StickerT = [number, number, Typ]\nexport type StickerExtT = [number, number, Typ, Face]\nexport type FaceletT = Array<StickerT>\n\nlet u_face : FaceletT = [\n    [1, 0, C], [2, 0, E], [2, 0, C],\n    [1, 0, E], [0, 0, T], [3, 0, E],\n    [0, 0, C], [0, 0, E], [3, 0, C]\n  ]\n\nlet f_face : FaceletT = [\n    [0, 1, C], [0, 1, E], [3, 2, C],\n    [8, 0, E], [2, 0, T], [11,0, E],\n    [4, 2, C], [4, 1, E], [7, 1, C]\n]\n\nexport {u_face, f_face}\n\nconst FBpairPos : [number, number, number, number][] = [\n    [0, 0, 8, 1], [0, 1, 1, 0], [ 0, 2 , 0, 1],\n    [1, 1, 2, 0], [1, 2, 1, 1],\n    [2, 0, 10, 1], [2, 1, 3, 0], [2, 2, 2, 1],\n    [3, 0, 11, 0], [3, 1, 0, 0], [3, 2, 3, 1],\n    [4, 0, 8, 0], [4, 1, 4, 0],\n    [6, 0, 10, 0], [6, 1, 6, 0], [6, 2, 7, 1],\n    [7, 0, 11, 1], [7, 1, 7, 0], [7, 2, 4, 1]\n]\n\nexport {FBpairPos}\n\nexport type FaceletCubeT = Array<Array<Face>>\n\n// A Cube can be in two representations: cubieCube or faceletCube\n\nlet color_map =`\\\n   UUU\n   UUU\n   UUU\nLLLFFFRRRBBB\nLLLFFFRRRBBB\nLLLFFFRRRBBB\n   DDD\n   DDD\n   DDD`\n\nexport {color_map}\n","import React, { useEffect } from 'react'\n\nimport { FaceletCubeT, Face } from \"../lib/Defs\";\nimport * as THREE from 'three';\nimport { useTheme } from '@material-ui/core';\nimport { getConfig } from '../lib/Local';\n\ntype Config = {\n    cube: FaceletCubeT, width: number, height: number, colorScheme: Array<number>, facesToReveal: Face[],\n    bgColor?: string,\n    hintDistance?: number\n}\n\n/*\nHow to propagate control of keypress ..? maybe not here, in the app.\n\nLet's look at click analogy: if a user click on sub-component,\nthat message should be propagated upwards to the parent.\n\nThat is, \"keydown\" should transform to some kind of message, e.g. the resulting cube state\nto be passed to the App, which then decides whether to trigger state change or let the cube keep being solved\n\n*/\n\n\ntype AxesInfo = [THREE.Vector3, THREE.Euler]\nconst TAU = Math.PI * 2;\nconst axesInfo: [THREE.Vector3, THREE.Euler][] = [\n    [new THREE.Vector3(0, 1, 0), new THREE.Euler(-TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, -1, 0), new THREE.Euler(TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, 0, 1), new THREE.Euler(0, 0, 0)],\n    [new THREE.Vector3(0, 0, -1), new THREE.Euler(0, TAU / 2, 0)],\n    [new THREE.Vector3(-1, 0, 0), new THREE.Euler(0, -TAU / 4, 0)],\n    [new THREE.Vector3(1, 0, 0), new THREE.Euler(0, TAU / 4, 0)],\n];\n\nconst setup = function (width: number, height: number, colorScheme?: Array<number>, mode?: string,\n    faces?: Face[]) {\n    let facesToReveal = faces || [Face.L, Face.B, Face.D]\n    let hintDistance = 7\n    const scene = new THREE.Scene()\n    const camera = new THREE.PerspectiveCamera(70, width / height, 0.1, 1000)\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    const mag = 1.0\n    const alpha = 0.5\n    const enableBorder = true\n    const geo = new THREE.PlaneGeometry(0.89 * mag * 2, 0.89 * mag * 2)\n    const geo_border = new THREE.PlaneGeometry(1.0 * mag * 2, 1.0 * mag * 2)\n    //const geo_border = new THREE.EdgesGeometry(geo_border_0)\n    renderer.setPixelRatio(window.devicePixelRatio)\n\n    //let colorScheme_ = colorScheme || [0xffffff, 0xffff00,  0x00ff00, 0x0000ff, 0xff8800, 0xff0000]\n\n    mode = mode || \"FRU\"\n\n    if (mode === \"FRU\")\n        camera.position.copy(new THREE.Vector3(2.6 / 1.1, 3 / 1.1, 3 / 1.1))\n    else\n        camera.position.copy(new THREE.Vector3(0 / 1.1, 3 / 1.1, 3 / 1.1))\n\n    //camera.position.copy(new THREE.Vector3(2.5, 5, 5))\n    camera.lookAt(new THREE.Vector3(0, 0, 0))\n\n\n    let stickers_tmpl: THREE.Mesh[], stickerwrap_tmpl: THREE.Mesh\n\n    function updateFacesToReveal(faces: Face[]) {\n        facesToReveal = faces\n    }\n    function updateColorScheme(colorScheme: Array<number>) {\n        let colorScheme_ = colorScheme\n        //console.log(\"update color scheme \", colorScheme_)\n        let materials = Array(7).fill(0).map((_, i) => {\n            let mat = new THREE.MeshBasicMaterial({ color: colorScheme_[i], side: THREE.DoubleSide });\n            mat.alphaTest = alpha;\n            return mat\n        })\n\n        stickers_tmpl = materials.map((mat) => {\n            let mesh = new THREE.Mesh(geo, mat)\n            mesh.setRotationFromEuler(axesInfo[0][1])\n            return mesh\n        })\n\n        let materials_border = new THREE.MeshBasicMaterial({ color: 0x000000, side: THREE.FrontSide })\n        stickerwrap_tmpl = (() => {\n            let mesh = new THREE.Mesh(geo_border, materials_border)\n            mesh.setRotationFromEuler(axesInfo[0][1])\n            return mesh\n        })()\n    }\n\n    function drawCube(faces: FaceletCubeT): THREE.Group {\n        const cube = new THREE.Group();\n        for (let i = 0; i < 6; i++) {\n            const cubie = new THREE.Group();\n            const rot = new THREE.Matrix4().makeRotationFromEuler(axesInfo[i][1]);\n            const rot1 = new THREE.Matrix4().makeRotationFromEuler(axesInfo[1][1]);\n            cubie.setRotationFromMatrix(rot.multiply(rot1))\n            for (let z = -1; z <= 1; z++) {\n                for (let x = -1; x <= 1; x++) {\n                    let idx = (z + 1) * 3 + (x + 1)\n\n                    const curr_tmpl = stickers_tmpl[faces[i][idx]]\n                    const sticker = curr_tmpl.clone()\n                    const stickerwrap = stickerwrap_tmpl.clone()\n\n                    const eps = 0.05\n                    sticker.position.copy(new THREE.Vector3(x * 2, 3, z * 2))\n                    stickerwrap.position.copy(new THREE.Vector3(x * 2, 3 - eps, z * 2))\n\n                    if (facesToReveal.indexOf(i) > -1) { // (i === 5 && mode === \"UF\")) {\n                        const stickerhint = curr_tmpl.clone()\n                        stickerhint.position.copy(new THREE.Vector3(x * 2, 3 + hintDistance + 3, z * 2))\n                        cubie.add(stickerhint)\n\n                    }\n                    if (enableBorder)\n                        cubie.add(stickerwrap)\n\n                    cubie.add(sticker)\n                }\n\n            }\n            cube.add(cubie)\n        }\n        cube.scale.set(1 / 3, 1 / 3, 1 / 3)\n        return cube\n    }\n\n    let cubeG = new THREE.Group();\n    scene.add(cubeG)\n    const updateCube = (cube: FaceletCubeT) => {\n        scene.remove(cubeG)\n        cubeG = drawCube(cube)\n        scene.add(cubeG)\n    }\n\n    const renderScene = () => {\n        renderer.render(scene, camera)\n    }\n\n    const updateWidthHeight = (width: number, height: number, clearColor?: string) => {\n        const canvas = renderer.domElement;\n        const needResize = canvas.width !== width || canvas.height !== height;\n        if (needResize) {\n            renderer.setSize(width, height, true);\n            clearColor = clearColor || '#eeeeef';\n            //renderer.setViewport( 0, 0, width * window.devicePixelRatio, height * window.devicePixelRatio);\n            renderer.setClearColor(clearColor) // #70788a') //#5a606e') // '#373B43') // '#eeeeee')\n            camera.aspect = width / height;\n            camera.updateProjectionMatrix();\n        }\n    }\n\n    const updateDrawParam = (distance: number) => {\n        hintDistance = distance\n    }\n\n\n    const cleanup = () => {\n        geo.dispose()\n        //materials.forEach(m => m.dispose())\n    }\n\n    //let defaultColorScheme = [ 0x00ff00, 0x0000ff, 0xff0000,0xff8800,0xffff00, 0xffffff]\n    updateWidthHeight(width, height)\n\n    return {\n        domElement: () => { return renderer.domElement },\n        updateCube,\n        renderScene,\n        updateWidthHeight,\n        cleanup,\n        updateColorScheme,\n        updateFacesToReveal,\n        updateDrawParam\n    }\n}\n\nlet cubeSim = setup(370, 370)\n\nfunction CubeSim(props: Config) {\n    const mount = React.useRef<HTMLDivElement | null>(null)\n    let { width, height } = props\n\n    useEffect(() => {\n        let dom = cubeSim.domElement()\n        let current = mount.current!\n\n        current.appendChild(dom)\n        cubeSim.updateFacesToReveal(props.facesToReveal)\n        cubeSim.updateWidthHeight(width, height, props.bgColor || \"#eeeeef\")\n        cubeSim.updateColorScheme(props.colorScheme)\n\n        if (props.hintDistance)\n            cubeSim.updateDrawParam(props.hintDistance)\n\n        cubeSim.updateCube(props.cube)\n        cubeSim.renderScene()\n\n        return () => {\n            current.removeChild(dom)\n        }\n    })\n\n    return <div\n        ref={mount}\n        style={{ width: props.width, height: props.height }}\n    />;\n}\n\nexport default CubeSim","let rand_int = (r: number) => {\n    return Math.floor(Math.random() * r)\n}\n\nlet rand_incl = (l: number, r: number) => {\n    return rand_int(r - l + 1) + l;\n}\nlet rand_choice = function<T>(arr: T[]) {\n    return arr[rand_int(arr.length)]\n}\n\nlet rand_shuffle = function<T>(arr: T[]) {\n    for (let i = 0, l = arr.length; i < l - 1; i++) {\n        let j = rand_incl(i, l - 1)\n        let tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp\n    }\n    return arr\n}\n\nexport function cartesianProduct<T>(...allEntries: T[][]): T[][] {\n    return allEntries.reduce<T[][]>(\n      (results, entries) =>\n        results\n          .map(result => entries.map(entry => result.concat([entry])))\n          .reduce((subResults, result) => subResults.concat(result), []),\n      [[]]\n    )\n  }\n\nlet getParity = (perm: number[]) => {\n    let visited = Array(perm.length).fill(false)\n    let follow = (i: number, cnt: number) : number => {\n        if (visited[i]) {\n            return 0\n        } else {\n            visited[i] = 1\n            if (visited[perm[i]]) {\n                return cnt;\n            } else\n                return follow(perm[i], cnt + 1)\n        }\n    }\n    let res = 0\n    for (let x of perm) {\n        res += follow(x, 0)\n    }\n    return res\n}\n\nlet arrayEqual = function<T>(arr1: T[], arr2: T[]) {\n    if (arr1.length !== arr2.length) return false;\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) return false;\n    }\n    return true;\n}\n\nlet encodeArr = function(base: number, rarr: number[]) {\n    let int = 0\n    for (let i = rarr.length - 1; i >= 0; i--)\n        int = rarr[i] + int * base\n    return int\n}\n\nexport {rand_int, rand_choice, rand_shuffle, getParity, arrayEqual, encodeArr}","import { MoveT, OriChg, PermChg, StickerT, StickerExtT, CornerCoord, EdgeCoord, cstimer_corners_coord, cstimer_edges_coord } from \"./Defs\";\nimport { u, d, f, b, l, r, m, e, s} from \"./Defs\";\nimport { FaceletT, FaceletCubeT, corners_coord, edges_coord, u_face, f_face, color_map } from \"./Defs\";\nimport { Typ, Face, C, E, T, U, D, F, B, L, R } from \"./Defs\";\nimport { rand_int, rand_shuffle, getParity, rand_choice, arrayEqual } from \"./Math\";\n\nconst C_MOD = 3;\nconst E_MOD = 2;\nconst T_MOD = 1;\n\nexport class CubieCube {\n    cp: number[] = [];\n    co: number[] = [];\n    ep: number[] = [];\n    eo: number[] = [];\n    tp: number[] = [];\n    // The addition of tp is not necessary, but helps us deal with slice moves in Roux during search and simcube.\n\n    Id() : CubieCube {\n        this.set({\n            cp: [0, 1, 2, 3, 4, 5, 6, 7],\n            co: [0, 0, 0, 0, 0, 0, 0, 0],\n            ep: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n            eo: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            tp: [0, 1, 2, 3, 4, 5]\n        })\n        return this\n    }\n    clone() : CubieCube {\n        return new CubieCube({\n            cp: [...this.cp],\n            co: [...this.co],\n            ep: [...this.ep],\n            eo: [...this.eo],\n            tp: [...this.tp]\n        })\n    }\n    constructor(value?: {cp: number[], co: number[], ep: number[], eo: number[], tp?: number[]} | CubieCube) {\n        if (value instanceof CubieCube) {\n            this.set({\n                cp: value.cp, co: value.co, ep: value.ep, eo: value.eo, tp: value.tp\n            })\n        }\n        else if (value) {\n            this.cp = value.cp\n            this.co = value.co\n            this.ep = value.ep\n            this.eo = value.eo\n            this.tp = value.tp || [0, 1, 2, 3, 4, 5] // UD FB LR\n        } else {\n            this.Id()\n        }\n    }\n    set(value: {cp?: number[], co?: number[], ep?: number[], eo?: number[], tp?: number[]} | CubieCube) {\n        this.cp = value.cp || this.cp\n        this.co = value.co || this.co\n        this.ep = value.ep || this.ep\n        this.eo = value.eo || this.eo\n        this.tp = value.tp || this.tp\n    }\n    _apply_partial(o: Array<number>, p: Array<number>, oc: Array<OriChg>, pc: Array<PermChg>, mod: number) {\n        let o_new = [...o];\n        let p_new = [...p];\n        console.assert(oc.length === pc.length)\n\n        for (let i = 0; i < oc.length; i++) {\n            //let [src, dst] = pc[i];\n            let src = pc[i][0], dst = pc[i][1];\n            p_new[dst] = p[src];\n            o_new[dst] = (o[src] + oc[i]) % mod;\n        }\n        return [o_new, p_new]\n    }\n\n    // all side-effect-less\n    apply_one(move: Move) {\n        let [co, cp] = this._apply_partial(this.co, this.cp, move.coc, move.cpc, C_MOD)\n        let [eo, ep] = this._apply_partial(this.eo, this.ep, move.eoc, move.epc, E_MOD)\n        let toc = Array(move.tpc.length).fill(0)\n        let [, tp] = this._apply_partial([0, 0, 0, 0, 0, 0], this.tp, toc, move.tpc, T_MOD)\n        return new CubieCube({ co, cp, eo, ep, tp })\n    }\n\n    apply(move: Move | Array<Move> | MoveSeq | string): CubieCube {\n        if (Array.isArray(move) || move instanceof MoveSeq) {\n            let moves = Array.isArray(move) ? move : move.moves\n            let cube = this.clone()\n            for (let i = 0; i < moves.length; i++) {\n                cube = cube.apply_one(moves[i])\n            }\n            return cube\n        } else if (typeof move === \"string\") {\n            return this.apply(new MoveSeq(move))\n        }\n        else {\n            return this.apply_one(move)\n        }\n    }\n\n    static _rotate_coord(fs: Face[]) {\n        let faces = [...fs] as Face[]\n        let last_face = faces[faces.length - 1];\n        for (let i = faces.length - 1; i > 0; i--) {\n            faces[i] = faces[i - 1];\n        }\n        faces[0] = last_face\n        return faces\n    }\n    static _backward_rotate_coord(fs: Face[]){\n        let faces = [...fs] as Face[]\n        let first_face = faces[0]\n        for (let i = 0; i < faces.length - 1; i++) {\n            faces[i] = faces[i + 1];\n        }\n        faces[faces.length - 1] = first_face\n        return faces\n    }\n\n    _to_facelet_mapping(corners_coord: CornerCoord[], edges_coord: EdgeCoord[]) {\n        let facelet_mapping : [Face[], Face[]][]= []\n\n        for (let i = 0; i < 8; i++) {\n            let pos = corners_coord[i] as Face[]\n            let piece = corners_coord[this.cp[i]] as Face[]\n\n            for (let j = 0; j < this.co[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i < 12; i++) {\n            let pos = edges_coord[i] as Face[]\n            let piece = edges_coord[this.ep[i]] as Face[]\n            for (let j = 0; j < this.eo[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        return facelet_mapping\n    }\n\n    _from_facelet_mapping (fm: [Face[], Face[]][], custom_corners_coord: CornerCoord[], custom_edges_coord: EdgeCoord[]) {\n        let cube = new CubieCube()\n        let idxOf = (a_: CornerCoord[] | EdgeCoord[], target: Face[]) => {\n            let a = a_ as Face[][]\n            for (let i = 0; i < a.length; i++) {\n                if (arrayEqual(a[i], target)) return i;\n            }\n            return -1;\n        }\n        let getOriPerm =(a_: CornerCoord[] | EdgeCoord[], target: Face[]): [number, number]  => {\n            let ori = 0;\n            let perm = idxOf(a_, target)\n\n            while (perm === -1) {\n                ori++;\n                target = CubieCube._backward_rotate_coord(target) as any\n                perm = idxOf(a_, target)\n\n                if (ori > 3) break;\n            }\n            return [ori, perm]\n        }\n\n        for (let coord_pair of fm) {\n            let pos = coord_pair[0], piece = coord_pair[1]\n            if (pos.length === 2) {\n                let newpos = idxOf(custom_edges_coord, pos);\n                let [newOri, newPerm] = getOriPerm(custom_edges_coord, piece);\n                cube.eo[newpos] = newOri;\n                cube.ep[newpos] = newPerm;\n            } else {\n                let newpos = idxOf(custom_corners_coord, pos);\n                let [newOri, newPerm] = getOriPerm(custom_corners_coord, piece);\n                cube.co[newpos] = newOri;\n                cube.cp[newpos] = newPerm;\n            }\n        }\n        return cube\n    }\n\n    to_cstimer_cube() {\n        let facelet_mapping = this._to_facelet_mapping(corners_coord, edges_coord)\n        let cube = this._from_facelet_mapping(facelet_mapping, cstimer_corners_coord, cstimer_edges_coord)\n        return cube\n    }\n\n    is_solveable() {\n        if (this.tp[0] !== 0) {\n            this.apply(new MoveSeq(\"M2\")) // assuming lse\n        }\n        let perm_correct = (getParity(this.cp) + getParity(this.ep)) % 2 === 0\n        let ori_correct = (this.co.reduce((x, y) => x + y, 0) % 3 === 0) && (this.eo.reduce((x, y) => x + y, 0) % 2 === 0)\n        return perm_correct && ori_correct\n    }\n}\n\n\n/* Moves */\n/* We will generate all the moves based on the base moves and rotations, and return them in an array */\nexport class Move {\n    cpc: Array<PermChg> = [];\n    coc: Array<OriChg> = [];\n    epc: Array<PermChg> = [];\n    eoc: Array<OriChg> = [];\n    tpc: Array<PermChg> = [];\n    name: string = \"\";\n    constructor(arg?: Array<Move> | CubieCube | Move | MoveT, name?: string) {\n        if (Array.isArray(arg)) {\n            this.from_moves(arg, name!)\n        } else if (arg instanceof Move){\n            this.cpc = [...arg.cpc]\n            this.coc = [...arg.coc]\n            this.epc = [...arg.epc]\n            this.eoc = [...arg.eoc]\n            this.tpc = [...arg.tpc]\n            this.name = name!\n        } else if (arg instanceof CubieCube) {\n            this.from_cube(arg, name!)\n        } else if (arg) {\n            this.set(arg)\n        }\n    }\n    set(move: Move | MoveT) {\n        this.cpc = move.cpc\n        this.coc = move.coc\n        this.epc = move.epc\n        this.eoc = move.eoc\n        this.tpc = move.tpc\n        this.name = move.name\n    }\n    from_cube(cube: CubieCube, name: string) {\n        let get_change = (p: Array<number>, o: Array<number>, acc_p: Array<PermChg>, acc_o: Array<OriChg>) => {\n            for (let i = 0; i < p.length; i++) {\n                if (i === p[i] && o[i] === 0) {\n                } else {\n                    acc_p.push([p[i], i]);\n                    acc_o.push(o[i]);\n                }\n            }\n        }\n        get_change(cube.cp, cube.co, this.cpc, this.coc);\n        get_change(cube.ep, cube.eo, this.epc, this.eoc);\n        get_change(cube.tp, [0, 0, 0, 0, 0, 0], this.tpc, []);\n        this.name = name\n        return this\n    }\n    from_moves (moves: Move[], name: string) {\n        this.from_cube(new CubieCube().apply(moves), name)\n        return this\n    }\n    clone() {\n        return new Move(this, this.name)\n    }\n    static make_rot_set(move: Move): Array<Move> {\n        return [move,\n            new Move().from_moves([move, move], move.name + \"2\"),\n            new Move().from_moves([move, move, move], move.name + \"'\"),\n        ]\n    }\n\n    static generate_base_moves = () => {\n        let make_rot_set = Move.make_rot_set\n        let us = make_rot_set(new Move(u));\n        let fs = make_rot_set(new Move(f));\n        let rs = make_rot_set(new Move(r));\n        let ls = make_rot_set(new Move(l));\n        let ds = make_rot_set(new Move(d));\n        let bs = make_rot_set(new Move(b));\n        let ms = make_rot_set(new Move(m));\n        let es = make_rot_set(new Move(e));\n        let ss = make_rot_set(new Move(s));\n\n        let rw = new Move([new Move(r), ms[2]], \"r\")\n        let rws = make_rot_set(rw)\n        let lw = new Move([new Move(l), new Move(m)], \"l\")\n        let lws = make_rot_set(lw)\n        let uw = new Move([new Move(u), new Move(e)], \"u\")\n        let uws = make_rot_set(uw)\n\n        let x = new Move([new Move(r), ls[2], ms[2]], \"x\")\n        let xs = make_rot_set(x)\n        let y = new Move([new Move(u), new Move(e), ds[2]], \"y\")\n        let ys = make_rot_set(y)\n        let z = new Move([x, y, x, x, x], \"z\")\n        let zs = make_rot_set(z)\n\n        let id = new Move(new CubieCube(), \"id\")\n        let moves = [\n            id,\n            us, fs, rs, ls, ds, bs, ms, es, ss,\n            xs, ys, zs,\n            rws, lws, uws\n        ].flat()\n        let moves_dict: { [key: string]: Move } = Object.create({})\n        moves.forEach(m => moves_dict[m.name] = m)\n        return moves_dict\n    }\n    static all: {[key: string]: Move} = Move.generate_base_moves();\n\n    inv(): Move {\n        let name: string\n        switch (this.name[this.name.length - 1]) {\n            case \"'\": name = this.name.slice(0, this.name.length - 1); break\n            case \"2\": name = this.name; break\n            default: name = this.name + \"'\"\n        }\n        return Move.all[name]\n    }\n\n    toString() {\n        return this.name\n    }\n}\n\n\nexport class MoveSeq {\n    moves: Move[] = [];\n\n    constructor(moves: Move[] | string) {\n        if (typeof moves === \"string\") {\n            this.parse(moves);\n        } else {\n            this.moves = moves\n        }\n    }\n\n    static _combine(move1: Move, move2: Move) : MoveSeq {\n        const getCnt = (name : string) => {\n            if (name.length === 1) return 1\n            return name[1] === \"2\" ? 2 : 3\n        }\n        const getStr = (cnt : number) => {\n            return (cnt === 1) ? \"\" : (cnt === 2 ? \"2\" : \"'\")\n        }\n        if (move1.name[0] === move2.name[0]) {\n            let cnt = (getCnt(move1.name) + getCnt(move2.name)) % 4\n            if (cnt === 0) return new MoveSeq([])\n            else return new MoveSeq([ Move.all[move1.name[0] + getStr(cnt)] ])\n        } else {\n            return new MoveSeq([move1, move2])\n        }\n    }\n\n    parse(str: string) {\n        let tokens = []\n        let token = \"\"\n        for (let i = 0; i < str.length; i++) {\n            let ch = str[i]\n            if (ch === '2' || ch === '\\'') {\n                if (token.length === 1) {\n                    token += str[i];\n                    tokens.push(token)\n                    token = \"\"\n                }\n            } else if (ch === ' ') {\n                if (token.length > 0) {\n                    tokens.push(token); token = \"\";\n                }\n            } else {\n                const ord = ch.charCodeAt(0)\n                if ( (65 <= ord && ord < 65 + 26) || (97 <= ord && ord < 97 + 26)) {\n                    if (token.length > 0) {\n                        tokens.push(token)\n                        token = \"\"\n                    }\n                    token += str[i]\n                }\n            }\n        }\n        if (token.length > 0) tokens.push(token);\n\n        this.moves = []\n        for (let token of tokens) {\n            let move = Move.all[token]\n            if (move) {\n                this.moves.push(move)\n            } else {\n                return this\n                //throw Error(\"Invalid move sequence \" + move)\n            }\n        }\n        return this\n    }\n\n    collapse() : MoveSeq {\n        let newMoves : Move[] = []\n        let moves = this.moves\n        while (moves.length > 0) {\n            const nextMove = moves.shift()!\n            if (newMoves.length === 0) {\n                newMoves.push(nextMove)\n            } else {\n                const move = newMoves.pop()!\n                const combined = MoveSeq._combine(move, nextMove)\n                for (let m of combined.moves)\n                    newMoves.push(m)\n            }\n        }\n        return new MoveSeq(newMoves);\n    }\n\n    inv() {\n        let moves: Move[] = this.moves.slice(0).reverse().map(x => x.inv()).flat()\n        return new MoveSeq(moves)\n    }\n\n    static add_auf(moves: Array<Move>, auf_moves?: Array<Move | MoveSeq>) {\n        auf_moves = auf_moves || [ Move.all[\"id\"], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n        let auf_move = rand_choice(auf_moves)\n        if (auf_move instanceof MoveSeq) {\n            moves.concat(auf_move.moves)\n        } else {\n            moves.push(auf_move)\n        }\n    }\n\n    toString(useMetric?: string) {\n        return this.moves.map(m => m.toString()).join(\" \") + \" \" + (useMetric ? \"(\" + this.moves.length + \")\" : \"\")\n    }\n}\n\nexport class SeqEvaluator {\n    static moveCost_gen() {\n    let pairs : [string, number][]= [\n        [\"U\", 1], [\"U'\", 1], [\"U2\", 1.4],\n        [\"R\", 1], [\"R'\", 1], [\"R2\", 1.4],\n        [\"r\", 1], [\"r'\", 1], [\"r2\", 1.5],\n        [\"L\", 1], [\"L'\", 1], [\"L2\", 1.4],\n        [\"F\", 1.4], [\"F'\", 1.4], [\"F2\", 1.8],\n        [\"B\", 1.6], [\"B'\", 1.6], [\"B2\", 2.2],\n        [\"D\", 1.4], [\"D'\", 1.4], [\"D2\", 1.7],\n        [\"M\", 1.5], [\"M'\", 1.2], [\"M2\", 1.8],\n        [\"S\", 1.7], [\"S'\", 1.7], [\"S2\", 3.0],\n        [\"E\", 1.5], [\"E'\", 1.5], [\"E2\", 2.4],\n    ]\n    let costMap = new Map(pairs)\n    return costMap\n    }\n    static moveCost = SeqEvaluator.moveCost_gen()\n\n    static evaluate(moves : MoveSeq) {\n        let sum = 0\n        for (let m of moves.moves) {\n            const value = (SeqEvaluator.moveCost.get(m.name)) || 1.4\n            sum += value\n        }\n        return sum\n    }\n}\n\n/* Faces */\nlet FaceletCube = function () {\n    let mult_move = (face: FaceletT, move: Move): FaceletT => {\n        let face_new: FaceletT = [...face]\n        let mod_for_typ = (typ: Typ) => {\n            switch (typ) {\n                case C: return 3;\n                case E: return 2;\n                case T: return 1\n            }\n        }\n        let work = (p: PermChg, o: number, typ: Typ) => {\n            let mod = mod_for_typ(typ)\n            let [p1, p2] = p\n            for (let i = 0; i < face.length; i++) {\n                let [p_curr, o_curr, typ_curr] = face[i];\n                if (typ_curr === typ && p_curr === p1) {\n                    face_new[i] = [p2, (o_curr + o) % mod, typ]\n                }\n            }\n        }\n        for (let i = 0; i < move.cpc.length; i++) {\n            work(move.cpc[i], move.coc[i], C)\n        }\n        for (let i = 0; i < move.epc.length; i++) {\n            work(move.epc[i], move.eoc[i], E)\n        }\n        for (let i = 0; i < move.tpc.length; i++) {\n            work(move.tpc[i], 0, T)\n        }\n        return face_new\n    }\n    let color_of_c = (p: number, o1: number, o2: number) =>\n    corners_coord[p][(3 - o1 + o2) % 3];\n    let color_of_e = (p: number, o1: number, o2: number) =>\n        edges_coord[p][(2 - o1 + o2) % 2];\n    let color_of_t = (p: number) => [U, D, F, B, L, R][p]\n\n    let color_of_sticker = (cube: CubieCube, sticker: StickerT) => {\n        let [p, o, typ] = sticker\n        if (typ === C) {\n            return color_of_c(cube.cp[p], cube.co[p], o)\n        } else if (typ === E) {\n            return color_of_e(cube.ep[p], cube.eo[p], o)\n        } else if (typ === T) {\n            return color_of_t(cube.tp[p])\n        } else {\n            throw Error(\"unidentified type \" + typ)\n        }\n    }\n\n    let from_cubie_partial = (cube: CubieCube, facelet: FaceletT) => {\n        return facelet.map(s => color_of_sticker(cube, s))\n    }\n    let from_cubie_partial_masked = (cube: CubieCube, facelet: FaceletT, mask: Mask) => {\n        return facelet.map(([p, o, typ]) => {\n            if (typ === C) {\n                if (mask.cp[cube.cp[p]] === 1)\n                    return color_of_c(cube.cp[p], cube.co[p], o)\n                else\n                    return Face.X\n            } else if (typ === E) {\n                if (mask.ep[cube.ep[p]] === 1)\n                    return color_of_e(cube.ep[p], cube.eo[p], o)\n                else\n                    return Face.X\n            } else if (typ === T) {\n                if (mask.tp && mask.tp[cube.tp[p]] === 0)\n                    return Face.X\n                else\n                    return color_of_t(cube.tp[p])\n            } else {\n                throw Error(\"unidentified type \" + typ)\n            }\n        })\n    }\n\n    let moves = Move.all\n    let generate_base_facelets = () => {\n        let d_face = mult_move(f_face, moves[\"x'\"])\n        let l_face = mult_move(f_face, moves[\"y\"])\n        let r_face = mult_move(f_face, moves[\"y'\"])\n        let b_face = mult_move(f_face, moves[\"y2\"])\n        return {\n            d_face, l_face, r_face, b_face\n        }\n    }\n    let { d_face, l_face, r_face, b_face } = generate_base_facelets()\n\n    let from_cubie = (cube: CubieCube, mask?: Mask): FaceletCubeT => {\n        //console.log(\"converting from cube\", cube)\n        let faces = [u_face, d_face, f_face, b_face, l_face, r_face]\n        if (mask)\n            return faces.map((facelet) => from_cubie_partial_masked(cube, facelet, mask))\n        else\n            return faces.map((facelet) => from_cubie_partial(cube, facelet))\n    }\n\n    let to_unfolded_cube_str = (faceletCube: FaceletCubeT): String => {\n        let face_count = [0, 0, 0, 0, 0, 0];\n        let str_face_map: { [key: string]: Face } = {\n            \"U\": U, \"D\": D, \"F\": F, \"B\": B, \"L\": L, \"R\": R\n        }\n        let face_str_map = \"UDFBLR\"\n        let color_cube = \"\"\n        for (let i = 0; i < color_map.length; i++) {\n            let face_char = color_map[i];\n            if (str_face_map.hasOwnProperty(face_char)) {\n                let face: number = str_face_map[face_char] as number;\n                let count = face_count[face];\n                let color = faceletCube[face][count]\n                color_cube += face_str_map[color]\n                face_count[face] += 1;\n            } else {\n                color_cube += color_map[i];\n            }\n        }\n        return color_cube;\n    }\n\n    let to_cubejs_str = (faceletCube: FaceletCubeT) : String => {\n        let face_order = [U, R, F, D, L, B];\n        let face_str_map = \"UDFBLR\";\n        let s = \"\";\n        for (let face of face_order) {\n            for (let i = 0 ; i < 9; i++) {\n                s += face_str_map[faceletCube[face][i]]\n            }\n        }\n        return s\n    }\n\n    return {\n        from_cubie,\n        to_unfolded_cube_str,\n        to_cubejs_str,\n        color_of_sticker,\n        faces: {\n            u_face, d_face, l_face, r_face, f_face, b_face\n        }\n    }\n}()\n\ntype Mask = {\n    co?: number[],\n    eo?: number[],\n    tp?: number[],\n    cp: number[],\n    ep: number[],\n}\nfunction mask_copy (m: Mask) {\n    return {\n        co: m.co && [...m.co],\n        eo: m.eo && [...m.eo],\n        tp: m.tp && [...m.tp],\n        cp: [...m.cp],\n        ep: [...m.ep]\n    }\n}\n\nconst lse_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n}\n\nconst lse_4c_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1],\n    eo: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n}\n\nconst solved_mask : Mask = {\n    cp: [1, 1, 1, 1,  1, 1, 1, 1],\n    ep:[1, 1, 1, 1,  1, 1, 1, 1, 1, 1, 1, 1],\n}\nconst empty_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\nconst dl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]\n}\nconst db_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]\n}\nconst fs_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]\n}\nconst fs_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0]\n}\nconst fb_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst zhouheng_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst fbdr_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst sb_mask : Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst cmll_mask : Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nlet CubeUtil = (() => {\n    let is_cube_solved = (cube: CubieCube) => {\n        let id = new CubieCube()\n        return arrayEqual(cube.co, id.co) &&\n               arrayEqual(cube.eo, id.eo) &&\n               arrayEqual(cube.cp, id.cp) &&\n               arrayEqual(cube.ep, id.ep)\n    }\n\n    function ext(stickers: StickerT[], f: Face) : StickerExtT[] {\n        return stickers.map(x => {\n            let [a, b, c] = x;\n            return [a,b,c,f]\n        })\n    }\n\n    let { u_face, d_face, l_face, r_face, f_face, b_face } = FaceletCube.faces\n    let stickers = [ ...ext(u_face, U), ...ext(d_face, D),\n        ...ext(l_face, L), ...ext(r_face, R), ...ext(f_face,F),  ...ext(b_face, B)]\n\n    let find_pairs = function() {\n        // enumerate each sticker\n        let edge_stickers = stickers.filter(s => s[2] === Typ.E)\n        let corner_stickers = stickers.filter(s => s[2] === Typ.C)\n\n        let ep_stickers : StickerExtT[][] = Array(12).fill(0).map(_ => Array(0))\n        edge_stickers.map(s => ep_stickers[s[0]].push(s) )\n\n        let cp_stickers : StickerExtT[][] = Array(8).fill(0).map(_ => Array(0))\n        corner_stickers.map(s => cp_stickers[s[0]].push(s))\n\n        const epcp_pairs : [number, number][] = []\n        for (let e = 0; e < 12; e++) {\n            for (let c = 0; c < 8; c++) {\n                let efs = ep_stickers[e]\n                let cfs = cp_stickers[c]\n\n                let match = 0;\n                efs.forEach( (e) => {\n                    cfs.forEach( (c) => { if (e[3] === c[3]) match++ })\n                })\n                if (match === 2) {\n                    epcp_pairs.push( [e, c] )\n                }\n            }\n        }\n\n\n        let get_color = (cube: CubieCube, s: StickerExtT) => {\n            return FaceletCube.color_of_sticker(cube, [s[0], s[1], s[2]] )\n        }\n        let func = (cube: CubieCube) => {\n            // now we process the cube\n            let connected_pairs : [number, number][]= []\n            //console.log(\"All neighboring pairs \", epcp_pairs)\n            for (let [ep, cp] of epcp_pairs) {\n                let efs = ep_stickers[ep]\n                let cfs = cp_stickers[cp]\n                let cnt = 0;\n                efs.forEach( (e) => {\n                    const c = cfs.filter( (c) => e[3] === c[3])[0]\n                    if (get_color(cube, e) === get_color(cube, c)) cnt++;\n                })\n                if (cnt === 2) {\n                    connected_pairs.push([ep, cp])\n                }\n            }\n            return connected_pairs\n        }\n        return func\n    }()\n\n    let is_mask_solved = (cube: CubieCube, { co, eo, cp, ep }: Mask, premove: (Move | Move[])[]) => {\n        //let moves = [ [], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"] ]\n        co = co || cp\n        eo = eo || ep\n        for (let move of premove) {\n            let cube1 = cube.apply(move)\n            let solved = true\n            for (let i = 0; i < 8 && solved; i++) {\n                if ((co[i] && cube1.co[i] !== 0)\n                    || (cp[i] && cube1.cp[i] !== i)) {\n                    solved = false;\n                }\n            }\n            for (let i = 0; i < 12 && solved; i++) {\n                if ((eo[i] && cube1.eo[i] !== 0)\n                    || (ep[i] && cube1.ep[i] !== i)) {\n                    solved = false;\n                }\n            }\n            if (solved) return true;\n        }\n        return false;\n    }\n\n    const u_premove = [[], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n    const m2_premove = [[], Move.all[\"M2\"]]\n\n    let is_cmll_solved = (cube: CubieCube) => {\n        return is_mask_solved(cube, lse_mask, u_premove)\n    }\n\n    let get_random_with_mask = ({ co, eo, cp, ep }: Mask): CubieCube => {\n        co = co || cp\n        eo = eo || ep\n        // get_random -- figure out which masks are 0, and assign random to these\n        let random_ori = (ori_mask: number[], typ: Typ) => {\n            let ori = Array(ori_mask.length).fill(0)\n            let mod = (typ === C) ? 3 : 2\n            let sum: number\n            do {\n                sum = 0\n                for (let i in ori_mask) {\n                    if (ori_mask[i] === 0) {\n                        ori[i] = rand_int(mod)\n                        sum += ori[i]\n                    }\n                }\n            } while (sum % mod > 0)\n            return ori\n        }\n        let random_perm = (perm_mask: number[]) => {\n            let perm: number[] = Array(perm_mask.length).fill(0)\n            let undecided: number[] = []\n            for (let i = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    undecided.push(i)\n                } else {\n                    perm[i] = i\n                }\n            }\n            rand_shuffle(undecided)\n            for (let i = 0, cnt = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    perm[i] = undecided[cnt]\n                    cnt += 1\n                }\n            }\n            return perm\n        }\n        let cp_rand, ep_rand, par\n        do {\n            [cp_rand, ep_rand] = [random_perm(cp), random_perm(ep)]\n            par = (getParity(cp_rand) + getParity(ep_rand)) & 1\n        } while (par > 0)\n\n        return new CubieCube({\n            co: random_ori(co, C),\n            cp: cp_rand,\n            eo: random_ori(eo, E),\n            ep: ep_rand,\n        })\n    }\n\n    let get_random_lse = (): CubieCube => {\n        let cube = get_random_with_mask(lse_mask)\n        return cube.apply(rand_choice(m2_premove))\n    }\n\n    const ori_to_color_scheme = (() => {\n        // UDFBLR\n        // specify the colors for uf\n        // how to do this?\n        const arr: [string, number][] = [\n            [\"G\", 0x00ff00],\n            [\"B\", 0x0000ff],\n            [\"R\", 0xff0000],\n            [\"O\", 0xff8800],\n            [\"Y\", 0xffff00],\n            [\"W\", 0xffffff],\n            [\"X\", 0xcccccc]\n        ]\n        const colorMap = new Map<string, number>(arr)\n        // UDFBLR from UF\n        // INFERR UFR from UF?\n        const valid_schemes = [\n            \"WYGBOR\",\n            \"WYBGRO\",\n            \"WYROGB\",\n            \"WYORBG\",\n            \"YWGBRO\",\n            \"YEBGOR\",\n            \"YWROBG\",\n            \"YWORGB\",\n\n            \"GBWYRO\",\n            \"GBYWOR\",\n            \"GBROYW\",\n            \"GBORWY\",\n            \"BGWYOR\",\n            \"BGYWRO\",\n            \"BGROWY\",\n            \"BGORYW\",\n\n            \"ORWYGB\",\n            \"ORYWBG\",\n            \"ORGBYW\",\n            \"ORBGWY\",\n            \"ROWYBG\",\n            \"ROYWGB\",\n            \"ROGBWY\",\n            \"ROBGYW\",\n        ]\n        const valid_scheme_mapper: { [key: string]: number[] } = Object.create({})\n        valid_schemes.forEach(s => {\n            let arr = s.split('').map(ch => colorMap.get(ch)!)\n            arr.push(colorMap.get(\"X\")!)\n            valid_scheme_mapper[s[0] + s[2]] = arr\n        })\n\n        const mapper = (sel: string) => {\n            return valid_scheme_mapper[sel]\n        }\n\n        return mapper\n    })()\n\n    return {\n        is_cmll_solved,\n        get_random_lse,\n        get_random_with_mask,\n        ori_to_color_scheme,\n        is_cube_solved,\n        find_pairs,\n        stickers\n    }\n})()\n\nlet Mask = {\n    lse_mask, fs_back_mask, fs_front_mask, fbdr_mask, fb_mask, sb_mask, cmll_mask, ss_front_mask, ss_back_mask,\n    empty_mask, dl_solved_mask, db_solved_mask, solved_mask, zhouheng_mask, lse_4c_mask,\n    copy: mask_copy\n}\n\nexport { FaceletCube, CubeUtil, Mask }\n","export type Selector = {\n    names: string[],\n    flags: number[],\n    kind: string,\n    label?: string\n}\n\nfunction getActiveNames(s : Selector) {\n    let ans = []\n    for (let i = 0; i < s.flags.length; i++) {\n        if (s.flags[i] === 1) {\n            ans.push(s.names[i])\n        }\n    }\n    return ans\n}\n\nfunction getActiveName(s : Selector) {\n    for (let i = 0; i < s.flags.length; i++) {\n        if (s.flags[i] === 1) {\n            return (s.names[i])\n        }\n    }\n    return \"\"\n}\n\nexport {getActiveNames, getActiveName}\n","import React from 'react'\n\nimport {\n    FormControlLabel, FormGroup, Button, makeStyles, Box,\n    FormControl, FormLabel, RadioGroup, Checkbox, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport Radio from '@material-ui/core/Radio';\n\nimport { AppState, Config, Action } from '../Types';\nimport { Selector } from '../lib/Selector';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        flexGrow: 1,\n    },\n    select: {\n      color: theme.palette.text.primary\n    },\n    selectLabel: {\n      color: theme.palette.text.secondary\n    }\n\n}))\n\nfunction SingleSelect(props: {state: AppState, dispatch: React.Dispatch<Action>,\n    select: (c: Config) => Selector, label?: string}) {\n    let { state, dispatch, select } = props\n    let { config } = state\n    let sel = select(config)\n    let classes = useStyles()\n\n    const handleChange = (evt: { target: { value: string; }; }) => {\n      let { names } = sel\n      let n = names.length\n      let new_flags = Array(n).fill(0)\n\n      for (let i = 0; i < names.length; i++) {\n        if (names[i] === evt.target.value) {\n          new_flags[i] = 1\n        }\n      }\n      let new_config = JSON.parse(JSON.stringify(config))\n      select(new_config).flags = new_flags\n      if (new_config.fbPairSolvedSelector.flags[1] === 1) {\n        new_config.fbdrSelector.flags = [1, 0, 0]\n      }\n      dispatch( { type: \"config\", content: new_config })\n    }\n\n    let radioValue = function() {\n      let { names, flags } = sel\n      for (let i = 0; i < flags.length; i++) {\n        if (flags[i] === 1) return names[i]\n      }\n      return \"\"\n    }()\n\n    let label = sel.label || props.label || \"\"\n    return (\n      <FormControl component=\"fieldset\" className={classes.select}>\n      <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n      <RadioGroup aria-label=\"position\" name=\"position\" value={radioValue} onChange={handleChange} row>\n        {\n          sel.names.map(name => (\n            <FormControlLabel\n              key={name}\n              value={name}\n              control={<Radio color=\"primary\" />}\n              label={name}\n              labelPlacement=\"end\"\n            />\n          ))\n        }\n      </RadioGroup>\n    </FormControl>)\n  }\n\n\n\n  type MultiOptions = {\n    label?: string, noDialog?: boolean,\n    manipulators?: {name: string, enableIdx: number[]}[]\n  }\n  function MultiSelect(props: {state: AppState, dispatch: React.Dispatch<Action>, select: (c: Config) => Selector, options?: MultiOptions }) {\n    let { state, dispatch, select, options } = props\n    options = options || {}\n    let { config } = state\n\n    let classes = useStyles()\n    let sel = select(config)\n    const handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n      let { names, flags } = sel\n      let new_flags = [...flags]\n\n      for (let i = 0; i < names.length; i++) {\n        if (names[i] === evt.target.value) {\n          new_flags[i] = (evt.target.checked)? 1 : 0\n        }\n      }\n      let new_config = JSON.parse(JSON.stringify(config))\n      select(new_config).flags = new_flags\n      dispatch( { type: \"config\", content: new_config })\n    }\n\n    let makeBox = (name: string, checked: boolean) => {\n      return (\n      <FormControlLabel\n          control={\n          <Checkbox color=\"primary\" checked={checked} onChange={handleChange} />\n          }\n          label={name}\n          key={name}\n          value={name}\n      />)\n    }\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    }\n    const [manipChecked, setManipChecked] = React.useState< { [ name: string ]: boolean } >({})\n    let label = sel.label || options.label || \"\"\n    let makeManipulator = (manip: {name: string, enableIdx: number[]}) => {\n      let {name, enableIdx} = manip\n      let handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n        setManipChecked( {...manipChecked, [name] : evt.target.checked } )\n        let fillValue = (evt.target.checked);\n        let { flags } = sel\n        let new_flags = [...flags]\n        for (let i of enableIdx) {\n          new_flags[i] = fillValue ? 1 : 0;\n        }\n        let new_config = JSON.parse(JSON.stringify(config))\n        select(new_config).flags = new_flags;\n        dispatch( { type: \"config\", content: new_config } )\n      }\n      return (\n        <FormControlLabel\n        control={\n        <Checkbox color=\"primary\" checked={manipChecked[name]} onChange={handleChange} />\n        }\n        label={name}\n        key={name}\n        value={name}\n        />)\n    }\n    let manipulator_row = options.manipulators ?\n      (<FormGroup row>\n      {options.manipulators.map(x => makeManipulator(x)) }\n      </FormGroup>) : null;\n    const content = (\n      <React.Fragment>\n        {manipulator_row}\n        <FormGroup row>\n        {sel.names.map( (name, i) => makeBox(name, !!sel.flags[i]))}\n        </FormGroup>\n      </React.Fragment>\n    )\n\n    if (options.noDialog)\n    return (\n      <FormControl component=\"fieldset\" className={classes.select}>\n        <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n        {content}\n      </FormControl>\n    )\n\n    return (\n    <div>\n      <FormLabel component=\"legend\">{label}</FormLabel>\n      <Box height={8}/>\n      <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n      <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n        SET\n      </Button>\n      <Box height={8}/>\n      <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n        <DialogTitle> {label} </DialogTitle>\n        <DialogContent>\n          {content}\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Ok\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n    )\n  }\n\n  export { SingleSelect, MultiSelect }","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Divider, makeStyles, useTheme, FormControl, FormLabel, Typography, Button} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport { FaceletCube, CubeUtil, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState, Action, Config } from \"../Types\";\nimport clsx from 'clsx';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\nimport { MultiSelect, SingleSelect } from './Select';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 300,\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        fontSize: 18,\n        borderBottom: \"2px solid\",\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    button: {\n      width: \"100%\"\n    },\n\n  }))\n\n\n\nfunction _getMask(name: string) {\n  switch (name) {\n    case \"Show\": return Mask.solved_mask;\n    case \"Hide\": return Mask.empty_mask;\n    case \"Hide LSE\": return Mask.lse_mask;\n    default: return Mask.solved_mask\n  }\n}\nfunction CmllTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n    const canvasPaper = clsx(classes.canvasPaper, classes.fixedHeight);\n    let facelet = FaceletCube.from_cubie(cube,\n      _getMask(getActiveName( state.config.cmllCubeMaskSelector) || \"Show\"))\n\n    const theme = useTheme()\n    const simBackground = getActiveName(state.config.theme) === \"bright\" ? \"#eeeeef\" : theme.palette.background.paper\n\n    const cmll = (c: Config) => c.cmllSelector;\n    const cmllcubemask = (c : Config) => c.cmllCubeMaskSelector;\n    const cmllauf = (c: Config) => c.cmllAufSelector;\n    const trigger = (c: Config) => c.triggerSelector;\n    const ori = (c: Config) => c.orientationSelector;\n\n    const panel = (\n      <Fragment>\n        <SingleSelect {...{state, dispatch, select: cmllcubemask, label: \"Virtual Cube\"}} />\n        <MultiSelect {...{state, dispatch, select: cmll, options: { label: \"CMLL Case\", noDialog: true} }} />\n        <MultiSelect {...{state, dispatch, select: cmllauf, options: { label: \"CMLL Auf\", noDialog: true} }} />\n        <MultiSelect {...{state, dispatch, select: trigger, options: { label: \"SB Last Pair Trigger (Uncheck all for pure CMLL)\", noDialog: true} } } />\n        <MultiSelect {...{state, dispatch, select: ori}} />\n      </Fragment>\n    )\n\n    React.useEffect( () =>  {\n      setReveal(false)\n    }, [ state ])\n    const [reveal, setReveal] = React.useState(false)\n    const handleClick = () => {\n      setReveal(true)\n    }\n    const handleNext = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n    }\n\n\n    let alg = \"\"\n    let setup = \"\"\n    if (state.case.desc.length === 4) {\n      setup = state.case.desc[3].alg\n    }\n    if (reveal && state.case.desc.length >= 3) {\n      const moves = new MoveSeq(state.case.desc[1].alg +state.case.desc[2].alg)\n      let moves_c = moves.collapse()\n      if (moves_c.moves.length > 0) {\n        if (moves_c.moves[0].name[0] === \"U\") {\n          alg += \"(\" + moves_c.moves[0].name + \") \";\n          moves_c.moves = moves_c.moves.slice(1)\n        }\n        alg += moves_c.toString()\n      }\n    }\n    return (\n    <Box className={classes.container}>\n    <Grid container >\n      <Grid item xs={12} >\n            <Paper className={canvasPaper}>\n              <Box margin=\"auto\">\n              <CubeSim\n                width={300}\n                height={300}\n                cube={facelet}\n                colorScheme={CubeUtil.ori_to_color_scheme(props.state.cube.ori)}\n                bgColor={simBackground}\n                facesToReveal={[Face.L]}\n              />\n              </Box>\n            </Paper>\n      </Grid>\n    </Grid>\n\n    <Box height = {5}/>\n\n    <Paper className={classes.paper} elevation={2}>\n    <Grid container spacing={2}>\n\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Scramble\n              </Box> </Box>\n      </Box>\n      </Grid>\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { setup }\n          </Typography>\n        </Box>\n\n      </Grid>\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Case\n              </Box> </Box>\n      </Box>\n      </Grid>\n      { (!reveal) ?\n      <Grid item xs={3}>\n      <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n      size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClick}> { /* className={classes.margin}>  */ }\n          Show\n      </Button>\n      </Grid>\n      :\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { alg }\n          </Typography>\n        </Box>\n\n      </Grid>\n      }\n    </Grid>\n    <Box height={30}/>\n\n    <Grid container spacing={0}>\n        <Grid item xs={4} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n          size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\n              Next\n          </Button>\n        </Grid>\n    </Grid>\n    </Paper>\n\n\n    <Box height={20}/>\n      <Divider/>\n    <Box height={20}/>\n    { panel }\n\n    <Box height={20}/>\n      <Divider/>\n    <Box height={15}/>\n\n    <Box>\n    <FormControl component=\"fieldset\" className={classes.prompt}>\n      <FormLabel component=\"legend\">\n         Usage: Press space for next case. Enter to redo.\n      </FormLabel>\n      </FormControl>\n    </Box>\n\n    </Box>\n    );\n}\n\nexport default CmllTrainerView\n\n\n","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, makeStyles, Divider, Typography, useTheme } from '@material-ui/core';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nimport { FaceletCube, CubeUtil, Mask, Move, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState,  Action, Config, FavCase} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport clsx from 'clsx';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\n\nimport { SingleSelect, MultiSelect } from './Select';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default,\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    sourceIcon : {\n        color: theme.palette.text.hint,\n        fontSize: 18,\n        padding: 0\n    },\n    sourceIconWrap : {\n        height: 32,\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n  }))\n\n\nfunction getMask(state: AppState) : Mask {\n    if (state.mode === \"fbdr\") {\n      const fbOnly = (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\")\n      //   getActiveName(state.config.fbOnlySelector) === \"FB Last Pair\"\n      return fbOnly ? Mask.fb_mask : Mask.fbdr_mask\n    }\n    else if (state.mode === \"ss\") {\n      if (state.case.desc.length === 0) return Mask.sb_mask\n      if (state.case.desc[0].kind === \"ss-front\")\n        return Mask.ss_front_mask\n      else\n        return Mask.ss_back_mask\n    }\n    else if (state.mode === \"fb\") {\n      if (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\") {\n        return Mask.fb_mask\n      }\n      else if (state.case.desc[0].kind === \"fbdr\") {\n        return Mask.fbdr_mask\n      } else {\n        return Mask.solved_mask\n      }\n    }\n    else if (state.mode === \"4c\" || state.mode === \"eopair\") {\n      return Mask.solved_mask\n    }\n    else return Mask.sb_mask\n}\n\nfunction BlockTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n\n    let facelet = FaceletCube.from_cubie(cube, getMask(state))\n\n    let desc = state.case.desc[0] || { alg: \"\", setup:\"Press next for new case\"}\n    let { alg, setup, alt_algs } = desc\n\n    let spaceButtonText = (state.name === \"hiding\") ? \"Reveal\" : \"Next\"\n    let algs = (alt_algs !== undefined) ? ( [alg, ...alt_algs] ) : [alg]\n\n    let minMove = algs.map(a => new MoveSeq(a).moves.length).reduce( (a, b) => Math.min(a, b), 100 )\n    let algText = (state.name === \"hiding\") ? `(Best = ${minMove} STM)`\n      : (state.name === \"revealed\" && alg.length > 0) ? algs.join(\"\\n\") : \"\"\n\n    const handleSpace = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n      if (spaceButtonText === \"Next\") {\n        setFav(false)\n      }\n    }\n\n\n    const theme = useTheme()\n    const simBackground = getActiveName(state.config.theme) === \"bright\" ? \"#eeeeef\" : theme.palette.background.paper\n\n    // source\n\n\n    const [favSelected, setFav] = React.useState(false)\n    const handleFav = () => {\n      if (state.case.desc.length === 0) return\n      const case_ : FavCase = {\n        mode: state.mode,\n        solver: state.case.desc[0].kind,\n        setup: state.case.desc[0].setup!\n      }\n      if (!favSelected){\n        setFav(true)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"add\"})\n      } else {\n        setFav(false)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"remove\" })\n      }\n    }\n\n    return (\n    <Box className={classes.container}>\n\n      <Grid container>\n        <Grid item xs={12}>\n        <Paper className={ clsx(classes.canvasPaper, classes.fixedHeight) }>\n          <Box margin=\"auto\">\n            <CubeSim\n              width={250}\n              height={250}\n              cube={facelet}\n              colorScheme={CubeUtil.ori_to_color_scheme(props.state.cube.ori)}\n              hintDistance={ (state.mode === \"4c\" || state.mode === \"eopair\") ? 1.1 : 7 }\n              bgColor={simBackground}\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            />\n          </Box>\n        </Paper>\n        </Grid>\n      </Grid>\n\n      <Paper className={classes.paper} elevation={2}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6} className={classes.scrambleColumn} >\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12} className={classes.infoColumn} >\n            <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Scramble\n              </Box> </Box>\n            <Box flexGrow={0.2}></Box>\n            <Box >\n            {/* <Checkbox  className={classes.sourceIconWrap}\n              icon={<CreateIcon />}\n              checked={sourceSelected}\n              onChange = {handleSource}\n              checkedIcon={<CreateIcon color=\"primary\" />}\n              name=\"source\" /> */}\n\n            <Checkbox  className={classes.sourceIconWrap}\n              icon={<FavoriteIcon />}\n              checked={favSelected}\n              onChange = {handleFav}\n              checkedIcon={<FavoriteIcon color=\"primary\" />}\n              name=\"fav\" />\n\n            </Box>\n\n            </Box>\n\n          </Grid>\n\n          <Grid item xs={12}  >\n            <Box paddingBottom={1} lineHeight={1} className={classes.textColumn}>\n            <Typography style={{whiteSpace: 'pre-line', fontSize: 20, fontWeight: 400}}>\n                {setup}\n              </Typography>\n\n            </Box>\n          </Grid>\n\n\n        </Grid>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12}className={classes.infoColumn} >\n            <Box display=\"flex\" >\n                <Box className={classes.title} >\n                  Solution\n                </Box>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} className={classes.textColumn} >\n            <Box paddingBottom={2} lineHeight={1}>\n              <Typography style={{whiteSpace: 'pre-line', fontSize: 16}} >\n                {algText}\n              </Typography>\n            </Box>\n\n          </Grid>\n        </Grid>\n        </Grid>\n\n      </Grid>\n\n      <Grid container spacing={0}>\n        <Grid item xs={4} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button} size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleSpace}> { /* className={classes.margin}>  */ }\n              {spaceButtonText}\n          </Button>\n        </Grid>\n      </Grid>\n\n      </Paper>\n\n      <Box height={20}/>\n      <Divider/>\n      <Box height={20}/>\n\n      <ConfigPanelGroup {...{state, dispatch} } />\n    </Box>\n    );\n}\n\n\n\nfunction ConfigPanelGroup(props: {state: AppState, dispatch: React.Dispatch<Action> }) {\n  let { state, dispatch } = props\n  if (state.mode === \"ss\") {\n    let select1 = (config: Config) => { return config.ssSelector }\n    let select2 = (config: Config) => { return config.ssPairOnlySelector }\n    let select3 = (config: Config) => { return config.solutionNumSelector }\n    let select4 = (config: Config) => { return config.ssPosSelector }\n    let select5 = (config: Config) => { return config.orientationSelector }\n\n    let DRManip = [\n      // names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n      // \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n      { name: \"Toggle Select All\", enableIdx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] },\n      { name: \"Toggle All Oriented\", enableIdx: [0, 2, 4, 6, 8, 10, 12, 14, 16] },\n    ]\n    return (\n      <Fragment>\n      <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n      <MultiSelect {...{state, dispatch, select: select4, options: {manipulators: DRManip} }}> </MultiSelect>\n      <MultiSelect {...{state, dispatch, select: select5}}> </MultiSelect>\n      </Fragment>\n    )\n  } else if (state.mode === \"fbdr\") {\n    let select1 = (config: Config) => { return config.fbdrSelector }\n    let select2 = (config: Config) => { return config.fbOnlySelector }\n    let select3 = (config: Config) => { return config.fbPairSolvedSelector }\n    let select6 = (config: Config) => { return config.fbdrScrambleSelector }\n    let select4 = (config: Config) => { return config.solutionNumSelector }\n    let select5 = (config: Config) => { return config.orientationSelector }\n    return (\n      <Fragment>\n      <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select6}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select4}}> </SingleSelect>\n      <MultiSelect {...{state, dispatch, select: select5}}> </MultiSelect>\n      </Fragment>\n    )\n  } else if (state.mode === \"fb\") {\n    let select3 = (config: Config) => { return config.fbPieceSolvedSelector }\n    let select4 = (config: Config) => { return config.solutionNumSelector }\n    let select5 = (config: Config) => { return config.orientationSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <MultiSelect {...{ state, dispatch, select: select5 }}> </MultiSelect>\n      </Fragment>\n    )\n   } else if (state.mode === \"4c\"){\n    let select1 = (config: Config) => { return config.lseStageSelector }\n    let select2 = (config: Config) => { return config.lseMCSelector }\n    let select3 = (config: Config) => { return config.lseBarSelector }\n    let select4 = (config: Config) => { return config.solutionNumSelector }\n    let select5 = (config: Config) => { return config.orientationSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <MultiSelect {...{ state, dispatch, select: select5 }}> </MultiSelect>\n      </Fragment>\n    )\n   } else if (state.mode === \"eopair\"){\n    let select1 = (config: Config) => { return config.lseEOSelector }\n    let select2 = (config: Config) => { return config.lseEOLRMCSelector }\n    let select3 = (config: Config) => { return config.lseBarbieSelector }\n    let select4 = (config: Config) => { return config.solutionNumSelector }\n    let select5 = (config: Config) => { return config.orientationSelector }\n\n    return (\n      <Fragment>\n        <MultiSelect {...{ state, dispatch, select: select1, options: {noDialog: true}} }> </MultiSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <MultiSelect {...{ state, dispatch, select: select5}} > </MultiSelect>\n      </Fragment>\n    )\n   }\n   else return <Fragment/>\n}\n\n\n\nexport default BlockTrainerView\n\n\n","import React, { Dispatch } from 'react'\n\nimport { makeStyles } from '@material-ui/core';\nimport { Grid, GridList, GridListTile, Paper, Container } from '@material-ui/core';\n\nimport { AlgDesc } from \"../lib/Algs\";\nimport { AppState, Action } from '../Types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n      },\n    container: {\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n      },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      gridList: {\n        width: 600,\n        height: 450,\n      },\n}))\n\ntype VisualCubeConfig = {\n    alg: string;\n    stage: string;\n    sch: string; //yrbwog\n}\nfunction VisualCube(props: VisualCubeConfig) {\n  let { alg, stage, sch } = props\n  const template =\n  `http://localhost:8000/visualcube.php?fmt=svg&r=y30x-24&size=150&co=40&fo=100&cc=ccc`\n    + `&stage=${stage}&sch=${sch}&case=${alg}`\n  return <img src={template} alt=\"\"/>\n}\n\nfunction PanoramaTable(props: {algs: AlgDesc[]}){\n    let classes = useStyles()\n    let { algs } = props\n    return <GridList cellHeight={160} className={classes.gridList} cols={3}>\n            {algs.map((alg) => (\n                <GridListTile key={alg.id} cols={1}>\n                    <VisualCube alg={alg.alg} stage=\"f2b\" sch=\"yrbwog\"/>\n                </GridListTile>\n            ))}\n        </GridList>\n}\n\nexport default function PanoramaView(props: { state: AppState, dispatch: Dispatch<Action> }) {\n    let classes = useStyles()\n    let algs : AlgDesc[] = [\n        \"RUR\", \"RU'R'\"\n    ].map( str => ({\n        id: str,\n        alg: str,\n        kind: \"sb\"\n    }))\n\n    return <div className={classes.root}>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n    </div>\n}","import { CubieCube, Move, CubeUtil } from './CubeLib';\nimport { cartesianProduct } from './Math';\n\nexport type PrunerConfig = {\n    size: number,\n    encode: (cube : CubieCube) => number,\n    solved_states: CubieCube[],\n    max_depth: number,\n    moveset: Move[]\n}\n\nexport type PrunerT = {\n    init: () => void,\n    query: (c : CubieCube) => number,\n    equal: (c1 : CubieCube, c2: CubieCube) => boolean,\n    encode: (c : CubieCube) => number\n}\n\nexport function Pruner(config: PrunerConfig) : PrunerT {\n    let dist: Uint8Array;\n    let { size, encode, solved_states, max_depth, moveset} = config\n    let initialized = false\n    function init() {\n        if (initialized) return\n        initialized = true\n        dist = new Uint8Array(size).fill(255)\n        for (let state of solved_states) {\n            dist[encode(state)] = 0\n        }\n        let frontier = [...solved_states]\n        let total_expanded = frontier.length\n        for (let i = 0; i < max_depth; i++) {\n            console.log(\"pruner: expanding depth \", i)\n            let new_frontier = []\n            for (let state of frontier) {\n                for (let move of moveset) {\n                    let newState = state.apply(move) // clone\n                    let idx = encode(newState)\n                    if (dist[idx] === 255) {\n                        dist[idx] = i + 1;\n                        new_frontier.push(newState)\n                    }\n                }\n            }\n            frontier = new_frontier\n            total_expanded += frontier.length\n        }\n        console.log(\"Initialization complete. size = \", total_expanded)\n    }\n    function query(cube: CubieCube) {\n        let d = dist[encode(cube)]\n        if (d === 255) return max_depth + 1;\n        return d\n    }\n    function equal(cube1: CubieCube, cube2: CubieCube) {\n        return encode(cube1) === encode(cube2)\n    }\n    return  {\n        init,\n        query,\n        equal,\n        encode\n    }\n}\n\n\n\nlet fbdrPrunerConfig : PrunerConfig = function() {\n    const esize = Math.pow(24, 4)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        if (cube.cp[i] === 4) {\n          c1 = i * 3 + cube.co[i]\n        } else if (cube.cp[i] === 5) {\n          c2 = i * 3 + cube.co[i];\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0, e4 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n              case 7 : e4 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24 * 24) + e2 * (24 * 24) + e3 * 24 + e4\n      return enc_c + 24 * 24 * enc_e\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const max_depth = 4\n    const moveset : Move[] = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\n\nlet fbPrunerConfig : PrunerConfig = function() {\n    const esize = Math.pow(24, 3)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize * 6\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        if (cube.cp[i] === 4) {\n          c1 = i * 3 + cube.co[i]\n        } else if (cube.cp[i] === 5) {\n          c2 = i * 3 + cube.co[i];\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24 ) + e2 * (24 ) + e3\n      const enc_ce = enc_c + 24 * 24 * enc_e\n\n      let t1 = 0\n      for (let i = 0; i < 5; i++) {\n          if (cube.tp[i] === 4) { t1 = i }\n      }\n      const enc = enc_ce * 6 + t1\n      return enc\n    }\n\n    const moves = [[]]\n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move))\n\n    const max_depth = 4\n    const moveset : Move[] = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"] /* \"E\", \"E'\", \"E2\", \"S\", \"S'\", \"S2\" ]*/\n    .map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\n\n\n\nlet ssPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 3)\n    const c1 = is_front ? 7 : 6;\n    const e1 = is_front ? 11 : 10\n    const e2 = 7\n    function encode(cube:CubieCube) {\n      let v = [0 ,0, 0]\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v[0] = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n          if (cube.ep[i] === e1) v[1] = i * 2 + cube.eo[i];\n          else if (cube.ep[i] === e2) v[2] = i * 2 + cube.eo[i]\n      }\n      return v[0] + v[1] * 24 + v[2] * 24 * 24\n    }\n\n    const moves = [[]] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move))\n\n    const max_depth = 5\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n        \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\n\n\nlet lsePrunerConfig : PrunerConfig = function() {\n    const size = Math.pow(12, 6) * 4 * 4 // TODO: optimize this plz\n    function encode(cube:CubieCube) {\n      let edge_encode = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n      let enc = [0, 0, 0, 0, 0, 0]\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx > -1) {\n            enc[idx] = edge_encode[i] * 2 + cube.eo[i];\n        }\n      }\n      let edge_enc = 0;\n      for (let i = 0; i < 6; i++) {\n        edge_enc = edge_enc * 12 + enc[i];\n      }\n      return edge_enc * 4 * 4 + cube.tp[0] * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves = [Move.all[\"id\"]]\n    const solved_states = moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 7\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\nfunction eolrPrunerConfig(center_flag: number, use_barbie?: boolean): PrunerConfig {\n    const size = 6 * 6 * Math.pow(2, 6) * 4 * 2 // TODO: optimize this plz\n\n    const edge_encode = [0, 1, 0, 2, 0, -1, 0, -1, -1, -1, -1, -1];\n    const edge_idx = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n    function encode(cube:CubieCube) {\n      let eo = 0, ep = 0\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx >= 0) {\n            eo = eo * 2 + cube.eo[i]\n        }\n        if (idx > 0) {\n            ep += Math.pow(6, idx - 1) * edge_idx[i]\n        }\n      }\n      // make no distinction between centers M2 apart\n      return (eo * 36 + ep) * 4 * 2 + ~~(cube.tp[0] / 2) * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves_ac = cartesianProduct( [\"U'\", \"U\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"] ).map(x => x.join(\" \"))\n    const moves_mc = cartesianProduct( [\"M'\"], [\"U\", \"U'\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"]).map(x => x.join(\" \"))\n    let moves: string[] = []\n    if (center_flag & 0x01) moves = moves.concat(moves_ac)\n    if (center_flag & 0x10) moves = moves.concat(moves_mc)\n\n    const barb_moves_ac = [\"U\", \"U'\"]\n    const barb_moves_mc = [\"M U\", \"M U'\"]\n    let barb_moves: string[] = []\n    if (center_flag & 0x01) barb_moves = barb_moves.concat(barb_moves_ac)\n    if (center_flag & 0x10) barb_moves = barb_moves.concat(barb_moves_mc)\n\n    const pre_moves = use_barbie ? barb_moves : moves\n\n    const solved_states = pre_moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 20\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\n\nexport { fbdrPrunerConfig, ssPrunerConfig, fbPrunerConfig, lsePrunerConfig, eolrPrunerConfig }","import {initialize, solve as min2phaseSolve, Min2PhaseCube} from \"./min2phase.js\"\nimport { CubieCube } from \"../CubeLib\";\n\nexport {initialize}\n\nfunction toMin2Phase(state: CubieCube): Min2PhaseCube {\n  // Note: this is its own inverse.\n  // const conjugate = {\n  //   EDGE: { permutation: [ 1, 0, 3, 2, 5, 4, 7, 6, 8, 9, 11, 10 ],\n  //           orientation: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CORNER: { permutation: [ 0, 3, 2, 1, 4, 5, 6, 7 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CENTER: { permutation: [ 0, 1, 2, 3, 4, 5 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0 ] }\n  // };\n  // const pseudo = Combine(def, Combine(def, conjugate, Invert(def, state)), conjugate);\n\n  return {\n    cp: state.cp,\n    co: state.co,\n    ep: state.ep,\n    eo: state.eo\n  }\n}\n\nexport function solve(state: CubieCube): string {\n  return min2phaseSolve(toMin2Phase(state));\n}\n","import { CubieCube, Move, MoveSeq } from './CubeLib';\nimport { arrayEqual } from './Math';\n\nimport { Pruner, PrunerT, fbdrPrunerConfig, ssPrunerConfig, fbPrunerConfig, lsePrunerConfig, PrunerConfig, eolrPrunerConfig } from './Pruner';\n\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\n\n\ntype SolverConfig = {\n    is_solved: (cube : CubieCube) => boolean,\n    moveset: Move[],\n    pruners: PrunerT[],\n}\n\ntype Accumulator = {\n    solutions: MoveSeq[],\n    capacity: number\n}\n\nexport type SolverT = {\n    solve: (cube : CubieCube, l : number, r : number, c : number) => MoveSeq[],\n    is_solved: (cube : CubieCube) => boolean,\n    getPruner: () => PrunerT[]\n}\nfunction Solver(config: SolverConfig) : SolverT{\n    const MAX_STATE_COUNT = 1000000\n    let { moveset, is_solved, pruners } = config\n    let state_count = 0, prune_count = 0;\n    let accum : Accumulator\n    let max_depth : number\n    let min_depth : number\n\n    enum SState {\n        CONTINUE,\n        STOP\n    };\n\n    function solve_depth(cube: CubieCube, min_depth_: number, max_depth_: number, accum_: Accumulator) {\n        accum = accum_\n        max_depth = max_depth_\n        min_depth = min_depth_\n        state_count = 0\n        prune_count = 0\n        search(cube, 0, [])\n        return accum\n    }\n\n    let Moveable = Object.create({})\n    function prepareNextMoveable() {\n        function getAvailableMove(name : string) {\n            switch (name[0]) {\n                case \"U\": return moveset.filter(k => k.name[0] !== \"U\");\n                case \"D\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\");\n                case \"R\": {\n                    let base = moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"r\");\n                    if (name === \"R\") return base.filter(k => k.name !== \"M'\")\n                    if (name === \"R'\") return base.filter(k => k.name !== \"M\")\n                    if (name === \"R2\") return base.filter(k => k.name !== \"M2\")\n                    return base\n                }\n                case \"L\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"r\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"M\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"F\": return moveset.filter(k => k.name[0] !== \"F\");\n                case \"B\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\");\n\n                case \"E\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\" && k.name[0] !== \"E\");\n                case \"S\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\" && k.name[0] !== \"S\");\n            }\n        }\n        for (let move of moveset) {\n            Moveable[move.name] = getAvailableMove(move.name)\n        }\n    }\n    prepareNextMoveable()\n\n    function expand(cube: CubieCube, depth: number, solution: Move[]) : SState{\n        const availableMoves = solution.length > 0 ? Moveable[solution[solution.length - 1].name] : moveset\n        const seen_encodings = new Set()\n        seen_encodings.add(pruners[0].encode(cube))\n        for (let move of availableMoves) {\n            let new_cube = cube.apply(move)\n            let enc = pruners[0].encode(new_cube)\n            let redundant = seen_encodings.has(enc)\n            if (!redundant) {\n                seen_encodings.add(enc)\n                solution.push(move);\n                let st : SState = search(new_cube, depth + 1, solution);\n                solution.pop();\n                if (st === SState.STOP) {\n                    return SState.STOP\n                }\n            }\n        }\n        return SState.CONTINUE\n    }\n\n    function try_push(solution: Move[], depth: number) {\n        if (depth < min_depth) return SState.CONTINUE\n        if (accum.solutions.length < accum.capacity) {\n            let flag = true\n            for (let sol of accum.solutions) {\n                if (arrayEqual(sol.moves, solution)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                accum.solutions.push(new MoveSeq([...solution]))\n            }\n        }\n\n        if (accum.solutions.length === accum.capacity) {\n            return SState.STOP\n        } else {\n            return SState.CONTINUE\n        }\n    }\n\n    function search(cube: CubieCube, depth: number, solution: Move[]) : SState {\n        state_count++;\n        if (state_count > MAX_STATE_COUNT) {\n            return SState.STOP\n        }\n        if (is_solved(cube)) {\n            return try_push(solution, depth)\n        } else {\n            if (depth >= max_depth) return SState.CONTINUE;\n            let d = pruners[0].query(cube)\n            if (d + depth > max_depth) {\n                prune_count++;\n                return SState.CONTINUE\n            } else {\n                return expand(cube, depth, solution)\n            }\n        }\n    }\n\n    function solve(cube: CubieCube, depth_l: number, depth_r: number, capacity: number) {\n        let accum : Accumulator = {\n            solutions: [],\n            capacity\n        }\n        for (let i = depth_l; i <= depth_r; i++) {\n            accum = solve_depth(cube, depth_l, i, accum)\n            if (accum.solutions.length === accum.capacity) {\n                break;\n            }\n        }\n        console.log(`Number of states = ${state_count}, pruned = ${prune_count}`);\n        return accum.solutions\n    }\n\n    function getPruner() {\n        return pruners\n    }\n    return { solve, is_solved, getPruner }\n};\n\nlet FbdrSolver = function() {\n    let prunerConfig = fbdrPrunerConfig\n    let pruner = Pruner(prunerConfig)\n    pruner.init()\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    function is_solved(cube: CubieCube) {\n        return pruner.query(cube) === 0;\n    }\n\n    let config = {\n        is_solved,\n        moveset: prunerConfig.moveset,\n        pruners: [pruner],\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nlet FbSolver = function() {\n    let prunerConfig = fbPrunerConfig\n    let pruner = Pruner(prunerConfig)\n    pruner.init()\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    function is_solved(cube: CubieCube) {\n        return pruner.query(cube) === 0;\n    }\n\n    let config = {\n        is_solved,\n        moveset: prunerConfig.moveset,\n        pruners: [pruner],\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nlet SsSolver = function(is_front: boolean) {\n    let prunerConfig = ssPrunerConfig(is_front)\n    let pruner = Pruner(prunerConfig)\n    pruner.init()\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    function is_solved(cube: CubieCube) {\n        return pruner.query(cube) === 0;\n    }\n\n    let config = {\n        is_solved,\n        moveset: prunerConfig.moveset,\n        pruners: [pruner],\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nlet Min2PhaseSolver : () => SolverT = function() {\n    // polyfill for min2phase\n\n    min2phase_init();\n    function solve(cube : CubieCube, l : number, r : number, c : number) {\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp), \"Cube center is not solved: \" + cube.tp)\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        let solution = min2phase_solve(transformed_cube);\n        return [ new MoveSeq(solution) ]\n    }\n    function is_solved(cube: CubieCube) {\n        return true\n    }\n    function getPruner() {\n        return []\n    }\n    return {\n        solve,\n        is_solved,\n        getPruner\n    }\n}\n\nlet LSESolver = function() {\n    let pruner = Pruner(lsePrunerConfig)\n    pruner.init()\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    function is_solved(cube: CubieCube) {\n        return pruner.query(cube) === 0;\n    }\n\n    let config = {\n        is_solved,\n        moveset: lsePrunerConfig.moveset,\n        pruners: [pruner],\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nlet EOLRSolver = function(center_flag: number, use_barbie?: boolean) {\n    let prunerConfig : PrunerConfig = eolrPrunerConfig(center_flag, use_barbie)\n    let pruner = Pruner(prunerConfig)\n    pruner.init()\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    let solved_states = new Set(prunerConfig.solved_states.map(x => pruner.query(x)))\n    function is_solved(cube: CubieCube) {\n        return solved_states.has(pruner.query(cube))\n    }\n\n    let config = {\n        is_solved,\n        moveset: lsePrunerConfig.moveset,\n        pruners: [pruner],\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nexport { FbdrSolver, FbSolver, SsSolver, Min2PhaseSolver, LSESolver, EOLRSolver }","import { FbdrSolver, SolverT, SsSolver, FbSolver, Min2PhaseSolver, LSESolver, EOLRSolver} from './Solver';\n\nlet all_solvers = [\n\"fbdr\",\"fb\", \"ss-front\", \"ss-back\", \"min2phase\",\n\"lse\", \"eolrac\", \"eolrmc\", \"eolr\", \"eolrac-b\", \"eolrmc-b\", \"eolr-b\" ]\n\nlet CachedSolver = function() {\n    let cache : Map<string, SolverT> = new Map()\n    function get(s: string) {\n        if (!cache.has(s)) {\n            switch (s) {\n                case \"fbdr\": cache.set(s, FbdrSolver()); break\n                case \"fb\": cache.set(s, FbSolver()); break\n                case \"ss-front\": cache.set(s, SsSolver(true)); break\n                case \"ss-back\": cache.set(s, SsSolver(false)); break\n                case \"min2phase\": cache.set(s, Min2PhaseSolver()); break\n                case \"lse\": cache.set(s, LSESolver()); break\n                case \"eolrac\": cache.set(s, EOLRSolver(0x01)); break\n                case \"eolrmc\": cache.set(s, EOLRSolver(0x10)); break\n                case \"eolr\": cache.set(s, EOLRSolver(0x11)); break\n                case \"eolrac-b\": cache.set(s, EOLRSolver(0x01, true)); break\n                case \"eolrmc-b\": cache.set(s, EOLRSolver(0x10, true)); break\n                case \"eolr-b\": cache.set(s, EOLRSolver(0x11, true)); break\n            }\n        }\n        return cache.get(s) as SolverT\n    }\n    return {get}\n}()\n\nexport {CachedSolver, all_solvers}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  Button,\n  Checkbox, IconButton, DialogContent, TextField, DialogContentText\n} from '@material-ui/core';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { Table, Paper, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\n\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport AddIcon from '@material-ui/icons/Add';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { AppState, Action, FavCase } from '../Types';\nimport { all_solvers } from '../lib/CachedSolver';\n\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    width: '100%',\n    minWidth: 200,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport function warnDialog(props: { confirm: () => void} ) {\n\n}\n\nfunction parseAddString(state: AppState, s : string) : [ FavCase[], boolean] {\n  const res : FavCase[] = []\n  for (const line of s.split('\\n')) {\n    let cols = line.split(',')\n    if (cols.length !== 2) continue\n    let solver = cols[0].trim()\n    let setup = cols[1].trim()\n    if (all_solvers.includes(solver)) {\n      let case_ : FavCase = {\n        mode: state.mode,\n        solver,\n        setup\n      }\n      res.push(case_)\n    }\n  }\n  if (res.length > 0) return [res, true]\n  else return [ [], false]\n}\n\nexport default function FavListView(props: { state: AppState, dispatch: React.Dispatch<Action> }) {\n  const {state, dispatch} = props\n  const classes = useStyles();\n  const play = (i: number) => () => {\n    dispatch({ type: \"favList\", content: [ state.favList[i] ], action: \"replay\" })\n  }\n  const remove = () => {\n    if (dialogID >= 0 && dialogID < state.favList.length)\n    dispatch({ type: \"favList\", content: [ state.favList[dialogID] ], action: \"remove\" })\n  }\n  const favList = state.favList.filter(c => c.mode === state.mode)\n\n  const [ dialogID, setDialogID ] = React.useState(-1)\n\n  const handleClose = () => setDialogID(-1)\n  const handleRemove = () => { remove(); setDialogID(-1); }\n  const dialogDelete = (<Dialog open={dialogID >= 0} onClose={handleClose} >\n    <DialogTitle id=\"alert-dialog-title\">{\"Delete this alg from favorites?\"}</DialogTitle>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        No\n    </Button>\n      <Button onClick={handleRemove} color=\"primary\" autoFocus>\n        Yes\n    </Button>\n    </DialogActions>\n  </Dialog>)\n\n  const [ addDialogOpen, setAddDialogOpen ] = React.useState(false)\n  const [ addString, setAddString ] = React.useState(\"\")\n  const handleAdd = () => setAddDialogOpen(true)\n  const handleAddClose = () => setAddDialogOpen(false)\n  const handleAddSuccess = () => {\n    let [res, status] = parseAddString(state, addString)\n    if (status) {\n      dispatch({ type: \"favList\", content: res, action: \"add\" })\n    }\n    handleAddClose()\n  }\n  const handleTextChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\n    setAddString(event.target.value)\n  }\n  const dialogAdd = <Dialog open={addDialogOpen} onClose={handleAddClose} aria-labelledby=\"form-dialog-title\">\n    <DialogTitle id=\"form-dialog-title\">Add New Cases</DialogTitle>\n    <DialogContent>\n      <DialogContentText>\n        Input your cases here. (one per line) <br></br>\n        Format: [category], [setup algorithm].\n        category := fb | fbdr | ss-front | ss-back\n      </DialogContentText>\n      <TextField\n        autoFocus\n        multiline\n        margin=\"dense\"\n        id=\"name\"\n        fullWidth\n        onChange={handleTextChange}\n        onKeyDown={ (event) => { event.stopPropagation() } }\n      />\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleAddClose} color=\"primary\">\n        Cancel\n    </Button>\n      <Button onClick={handleAddSuccess} color=\"primary\">\n        Add All\n    </Button>\n    </DialogActions>\n  </Dialog>\n\n\n  return (\n    <div>\n    {dialogDelete}\n    {dialogAdd}\n    <Paper>\n      <Table className={classes.table} size=\"small\" >\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"> Scramble </TableCell>\n            <TableCell align=\"center\" rowSpan={1}>\n              <IconButton   onClick={handleAdd} component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <AddIcon />\n              </IconButton>\n            {/* <IconButton component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <FileCopyIcon />\n              </IconButton> */}\n             </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {favList.map((value, i) => {\n            //const labelId = `favlist-label-${i}`;\n            return (\n              <TableRow key={i}>\n                {/* <TableCell align=\"center\" >\n                  {/* padding=checkbox <Checkbox></Checkbox> */}\n\n                <TableCell align=\"center\"> {value.solver + \" , \" + value.setup} </TableCell>\n                <TableCell align=\"center\">\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={play(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <PlaylistPlayIcon />\n                  </IconButton>\n\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => setDialogID(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <DeleteOutlineIcon />\n                  </IconButton>\n\n                </TableCell>\n              </TableRow>\n            )\n          })}</TableBody>\n      </Table>\n    </Paper>\n    </div>\n  )\n}","import React from 'react'\nimport { AppState, Mode, Action } from \"../Types\";\n\nimport { Box, AppBar, Typography,Button,  Tabs, Tab, makeStyles } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { Grid, Container } from '@material-ui/core';\n\nimport CmllTrainerView from './CmllTrainerView';\nimport BlockTrainerView from './BlockTrainerView';\nimport PanoramaView from './PanoramaView';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\nimport InfoIcon from '@material-ui/icons/Info';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\n\nimport 'typeface-roboto';\n\nimport FavListView from './FavListView';\n\nimport { ENABLE_DEV } from '../settings';\n\ninterface TabPanelProps {\n  value: number,\n  index: number,\n  children: any,\n  [key: string]: any\n}\nfunction TabPanel(props: TabPanelProps ) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </Typography>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  page: {\n    backgroundColor: theme.palette.background.default\n  },\n  container: {\n    display: \"flex\"\n  },\n  icon: {\n    minWidth: 0\n  },\n  root: {\n    display: \"flex\"\n  }\n}))\n\n\nconst modes : Mode[] = [\"fbdr\", \"fb\", \"ss\", \"cmll\", \"4c\", \"eopair\"]\n\nfunction _getInitialHashLocation() {\n  if (window.location.hash) {\n    let idx = (modes as string[]).indexOf(window.location.hash.slice(1))\n    if (idx === -1) {\n      window.location.hash = \"\";\n      return 0;\n    } else {\n      return idx;\n    }\n  } else {\n    return 0\n  }\n}\n\n\n// TODO: Write getter and setter for config items, and also write handlers that map to setters\nfunction AppView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n  //const [locations, setLocations] = React.useState([])\n  let { state, dispatch } = props\n  let classes = useStyles()\n\n  const handleChange = React.useCallback( (_:any, newValue:number) => {\n    if (newValue < modes.length) {\n      setValue(newValue)\n      let mode = modes[newValue]\n      dispatch({type: \"mode\", content: mode})\n    }\n  }, [dispatch])\n\n  const [ open, setOpen ] = React.useState(false)\n\n  const [value, setValue] = React.useState(_getInitialHashLocation());\n  React.useEffect( () => {\n    dispatch({type: \"mode\", content: modes[_getInitialHashLocation()]})\n  }, [])\n\n  const handleInfoOpen = () => { setOpen(true) }\n  const handleInfoClose = () => { setOpen(false) }\n\n  const toggleBright = () => {\n    const theme_flag = [...state.config.theme.flags]\n    theme_flag[0] = 1 - theme_flag[0]\n    theme_flag[1] = 1 - theme_flag[1]\n    dispatch({ type: \"config\", content: {\n      theme: {\n        ...state.config.theme,\n        flags: theme_flag\n    }}})\n  }\n  const toggleFav = () => {\n    setFav(!showFav)\n  }\n\n  const [ showFav, setFav ] = React.useState(false)\n\n  return (\n    <main>\n      <Dialog open={open} onClose={handleInfoClose} >\n      <DialogTitle>About</DialogTitle>\n      <DialogContent dividers>\n        <Typography gutterBottom style={{whiteSpace: 'pre-line', fontSize: '1.3rem'}}>\n          Welcome to my awesome roux block trainer.\n        </Typography>\n        <br/>\n\n        <Typography gutterBottom style={{whiteSpace: 'pre-line'}}>\n\n        A bunch of shortcuts: <br/>\n        - Space for the next scramble. <br/>\n        - Enter to reset the virtual cube to current scramble. <br/>\n        - Cstimer style virtual cube control. <br/>\n\n        <br/>\n        </Typography>\n\n        {/* <Typography gutterBottom style={{whiteSpace: 'pre-line'}} variant=\"subtitle2\">\n        Currently supporting: FB+DR, SS, CMLL\n        </Typography> */}\n\n        <Typography gutterBottom style={{whiteSpace: 'pre-line'}} variant=\"body2\">\n\n        Feature requests are most definitely welcome. :)\n        </Typography>\n\n        <Typography gutterBottom variant=\"overline\">\n\n        --onionhoney(Zhouheng Sun)\n        </Typography>\n\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={handleInfoClose}>\n          Got it!\n        </Button>\n      </DialogActions>\n      </Dialog>\n\n      <AppBar color=\"primary\" position=\"static\">\n        <Tabs value={value} onChange={handleChange} scrollButtons=\"on\" variant=\"scrollable\" indicatorColor=\"secondary\" >\n          <Tab onFocus={e => e.target.blur() } label=\"FB Pair + DR \" id='tab0' />\n          <Tab onFocus={e => e.target.blur() } label=\"Tough FB \" id='tab1' />\n          <Tab onFocus={e => e.target.blur() } label=\"SSquare \" id='tab2' />\n          <Tab onFocus={e => e.target.blur() } label=\"CMLL \" id='tab3'/>\n          <Tab onFocus={e => e.target.blur() } label=\"LSE 4c\" id='tab4'/>\n          <Tab onFocus={e => e.target.blur() } label=\"EOPair (LR/FB)\" id='tab5'/>\n          { ENABLE_DEV ?\n          <Tab onFocus={e => e.target.blur() } label=\"...\" id='tab6'/> : null }\n          <div style={{ flexGrow: 1 }}/>\n\n\n          <Tab onFocus={e => e.target.blur() } id='icon2' onClick={toggleFav} icon={ <BookmarkIcon /> } className={classes.icon} />\n          <Tab onFocus={e => e.target.blur() } id='icon0' onClick={toggleBright} icon={ <Brightness6Icon /> } className={classes.icon} />\n          <Tab onFocus={e => e.target.blur() } id='icon1' onClick={handleInfoOpen} icon={ <InfoIcon /> } className={classes.icon} />\n\n        </Tabs>\n      </AppBar>\n\n      <Box paddingY={2}>\n      <Container maxWidth={showFav ? \"md\" : \"sm\" }>\n\n      {\n      value === -1?\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item md={12} sm={12} xs={12}>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <PanoramaView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      :\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item hidden={!showFav} md={4} sm={4} xs={12} >\n        <FavListView {...{state, dispatch}} />\n        </Grid>\n\n        <Grid item md={showFav ? 8 : 12} sm={showFav ? 8 : 12} xs={12}>\n        <TabPanel value={value} index={0} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={1} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={2} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={3} className={classes.page}>\n          <CmllTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={5} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      }\n      </Container></Box>\n\n\n\n    </main>\n  )\n}\nexport default AppView","\nimport { Config, FavCase } from \"./Types\"\nexport const initialFavList : FavCase[] = []\nexport const initialConfig : Config = (() => {\n    let arr_ori_flag = Array(24).fill(0)\n    arr_ori_flag[7] = 1 // YR\n    return {\n        theme: {\n            names: [\"bright\", \"dark\"],\n            flags: [1,0],\n            kind: \"theme\"\n        },\n        cmllSelector: {\n            names: [\"o\", \"s\", \"as\", \"t\", \"l\", \"u\", \"pi\", \"h\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"cmll\",\n        },\n        cmllAufSelector: {\n            names: [\"None\", \"U\", \"U'\", \"U2\"],\n            flags: [1, 1, 1, 1],\n            kind: \"u_auf\"\n        },\n        cmllCubeMaskSelector: {\n            names: [\"Show\", \"Hide\", \"Hide LSE\"],\n            flags: [1, 0, 0],\n            kind: \"cube_mask\"\n        },\n        triggerSelector: {\n            names: [\"RUR'\", \"RU'R'\", \"R'U'R\", \"R'UR\"],\n            flags: [0, 0, 0, 0],\n            kind: \"trigger\"\n        },\n        orientationSelector: {\n            label: \"Color Scheme (U-F)\",\n            names: [\n                \"WG\", \"WB\", \"WO\", \"WR\",\n                \"YG\", \"YB\", \"YO\", \"YR\",\n                \"BW\", \"BY\", \"BO\", \"BR\",\n                \"GW\", \"GY\", \"GO\", \"GR\",\n                \"OW\", \"OY\", \"OB\", \"OG\",\n                \"RW\", \"RY\", \"RB\", \"RG\",\n            ],\n            flags: arr_ori_flag,\n            kind: \"orientation\"\n        },\n        fbdrSelector: {\n            label: \"Position of square\",\n            names: [\"FS at back\", \"FS at front\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"fbdr\"\n        },\n        fbdrScrambleSelector: {\n            label: \"Type of scramble\",\n            names: [\"Short (Concerning FBDR Pieces only)\", \"Random State (Entire cube, useful for practicing F2B)\"],\n            flags: [1, 0],\n            kind: \"fbdr-scramble\"\n        },\n        fbOnlySelector: {\n            label: \"Pieces to solve\",\n            names: [\"FB Last Pair + DR\", \"FB Last Pair Only\"],\n            flags: [1, 0],\n            kind: \"fb-only\"\n        },\n        fbPairSolvedSelector: {\n            label: \"Last Pair pattern\",\n            names: [\"Random\", \"Solved(FS at back only)\"],\n            flags: [1, 0],\n            kind: \"fb-pair-solved\"\n        },\n        ssSelector: {\n            label: \"Position of square\",\n            names: [\"SS at front\", \"SS at back\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"ss\"\n        },\n        ssEOSelector: {\n            label: \"Orientation of DR\",\n            names: [\"Oriented\", \"Misoriented\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"ss-orientation\"\n        },\n        ssPosSelector: {\n            label: \"Position of DR\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"ss-position\"\n        },\n        ssPairOnlySelector: {\n            label: \"Solve w/wo DR\",\n            names: [\"SS\", \"SB First Pair\"],\n            flags: [1, 0],\n            kind: \"sb-pair-only\"\n        },\n        solutionNumSelector: {\n            label: \"Number of solutions\",\n            names: [\"1\", \"5\", \"10\", \"25\"],\n            flags: [0, 1, 0, 0],\n            kind: \"solution-num\"\n        },\n        fbPieceSolvedSelector: {\n            label: \"Difficulty\",\n            names: [\"Hard over x2y(Scramble only)\", \"Hard\", \"DL Solved\", \"BL Solved\", \"Random\"],\n            flags: [1, 0, 0, 0, 0],\n            kind: \"fb-piece-solved\"\n        },\n        lseMCSelector: {\n            label: \"Center\",\n            names: [\"Aligned\", \"Misaligned\"],\n            flags: [0, 1],\n            kind: \"lse-mc\"\n        },\n        lseBarSelector: {\n            label: \"Bars\",\n            names: [\"ULUR\", \"UFUB\"],\n            flags: [1, 0],\n            kind: \"lse-bar\"\n        },\n        lseStageSelector: {\n            label: \"Stage\",\n            names: [\"4b for MC(1 move EOPair insert)\", \"M2 to 4c\", \"4c\"],\n            flags: [0, 1, 0],\n            kind: \"lse-stage\"\n        },\n        lseEOSelector: {\n            label: \"EO\",\n            names: [\"solved\", \"arrow\", \"4/0\", \"2o/0\", \"2a/0\", \"1/1\", \"6flip\", \"2o/2\", \"0/2\", \"2a/2\"],\n            flags: [0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"lse-eo\"\n        },\n        lseEOLRMCSelector: {\n            label: \"Center strategy\",\n            names: [\"Non MC only\", \"MC only\", \"Show both\", \"MC better\", \"Non MC better\"],\n            flags: [0, 0, 1, 0, 0],\n            kind: \"lse-eolrmc\"\n        },\n        lseBarbieSelector: {\n            label: \"EOLR / EOLRb\",\n            names: [\"EOLR\", \"EOLRb\"],\n            flags: [1, 0],\n            kind: \"lse-barbie\"\n        }\n    }\n})()\n","import { Config, FavCase } from \"../Types\"\nimport { version } from \"../Version\"\nimport { initialConfig, initialFavList } from \"../Config\"\n\nlet favListManager = function() {\n    const key = \"fav\"\n    let cache : FavCase[] | null = null\n    let getFavList = () => {\n        if (cache) return cache\n        const item = window.localStorage.getItem(key)\n        const item1 : FavCase[] = item ? JSON.parse(item) : initialFavList\n        return item1\n    }\n    let setFavList = (item : FavCase[]) => {\n        window.localStorage.setItem(key, JSON.stringify(item));\n        cache = item\n    }\n    return {\n        getFavList,\n        setFavList\n    }\n}()\n\nlet configManager = function() {\n    const key = \"config\"\n    const versionKey = \"version\"\n    let cache : Config | null = null\n\n    let getConfig = () => {\n        if (cache) {\n            return cache\n        }\n        const item = window.localStorage.getItem(key);\n        const vers = window.localStorage.getItem(versionKey)\n\n        const item1 : Partial<Config> = item ? JSON.parse(item) : initialConfig\n\n        if ( vers !== version) {\n            // version out of date\n            // let's preserve orientation\n            let config = initialConfig\n            if (item1.orientationSelector) {\n                config = {...initialConfig, orientationSelector: item1.orientationSelector}\n            }\n            window.localStorage.setItem(key, JSON.stringify(config));\n            window.localStorage.setItem(versionKey, version)\n\n            return config\n        }\n\n        // In rare cases we want to update new attributes but maintain previous version\n        if ( (item1 === null) || (item1 === undefined) || Object.keys(item1).length === 0) {\n            window.localStorage.setItem(key, JSON.stringify(initialConfig));\n            return initialConfig\n        }\n        // we will also add in unseen fields\n        if (Object.keys(item1).length < Object.keys(initialConfig).length) {\n            const item2 = {...initialConfig, ...item1}\n            window.localStorage.setItem(key, JSON.stringify(item2));\n            return item2\n        }\n        return item1 as Config\n    }\n\n    let setConfig = (partial: Partial<Config>) => {\n        let newConfig : Config = Object.assign(getConfig(), partial)\n        window.localStorage.setItem(key, JSON.stringify(newConfig));\n        cache = newConfig\n    }\n\n    return {\n        getConfig,\n        setConfig\n    }\n}()\n\nlet getConfig = configManager.getConfig\nlet setConfig = configManager.setConfig\nlet getFavList = favListManager.getFavList\nlet setFavList = favListManager.setFavList\n\nexport {\n    getConfig, setConfig, getFavList, setFavList\n}\n","const version = \"0.4.0\"\n\nexport {version}","import { AppState, Config, FavCase } from \"../Types\";\n/* State Manager\n * \"Passively\" updates localstorage in reduce.\n * Action types\n *  - move: respond to cube move\n *  - replay: replay case\n *  - reactToConfig: respond to changes in config\n */\nexport abstract class AbstractStateM {\n    state: AppState;\n    constructor(state: AppState) {\n        this.state = state;\n    }\n    abstract move(s: string): AppState;\n    abstract reactToConfig(conf: Config): AppState;\n    abstract control(s: string): AppState;\n\n    replay(case_: FavCase): AppState {\n        return this.state;\n    }\n}\n\nexport class StateFactory {\n    static create = (state: AppState) => {\n        let filler = ( (()=>1) as unknown ) as (state: AppState) => AbstractStateM;\n        return filler(state);\n    }\n}","// source: \"https://sites.google.com/view/kianroux/cmll\" and https://github.com/AshleyF/briefcubing/blob/master/algs.js\n\n//type oll_case = \"o\"|\"h\"|\"pi\"|\"u\"|\"t\"|\"s\"|\"as\"|\"l\"\nimport { Selector } from \"../lib/Selector\";\nimport { rand_choice } from \"./Math\";\n\nconst get_active_names = (sel : Selector) => {\n    let res = []\n    for (let i = 0; i < sel.names.length; i++) {\n        if (sel.flags[i]) {\n            res.push(sel.names[i]);\n        }\n    }\n    return res\n}\n\nexport type AlgDesc = {\n    id: string,\n    alg: string,\n    alt_algs?: string[],\n    setup?: string,\n    kind: string\n}\n\nconst empty_alg : AlgDesc = {\n    id: \"empty\",\n    alg: \"\",\n    kind: \"any\"\n}\n\nconst cmll_algs : AlgDesc[] = [\n    { id: \"o_adjacent_swap\", alg: \"R U R' F' R U R' U' R' F R2 U' R'\", kind: \"cmll\" },\n    { id: \"o_diagonal_swap\", alg: \"F R U' R' U' R U R' F' R U R' U' R' F R F'\", kind: \"cmll\" },\n    { id: \"h_columns\", alg: \"R U R' U R U' R' U R U2 R'\", kind: \"cmll\" },\n    { id: \"h_rows\", alg: \"F R U R' U' R U R' U' R U R' U' F'\", kind: \"cmll\" },\n    { id: \"h_column\", alg: \"U R U2' R2' F R F' U2 R' F R F'\", kind: \"cmll\" },\n    { id: \"h_row\", alg: \"r U' r2' D' r U' r' D r2 U r'\", kind: \"cmll\" },\n    { id: \"pi_right_bar\", alg: \"F R U R' U' R U R' U' F'\", kind: \"cmll\" },\n    { id: \"pi_back_slash\", alg: \"U F R' F' R U2 R U' R' U R U2' R'\", kind: \"cmll\" },\n    { id: \"pi_x_checkerboard\", alg: \"U' R' F R U F U' R U R' U' F'\", kind: \"cmll\" },\n    { id: \"pi_forward_slash\", alg: \"R U2 R' U' R U R' U2' R' F R F'\", kind: \"cmll\" },\n    { id: \"pi_columns\", alg: \"U' r U' r2' D' r U r' D r2 U r'\", kind: \"cmll\" },\n    { id: \"pi_left_bar\", alg: \"U' R' U' R' F R F' R U' R' U2 R\", kind: \"cmll\" },\n    { id: \"u_forward_slash\", alg: \"U2 R2 D R' U2 R D' R' U2 R'\", kind: \"cmll\" },\n    { id: \"u_back_slash\", alg: \"R2' D' R U2 R' D R U2 R\", kind: \"cmll\" },\n    { id: \"u_front_row\", alg: \"R2' F U' F U F2 R2 U' R' F R\", kind: \"cmll\" },\n    { id: \"u_rows\", alg: \"U' F R2 D R' U R D' R2' U' F'\", kind: \"cmll\" },\n    { id: \"u_x_checkerboard\", alg: \"U2 r U' r' U r' D' r U' r' D r\", kind: \"cmll\" },\n    { id: \"u_back_row\", alg: \"U' F R U R' U' F'\", kind: \"cmll\" },\n    { id: \"t_left_bar\", alg: \"U' R U R' U' R' F R F'\", kind: \"cmll\" },\n    { id: \"t_right_bar\", alg: \"U L' U' L U L F' L' F\", kind: \"cmll\" },\n    { id: \"t_rows\", alg: \"F R' F R2 U' R' U' R U R' F2\", kind: \"cmll\" },\n    { id: \"t_front_row\", alg: \"r' U r U2' R2' F R F' R\", kind: \"cmll\" },\n    { id: \"t_back_row\", alg: \"r' D' r U r' D r U' r U r'\", kind: \"cmll\" },\n    { id: \"t_columns\", alg: \"U2 r2' D' r U r' D r2 U' r' U' r\", kind: \"cmll\" },\n    { id: \"s_left_bar\", alg: \"U R U R' U R U2 R'\", kind: \"cmll\" },\n    { id: \"s_x_checkerboard\", alg: \"U L' U2 L U2' L F' L' F\", kind: \"cmll\" },\n    { id: \"s_forward_slash\", alg: \"U F R' F' R U2 R U2' R'\", kind: \"cmll\" },\n    { id: \"s_Columns\", alg: \"U2 R' U' R U' R2' F' R U R U' R' F U2' R\", kind: \"cmll\" },\n    { id: \"s_right_bar\", alg: \"U' R U R' U R' F R F' R U2' R'\", kind: \"cmll\" },\n    { id: \"s_back_slash\", alg: \"U R U' L' U R' U' L\", kind: \"cmll\" },\n    { id: \"as_right_bar\", alg: \"U R' U' R U' R' U2' R\", kind: \"cmll\" },\n    { id: \"as_columns\", alg: \"U' R2 D R' U R D' R' U R' U' R U' R'\", kind: \"cmll\" },\n    { id: \"as_back_slash\", alg: \"U' F' L F L' U2' L' U2 L\", kind: \"cmll\" },\n    { id: \"as_x_checkerboard\", alg: \"U' R U2' R' U2 R' F R F'\", kind: \"cmll\" },\n    { id: \"as_forward_slash\", alg: \"U' L' U R U' L U R'\", kind: \"cmll\" },\n    { id: \"as_left_bar\", alg: \"U R U2' R' F R' F' R U' R U' R'\", kind: \"cmll\" },\n    { id: \"l_mirror\", alg: \"F R U' R' U' R U R' F'\", kind: \"cmll\" },\n    { id: \"l_inverse\", alg: \"F R' F' R U R U' R'\", kind: \"cmll\" },\n    { id: \"l_pure\", alg: \"R U2 R' U' R U R' U' R U R' U' R U' R'\", kind: \"cmll\" },\n    { id: \"l_front_commutator\", alg: \"R U2 R D R' U2 R D' R2'\", kind: \"cmll\" },\n    { id: \"l_diag\", alg: \"R' U' R U R' F' R U R' U' R' F R2\", kind: \"cmll\" },\n    { id: \"l_back_commutator\", alg: \"U R' U2 R' D' R U2 R' D R2\", kind: \"cmll\" }\n]\n\nlet trigger_algs: AlgDesc[] = [\n    { id: \"RUR'_1\", alg: \"R U R'\", kind:\"trigger\"},\n    { id: \"RUR'_2\", alg: \"r U r'\", kind:\"trigger\"},\n    { id: \"RU'R'_1\", alg: \"R U' R'\", kind:\"trigger\"},\n    { id: \"RU'R'_2\", alg: \"r U' r'\", kind:\"trigger\"},\n    { id: \"R'U'R_1\", alg: \"R' U' R\", kind:\"trigger\"},\n    { id: \"R'U'R_2\", alg: \"r' U' r\", kind:\"trigger\"},\n    { id: \"R'UR_1\", alg: \"R' U R\", kind:\"trigger\"},\n    { id: \"R'UR_2\", alg: \"r' U r\", kind:\"trigger\"}\n]\n\nlet u_auf_algs: AlgDesc[] = [\n    { id: \"U\", alg: \"U\", kind: \"u_auf\"},\n    { id: \"U'\", alg: \"U'\", kind: \"u_auf\"},\n    { id: \"U2\", alg: \"U2\", kind: \"u_auf\"},\n    { id: \"None\", alg: \"\", kind: \"u_auf\"},\n]\n\nlet ori_algs: AlgDesc[] =\n    [\"WG\", \"WB\", \"WO\", \"WR\",\n    \"YG\", \"YB\", \"YO\", \"YR\",\n    \"BW\", \"BY\", \"BO\", \"BR\",\n    \"GW\", \"GY\", \"GO\", \"GR\",\n    \"OW\", \"OY\", \"OB\", \"OG\",\n    \"RW\", \"RY\", \"RB\", \"RG\"].map(s => ({id: s, alg: \"\", kind:\"orientation\" }))\n\nlet lookup_algset = (kind : string) => {\n    switch (kind) {\n        case \"cmll\": return cmll_algs;\n        case \"trigger\": return trigger_algs;\n        case \"orientation\": return ori_algs;\n        case \"u_auf\": return u_auf_algs;\n        default: return []\n    }\n}\n\nlet alg_generator = (selector: Selector) => {\n    let algSet = lookup_algset(selector.kind)\n    let lookup = new Set(get_active_names(selector))\n    let get_prefix = (id: string) => {\n        return id.split(\"_\", 1)[0]\n    }\n    let algs : AlgDesc[] = (() => {\n        return algSet.filter(alg => {\n            let prefix = get_prefix(alg.id);\n            return lookup.has(prefix)\n        })\n    })()\n\n    let next = () => {\n        if (algs.length === 0) {\n            return empty_alg\n        } else {\n            return rand_choice(algs)\n        }\n    }\n    return next\n}\n\nexport { alg_generator }","import { AppState, Config, FavCase } from \"../Types\";\nimport { alg_generator, AlgDesc } from \"../lib/Algs\";\nimport { Face, Typ, FBpairPos } from \"../lib/Defs\";\nimport { CubieCube, CubeUtil, Mask, FaceletCube, SeqEvaluator, MoveSeq } from '../lib/CubeLib';\nimport { getActiveName, getActiveNames } from '../lib/Selector';\nimport { CachedSolver } from \"../lib/CachedSolver\";\nimport { rand_choice, arrayEqual } from '../lib/Math';\nimport { AbstractStateM, StateFactory } from \"./AbstractStateM\";\n\nexport abstract class BlockTrainerStateM extends AbstractStateM {\n    abstract solverL: number;\n    abstract solverR: number;\n    scrambleMargin: number = 1;\n    scrambleCount: number = 1;\n    algDescWithMoveCount: string = \"\";\n    abstract getRandom(): [CubieCube, string] | [CubieCube, string, boolean];\n\n    _solve_min2phase(cube: CubieCube) : AppState  {\n\n        const state = this.state\n        const ori = alg_generator(state.config.orientationSelector)().id;\n        let algdesc: AlgDesc = {\n            id: `min2phase`,\n            alg: \"\",\n            alt_algs: [],\n            setup: CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0].toString(),\n            kind: `min2phase`\n        };\n        return {\n            ...state,\n            cube: {\n                ...state.cube,\n                state: cube,\n                ori\n            },\n            case: {\n                state: cube,\n                desc: [algdesc]\n            }\n        };\n    }\n    _solve(cube: CubieCube, solverName: string, options?: {\n        updateSolutionOnly?: boolean, use2PhaseScramble?: boolean,\n        scrambleMargin?: number,\n        scrambleCount?: number\n    }) {\n        options = options || {}\n        if (solverName === \"min2phase\") {\n            if (!options.updateSolutionOnly)\n                return this._solve_min2phase(cube)\n            return this.state\n        }\n        const solver = CachedSolver.get(solverName);\n        const state = this.state;\n;\n        //console.log(cube, solverName, scramble, this.solverL, this.solverR)\n        const magnification = 4;\n        const solutionCap = +(getActiveName(state.config.solutionNumSelector) || 5);\n        // not using solutionCap for now\n        let solution = solver.solve(cube, 0, this.solverR, solutionCap * magnification);\n\n        const solutionLength = solution[0].moves.length;\n        const scrambleMargin = 1;\n        const scramble = options.use2PhaseScramble ?\n            CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0] :\n            rand_choice(solver.solve(cube, Math.max(this.solverL, solutionLength + scrambleMargin), this.solverR, options.scrambleCount || 1)).inv()\n\n        const setup = scramble.toString()\n\n        solution.sort((a, b) =>\n            SeqEvaluator.evaluate(a) - SeqEvaluator.evaluate(b));\n        const alg = solution[0].toString(this.algDescWithMoveCount);\n        const alt_algs = solution.slice(1, solutionCap).map(s => s.toString(this.algDescWithMoveCount));\n        const ori = (options.updateSolutionOnly) ? this.state.cube.ori : alg_generator(state.config.orientationSelector)().id;\n        let algdesc: AlgDesc = {\n            id: `${solverName}`,\n            alg,\n            alt_algs,\n            setup,\n            kind: `${solverName}`\n        };\n        const name = options.updateSolutionOnly ? this.state.name : \"hiding\";\n        // console.log(\"algdesc\", algdesc)\n        return {\n            ...state,\n            name: name,\n            cube: {\n                ...state.cube,\n                state: cube,\n                ori\n            },\n            case: {\n                state: cube,\n                desc: [algdesc]\n            }\n        };\n    }\n    _updateCase(): AppState {\n        const [cube, solverName, use2PhaseScramble] = this.getRandom();\n        return this._solve(cube, solverName, {\n            updateSolutionOnly: false,\n            use2PhaseScramble\n        });\n    }\n    _updateCap(): AppState {\n        const state = this.state;\n        if (state.case.desc.length === 0) {\n            return state;\n        }\n        const [cube, solverName] = [state.cube.state, state.case.desc[0]!.kind];\n        return this._solve(cube, solverName, {\n            updateSolutionOnly:true\n        });\n    }\n    replay(case_: FavCase): AppState {\n        const cube = new CubieCube().apply(case_.setup)\n        const solverName = case_.solver;\n        const state1 = this._solve(cube, solverName);\n        return {\n            ...state1,\n            mode: case_.mode\n        };\n    }\n    control(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            if (state.name === \"revealed\") {\n                return this._updateCase();\n            }\n            else {\n                return {\n                    ...state,\n                    name: \"revealed\"\n                };\n            }\n        }\n        else if (s === \"#enter\") {\n            return {\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                }\n            };\n        }\n        else {\n            return state;\n        }\n    }\n    move(movestr: string): AppState {\n        let state = this.state;\n        let move = new MoveSeq(movestr);\n        let cube = state.cube.state.apply(move);\n        return {\n            ...state,\n            cube: {\n                ...state.cube,\n                state: cube\n            }\n        };\n    }\n    reactToConfig(conf: Config): AppState {\n        // see if solution cap changed\n        let changed = !arrayEqual(this.state.config.solutionNumSelector.flags, conf.solutionNumSelector.flags);\n        if (changed) {\n            return (StateFactory.create({ ...this.state, config: conf }) as BlockTrainerStateM)._updateCap();\n        }\n        else {\n            return this.state;\n        }\n    }\n}\n// const m_premove = [[], Move.all[\"M\"], Move.all[\"M'\"], Move.all[\"M2\"]];\nexport class FbdrStateM extends BlockTrainerStateM {\n    solverL: number;\n    solverR: number;\n    _get_pair_solved_front() {\n        let [cp, co, ep, eo] = rand_choice(FBpairPos);\n        //let mask = Mask.copy(Mask.fs_front_mask)\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 8; i++) {\n            if (cube.cp[i] === 4) {\n                cube.cp[i] = cube.cp[cp];\n                cube.co[i] = cube.co[cp];\n                cube.cp[cp] = 4;\n                cube.co[cp] = co;\n            }\n        }\n        for (let i = 0; i < 12; i++) {\n            if (cube.ep[i] === 8) {\n                cube.ep[i] = cube.ep[ep];\n                cube.eo[i] = cube.eo[ep];\n                cube.ep[ep] = 8;\n                cube.eo[ep] = eo;\n            }\n        }\n        return cube;\n    }\n    _get_random_fs_back() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        return cube;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    _get_random_fs_front() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        return cube;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    getRandom(): [CubieCube, string, boolean] {\n        const fbOnly = getActiveName(this.state.config.fbOnlySelector) === \"FB Last Pair Only\";\n        const pairSolved = getActiveName(this.state.config.fbPairSolvedSelector) !== \"Random\";\n        const scrambleType = getActiveName(this.state.config.fbdrScrambleSelector) || \"Short\";\n        const useMin2PhaseScramble = !scrambleType.startsWith(\"Short\");\n        const solverName = fbOnly ? \"fb\" : \"fbdr\";\n        let active = getActiveNames(this.state.config.fbdrSelector)[0];\n        //console.log(\"active\", active)\n        if (active === \"FS at back\") {\n            if (pairSolved) {\n                return [this._get_pair_solved_front(), solverName, useMin2PhaseScramble];\n            }\n            else\n                return [this._get_random_fs_back(), solverName, useMin2PhaseScramble];\n        }\n        else if (active === \"FS at front\") {\n            return [this._get_random_fs_front(), solverName, useMin2PhaseScramble];\n        }\n        else\n            return [rand_choice([this._get_random_fs_back, this._get_random_fs_front])(),\n                solverName, useMin2PhaseScramble];\n    }\n    constructor(state: AppState) {\n        super(state);\n        this.solverL = 8;\n        this.solverR = 10;\n    }\n}\nexport class SsStateM extends BlockTrainerStateM {\n    solverL: number;\n    solverR: number;\n    _get_random_fb(allowed_dr_eo_ep: [number, number][]) {\n        let active = getActiveName(this.state.config.ssPairOnlySelector);\n        let mask = (active === \"SS\") ? Mask.fb_mask : Mask.fbdr_mask;\n        let cube : CubieCube;\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(mask);\n            if (active !== \"SS\") break;\n            let ep = cube.ep.indexOf(7);\n            let eo = cube.eo[ep];\n            if (allowed_dr_eo_ep.find( ([eo_, ep_]) => (eo === eo_) && (ep === ep_))) {\n                break\n            }\n        }\n        return cube\n    }\n    getRandom(): [CubieCube, string] {\n        let active = getActiveNames(this.state.config.ssSelector)[0];\n        const drPositionMap : [number, number][] = [\n            [0, 0], [1, 0],\n            [0, 1], [1, 1],\n            [0, 2], [1, 2],\n            [0, 3], [1, 3],\n            [0, 4], [1, 4],\n            [0, 6], [1, 6],\n            [0, 7], [1, 7],\n            [0, 10], [1, 10],\n            [0, 11], [1, 11]\n        ]\n        let allowed_dr_eo_ep_patterns = this.state.config.ssPosSelector.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => drPositionMap[i] )\n        let cube = this._get_random_fb(allowed_dr_eo_ep_patterns);\n        let solver;\n        if (active === \"SS at front\") {\n            solver = \"ss-front\";\n        }\n        else if (active === \"SS at back\") {\n            solver = \"ss-back\";\n        }\n        else {\n            solver = rand_choice([\"ss-back\", \"ss-front\"]);\n        }\n        return [cube, solver];\n    }\n    constructor(state: AppState) {\n        super(state);\n        this.solverL = 9;\n        this.solverR = 10;\n    }\n}\nexport class FbStateM extends BlockTrainerStateM {\n    solverL: number;\n    solverR: number;\n    _find_center_connected_edges(cube: CubieCube, is_l_only: boolean) {\n        let centers = is_l_only ? [ Face.L ] : [ Face.F, Face.B, Face.L, Face.R]\n        let edges = CubeUtil.stickers.filter(c => c[2] === Typ.E && centers.includes(c[3])\n            && FaceletCube.color_of_sticker(cube, [c[0], c[1], c[2]]) === c[3]);\n        return edges;\n    }\n    _get_random(): [CubieCube, string] {\n        let active = getActiveName(this.state.config.fbPieceSolvedSelector);\n        let mask;\n        if (active === \"Random\")\n            mask = Mask.empty_mask;\n        else if (active === \"DL Solved\")\n            mask = Mask.dl_solved_mask;\n        else if (active === \"DB Solved\")\n            mask = Mask.db_solved_mask;\n        else if (active === \"Zhouheng Variant\")\n            mask = Mask.zhouheng_mask;\n        else\n            mask = Mask.empty_mask;\n        let cube = CubeUtil.get_random_with_mask(mask);\n\n        let solver = \"fb\";\n        if (active === \"Zhouheng Variant\") {\n            // B F'\n            cube = cube.apply(\"B F'\");\n            solver = \"fbdr\";\n        }\n        const g_hard = \"Hard over x2y(Scramble only)\"\n        if (active === g_hard) {\n            solver = \"min2phase\";\n        }\n        if (active !== \"HARD\" && active !== g_hard) {\n            return [cube, solver];\n        }\n        let n = 0;\n        let is_l_only = active === \"HARD\"\n        while (true) {\n            let pairs = CubeUtil.find_pairs(cube);\n            let cc_edges = this._find_center_connected_edges(cube, is_l_only);\n            n++;\n            if (pairs.length === 0 && cc_edges.length === 0) {\n                console.log(\"Successful after \" + n + \" tries \");\n                return [cube, solver];\n            }\n            cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        }\n    }\n    getRandom(): [CubieCube, string] {\n        let [cube, solver] = this._get_random();\n        return [cube, solver];\n    }\n    constructor(state: AppState) {\n        super(state);\n        this.solverL = 9;\n        this.solverR = 11;\n    }\n}\n","\nimport { BlockTrainerStateM } from \"./BlockTrainerStateM\";\nimport { Mask, CubeUtil, CubieCube, Move } from \"../lib/CubeLib\";\nimport { getActiveName, getActiveNames } from \"../lib/Selector\";\nimport { rand_choice } from \"../lib/Math\";\nimport { executionAsyncResource } from \"async_hooks\";\nimport { CachedSolver } from \"../lib/CachedSolver\";\n\nexport class LSEStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n    getRandom(): [CubieCube, string] {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let bars = getActiveName(this.state.config.lseBarSelector)\n\n        let cube = CubeUtil.get_random_with_mask(Mask.lse_4c_mask);\n\n        let move = new Move().from_cube(cube, \"\")\n\n        if (bars === \"UFUB\") {\n            cube = new CubieCube().apply(rand_choice([\"U\", \"U\"])).apply(move)\n        } else {\n            cube = new CubieCube().apply(move)\n        }\n\n        let is_mc = getActiveName(this.state.config.lseMCSelector) === \"Misaligned\";\n        let lse_premove = is_mc ? [Move.all[\"M\"], Move.all[\"M'\"]] : [ [], Move.all[\"M2\"] ]\n        cube = cube.apply(rand_choice(lse_premove))\n\n        let stage = getActiveName(this.state.config.lseStageSelector)\n        if (stage === \"M2 to 4c\")  {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return [cube, \"lse\"];\n        } else if (stage.startsWith(\"4b for MC\")) {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            cube = cube.apply(rand_choice([\"M\", \"M'\"]))\n            cube = cube.apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return [cube, \"lse\"];\n        } else {\n            return [cube, \"lse\"];\n        }\n    }\n}\n\nconst lseEODef = [\n    {kind: \"solved\", eo: [0,0,0,0,0,0]},\n    {kind: \"arrow\", eo: [1,1,0,1,1,0]},\n    {kind: \"arrow\", eo: [0,1,1,1,0,1]},\n    {kind: \"4/0\", eo: [1,1,1,1,0,0]},\n    {kind: \"2o/0\", eo: [1,0,1,0,0,0]},\n    {kind: \"1/1\", eo: [1,0,0,0,0,1]},\n    {kind: \"1/1\", eo: [0,0,1,0,1,0]},\n    {kind: \"6flip\", eo: [1,1,1,1,1,1]},\n    {kind: \"2o/2\", eo: [0,1,0,1,1,1]},\n    {kind: \"0/2\", eo: [0,0,0,0,1,1]},\n    {kind: \"2a/2\", eo: [0,1,1,0,1,1]},\n]\nconst lseEODefLookup = function() {\n    let map = Object.assign({});\n    lseEODef.forEach( (def) => {\n        map[def.eo.toString()] = def.kind\n    })\n    return map\n}();\n\nexport class EOLRStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n\n    _getEOType(cube: CubieCube) {\n        for (let i = 0; i < 4; i++) {\n            let eo_arr = cube.eo.slice(0, 5)\n            eo_arr.push(cube.eo[6])\n            let eo = (lseEODefLookup[eo_arr.toString()])\n            if (eo) {\n\n                console.log(eo, eo_arr)\n                return eo;\n            }\n            cube = cube.apply(\"U\")\n        }\n        return \"Error\"\n    }\n\n    getRandom(): [CubieCube, string] {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let targetEO = rand_choice(getActiveNames(this.state.config.lseEOSelector))\n\n        let cube: CubieCube\n        let count = 0;\n        let eolrMCMode = getActiveName(this.state.config.lseEOLRMCSelector)\n        let compare = eolrMCMode === \"Non MC better\" || eolrMCMode === \"MC better\"\n        let useBarbie = getActiveName(this.state.config.lseBarbieSelector) === \"EOLRb\"\n\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(Mask.lse_mask);\n            cube = cube.apply(rand_choice([\"id\", \"M2\"]))\n            console.log(\"targetEO\", targetEO)\n\n            if (count++ > 1000) {\n                console.log(\"something wrong\")\n                break\n            }\n\n            if (this._getEOType(cube) !== targetEO)\n                continue\n            if (compare) {\n                let acSolver = useBarbie ? \"eolrac-b\" : \"eolrac\"\n                let mcSolver = useBarbie ? \"eolrmc-b\" : \"eolrmc\"\n                let acLength = CachedSolver.get(acSolver).solve(cube, 0, 20, 1)[0].moves.length\n                let mcLength = CachedSolver.get(mcSolver).solve(cube, 0, 20, 1)[0].moves.length\n                if ( eolrMCMode === \"Non MC better\" && acLength > mcLength ) continue\n                if ( eolrMCMode === \"MC better\" && mcLength > acLength ) continue\n            }\n            break\n        }\n\n\n        switch (eolrMCMode) {\n            case \"Non MC only\": return [cube, useBarbie ? \"eolrac-b\" : \"eolrac\"];\n            case \"MC only\": return [cube, useBarbie ? \"eolrmc-b\" : \"eolrmc\"];\n            case \"Show both\": return [cube, useBarbie ? \"eolr-b\" : \"eolr\"];\n            case \"Non MC better\": return [cube, useBarbie ? \"eolr-b\" : \"eolr\"];\n            case \"MC better\": return [cube, useBarbie ? \"eolr-b\" : \"eolr\"];\n            default: return [cube, \"eolr\"]\n        }\n    }\n}","import { AppState, StateT, Config } from \"../Types\";\nimport { alg_generator, AlgDesc } from \"../lib/Algs\";\nimport { CubieCube, Move, CubeUtil, MoveSeq } from '../lib/CubeLib';\nimport { AbstractStateM } from \"./AbstractStateM\";\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\nimport { arrayEqual } from \"../lib/Math\";\n\nexport abstract class CmllStateM extends AbstractStateM {\n    _get2PhaseSolution(cube: CubieCube): AlgDesc {\n        // Aha! f = g(b) but you modified b later, and f won't update!\n\n        let m2_away = false\n        if (cube.tp[0] !== 0) {\n            m2_away = true\n            cube.apply(\"M2\")\n        }\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp))\n\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        min2phase_init();\n        let solution = min2phase_solve(transformed_cube);\n        if (m2_away) {\n            solution += \" M2\"\n        }\n        const algDesc: AlgDesc = ({\n            id: `scramble`,\n            alg: solution,\n            kind: 'scramble'\n        });\n        console.log(solution);\n        return algDesc;\n    }\n    _generateCase(): AppState {\n        let state = this.state;\n        let { config } = state;\n        let { cmllSelector, triggerSelector, cmllAufSelector, orientationSelector } = config;\n        let generator = alg_generator(cmllSelector);\n        let trig_generator = alg_generator(triggerSelector);\n        let u_auf_generator = alg_generator(cmllAufSelector);\n        let ori_generator = alg_generator(orientationSelector);\n        let trigger_alg: AlgDesc = trig_generator();\n        let cmll_alg: AlgDesc = generator();\n        let u_auf_alg: AlgDesc = u_auf_generator();\n        let alg_str = trigger_alg.alg + \" \" + u_auf_alg.alg + \" \" + cmll_alg.alg;\n        let moves: Move[] = new MoveSeq(alg_str).inv().moves;\n\n        let lse_cube: CubieCube\n        while (true) {\n            lse_cube = CubeUtil.get_random_lse().apply(moves)\n            if (lse_cube.is_solveable()) {\n                break;\n            }\n        }\n        let solution = this._get2PhaseSolution(lse_cube);\n        // ori based on ...?\n        let ori: string = ori_generator().id;\n        //console.log(\"current ori selector's ori \", ori)\n        return ({\n            ...state,\n            name: \"solving\",\n            cube: {\n                state: lse_cube,\n                ori,\n                history: [],\n            },\n            case: {\n                state: lse_cube,\n                desc: [trigger_alg, u_auf_alg, cmll_alg, solution]\n            },\n        });\n    }\n    control(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            // SCRAMBLE\n            // enter cleared solving state based on selection\n            return this._generateCase();\n        }\n        else if (s === \"#enter\") {\n            // REDO\n            return ({\n                ...state,\n                name: \"solving\",\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                    history: []\n                },\n                case: {\n                    ...state.case,\n                }\n            });\n        }\n        else {\n            throw new Error(\"Unrecognized control code\");\n        }\n    }\n    reactToConfig(conf: Config): AppState {\n        return this.state;\n    }\n}\nexport class SolvingStateM extends CmllStateM {\n    move(move: string): AppState {\n        let state = this.state;\n        let moves = new MoveSeq(move).moves;\n        if (moves.length > 0) {\n            let move = moves[0];\n            let cube = state.cube.state.apply(move);\n            let cmll_solved = CubeUtil.is_cmll_solved(cube);\n            let newState: StateT = cmll_solved ? \"solved\" : \"solving\";\n            return ({\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.cube.state.apply(move),\n                    history: [...state.cube.history, move],\n                },\n                name: newState\n            });\n        }\n        else {\n            // Nothing to apply\n            return state;\n        }\n    }\n}\nexport class SolvedStateM extends CmllStateM {\n    move(move: string): AppState {\n        return this.state;\n    }\n}\n","import { StateFactory} from './AbstractStateM';\nimport { AppState, Mode } from '../Types';\nimport { FbdrStateM, SsStateM, FbStateM} from './BlockTrainerStateM';\nimport { LSEStateM, EOLRStateM } from './LSETrainerStateM';\nimport { SolvingStateM, SolvedStateM } from './CmllStateM';\n\nStateFactory.create = function(state: AppState) {\n        let mode: Mode = state.mode;\n        switch (mode) {\n            case \"fbdr\":\n                return new FbdrStateM(state);\n            case \"ss\":\n                return new SsStateM(state);\n            case \"fb\":\n                return new FbStateM(state);\n            case \"cmll\": {\n                switch (state.name) {\n                    case \"solving\": return new SolvingStateM(state);\n                    case \"solved\": return new SolvedStateM(state);\n                    default: throw new Error(\"impossible\");\n                }\n            }\n            case \"4c\":\n                return new LSEStateM(state);\n            case \"eopair\":\n                return new EOLRStateM(state);\n            case \"experimental\":\n                return new FbStateM(state);\n        }\n        ;\n    }\n\nexport { StateFactory };","import { Action } from \"./Types\";\n\nconst defaultKeyMapping : { [key: string]: string } = {\n    \"I\": \"R\",\n    \"K\": \"R'\",\n    \"W\": \"B\",\n    \"O\": \"B'\",\n    \"S\": \"D\",\n    \"L\": \"D'\",\n    \"D\": \"L\",\n    \"E\": \"L'\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"H\": \"F\",\n    \"G\": \"F'\",\n    \";\": \"y\",\n    \"A\": \"y'\",\n    \"U\": \"r\",\n    \"R\": \"l'\",\n    \"M\": \"r'\",\n    \"V\": \"l\",\n    \"T\": \"x\",\n    \"Y\": \"x\",\n    \"N\": \"x'\",\n    \"B\": \"x'\",\n    \".\": \"M'\",\n    \"X\": \"M'\",\n    \"5\": \"M\",\n    \"6\": \"M\",\n    \"P\": \"z\",\n    \"Q\": \"z'\",\n    \"Z\": \"d\",\n    \"C\": \"u'\",\n    \",\": \"u\",\n    \"/\": \"d'\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n  }\n\n\nconst lseKeyMapping : { [key: string]: string } = {\n    \"I\": \"M'\",\n    \"E\": \"M'\",\n    \"K\": \"M\",\n    \"D\": \"M\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"S\": \"E'\",\n    \"L\": \"E\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n  }\n\n\nexport abstract class KeyMapping {\n    abstract handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) : void;\n}\n\nexport class DefaultKeyMapping extends KeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (defaultKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: defaultKeyMapping[key]\n            });\n        }\n    }\n}\n\nexport class LSEKeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (lseKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: lseKeyMapping[key]\n            });\n        }\n    }\n}","\nimport { AppState, StateT, Action, Mode, Config, FavListAction } from \"../Types\"\nimport { CubieCube } from '../lib/CubeLib';\nimport { setConfig, getConfig, getFavList, setFavList} from '../lib/Local';\nimport { getActiveName } from '../lib/Selector';\nimport { StateFactory } from \"./StateFactory\";\nimport { DefaultKeyMapping, LSEKeyMapping } from \"../KeyMapping\";\n\nexport const getInitialState = (mode?: Mode) : AppState => {\n    mode = mode || \"fbdr\"\n    let initialStateName : StateT = function() {\n        switch (mode){\n            case \"cmll\": return \"solved\"\n            case \"fbdr\":\n            case \"ss\":\n            case \"fb\":\n            case \"4c\":\n            case \"eopair\":\n                return \"revealed\"\n            case \"experimental\":\n                return \"revealed\"\n        }\n    }()\n    let ori = getActiveName(getConfig().orientationSelector) || \"YR\"\n    return {\n        name: initialStateName,\n        mode,\n        scrSource: \"random\",\n        cube: {\n            state: new CubieCube(),\n            ori,\n            history: [],\n        },\n        case: {\n            state: new CubieCube(),\n            desc: []\n        },\n        cubejs: {\n            initialized: false\n        },\n        config: getConfig(),\n        favList: getFavList(),\n        keyMapping: (mode === \"4c\" || mode === \"eopair\") ? new LSEKeyMapping() : new DefaultKeyMapping()\n    }\n}\n\nfunction reduceByFavlist(state: AppState, action: FavListAction) {\n    let favList = state.favList;\n\n    switch (action.action) {\n        case \"add\":\n            favList = [...action.content, ...favList]\n            setFavList(favList)\n            break;\n        case \"remove\": {\n        // only remove one at a time for now\n            const rem = action.content[0]\n            favList = favList.filter((value) => {\n                return !(value.mode === rem.mode && value.setup === rem.setup && value.solver === rem.solver)\n            })\n            setFavList(favList)\n            break;\n        };\n        case \"replay\": {\n            return StateFactory.create(state).replay(action.content[0])\n        }\n    }\n    return {\n        ...state,\n        favList\n    }\n}\n\nexport function reducer(state: AppState, action: Action): AppState {\n    // todo: cache values based on this\n    // console.log(\"prev state\", state)\n    switch (action.type) {\n        case \"key\": {\n            let newState = reduceByKey(state, action.content)\n            return newState\n        };\n        case \"config\": {\n            // LESSON: Object.assign is dangerous\n            let newConfig = {...state.config, ...action.content}\n            setConfig(newConfig)\n            let newState = reduceByConfig(state, newConfig)\n            return {\n                ...newState,\n                config: newConfig\n            }\n        };\n        case \"mode\": {\n            let mode = action.content\n            window.location.hash = mode\n            state = getInitialState(mode)\n            return state\n        };\n        case \"scrSource\":\n            return {\n                ...state,\n                scrSource: action.content\n            }\n        case \"favList\":\n            return reduceByFavlist(state, action)\n        default:\n            return state\n        }\n}\n\n\nfunction reduceByKey(state: AppState, code: string): AppState {\n    if (code === \"\") return state;\n\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    if (code[0] === \"#\") {\n        return stateM.control(code)\n    } else {\n        return stateM.move(code)\n    }\n}\nfunction reduceByConfig(state: AppState, conf: Config): AppState {\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    return stateM.reactToConfig(conf)\n}","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  name: \"bright\",\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#d32f2f',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#eeeeef',\n      paper: '#fff'\n    },\n    text: {\n      primary: '#000',\n      secondary: '#888',\n      hint: '#556cd6'\n    }\n  },\n\n});\nconst themeDark = createMuiTheme({\n  name: \"dark\",\n  palette: {\n    primary: {\n      main: '#9FA4C2', // '#757575',\n    },\n    secondary: {\n      main: '#ffffff', //f55057',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#121212',\n      paper: '#252525' //#424242'\n    },\n    text: {\n      primary: '#fff',\n      secondary: '#ddd',\n      hint: '#eee'\n    }\n  },\n\n});\n\nexport { theme, themeDark };","import React from 'react'\nimport AppView from \"../components/AppView\"\nimport { reducer, getInitialState } from '../reducers/Reducer'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme, themeDark } from '../theme';\nimport { getActiveName } from '../lib/Selector';\n\nwindow.addEventListener('keypress', function(e) {\n  if(e.keyCode === 32 && e.target === document.body) {\n    e.preventDefault();\n  }\n});\n\nfunction App(props: {}) {\n  const [state, dispatch] = React.useReducer( reducer, getInitialState() )\n\n  // Add event listeners\n  React.useEffect(() => {\n    function downHandler(event: KeyboardEvent) {\n      state.keyMapping.handle(event, dispatch);\n    }\n    window.addEventListener('keydown', downHandler);\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n    };\n  });\n\n  const appTheme = getActiveName(state.config.theme) === \"bright\" ? theme : themeDark\n  return (\n    <ThemeProvider theme={appTheme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <AppView state={state} dispatch={dispatch} />\n    </ThemeProvider>\n  )\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function createArray(length) {\n\tconst arr = Array(length);\n\tfor (var i=0; i<length; i++) {\n\t\tarr[i] = 0;\n\t}\n\treturn arr;\n}\n\nfunction createArrays(length1, length2) {\n\tconst arr = Array(length1);\n\tfor (var i=0; i<length1; i++) {\n\t\tarr[i] = Array(length2);\n\t\tfor (var j=0; j<length2; j++) {\n\t\t\tarr[i][j] = 0;\n\t\t}\n\t}\n\treturn arr;\n}\n\nfunction bitOdd(i) {\n\ti ^= i >>> 1;\n\ti ^= i >>> 2;\n\ti ^= i >>> 4;\n\ti ^= i >>> 8;\n\treturn i & 1;\n}\n\nfunction bitCount(i) {\n\ti = i - ((i >>> 1) & 0x55555555);\n\ti = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n\treturn (i + (i >>> 8) + (i >>> 4)) & 0x0f;\n}\n\nfunction get4Parity(idx) {\n\tvar p = 0;\n\tfor (var i=2; i>=0; i--) {\n\t\tp += idx % (4-i);\n\t\tidx = ~~(idx / (4-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get8Parity(idx) {\n\tvar p = 0;\n\tfor (var i=6; i>=0; i--) {\n\t\tp += idx % (8-i);\n\t\tidx = ~~(idx / (8-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get12Parity(idx) {\n\tvar p = 0;\n\tfor (var i=10; i>=0; i--) {\n\t\tp += idx % (12-i);\n\t\tidx = ~~(idx / (12-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\n\nfunction binarySearch(arr, key) {\n\tvar length = arr.length;\n\tif (key <= arr[length-1]) {\n\t\tvar l = 0;\n\t\tvar r = length-1;\n\t\twhile (l <= r) {\n\t\t\tvar mid = (l+r)>>>1;\n\t\t\tvar val = arr[mid];\n\t\t\tif (key > val) {\n\t\t\t\tl = mid + 1;\n\t\t\t} else if (key < val) {\n\t\t\t\tr = mid - 1;\n\t\t\t} else {\n\t\t\t\treturn (mid);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0xffff;\n}\n\nvar fact = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600];\nvar perm3 = [[11, 10, 9], [10, 11, 9], [11, 9, 10], [9, 11, 10], [10, 9, 11], [9, 10, 11]];\nvar ud2std = [0, 1, 2, 4, 7, 9, 10, 11, 13, 16];\nvar std2ud = createArray(18);\nvar Cnk = createArrays(12, 13);\nvar move2str = [\"U \", \"U2\", \"U'\", \"R \", \"R2\", \"R'\", \"F \", \"F2\", \"F'\", \"D \", \"D2\", \"D'\", \"L \", \"L2\", \"L'\", \"B \", \"B2\", \"B'\"];\nvar urfMove = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17], \n\t\t\t\t\t\t\t\t\t\t\t[6, 7, 8, 0, 1, 2, 3, 4, 5,15,16,17, 9,10,11,12,13,14],\n\t\t\t\t\t\t\t\t\t\t\t[3, 4, 5, 6, 7, 8, 0, 1, 2,12,13,14,15,16,17, 9,10,11],\n\t\t\t\t\t\t\t\t\t\t\t[2, 1, 0, 5, 4, 3, 8, 7, 6,11,10, 9,14,13,12,17,16,15], \n\t\t\t\t\t\t\t\t\t\t\t[8, 7, 6, 2, 1, 0, 5, 4, 3,17,16,15,11,10, 9,14,13,12],\n\t\t\t\t\t\t\t\t\t\t\t[5, 4, 3, 8, 7, 6, 2, 1, 0,14,13,12,17,16,15,11,10, 9]];\nfor (var i=0; i<12; i++) {\n\tCnk[i][0] = 1;\n\tCnk[i][i] = 1;\n\tCnk[i][i+1] = 0;\n\tfor (var j=1; j<i; j++) {\n\t\tCnk[i][j] = (Cnk[i-1][j-1] + Cnk[i-1][j]);\n\t}\n}\nfor (var i=0; i<10; i++) {\n\tstd2ud[ud2std[i]] = i;\n}\n\nvar ckmv = Array(19);//new boolean[19][18];\nvar ckmv2 = Array(11);//new boolean[11][10];\nckmv[18] = Array(18);\nckmv2[10] = Array(10);\nfor (var i=0; i<18; i++) {\n\tckmv[i] = Array(18);\n\tfor (var j=0; j<18; j++) {\n\t\tckmv[i][j] = (~~(i/3) == ~~(j/3)) || ((~~(i/3)%3 == ~~(j/3)%3) && (i>=j));\n\t}\n\tckmv[18][i] = false;\n}\nfor (var i=0; i<10; i++) {\n\tckmv2[i] = Array(10);\n\tfor (var j=0; j<10; j++) {\n\t\tckmv2[i][j] = ckmv[ud2std[i]][ud2std[j]];\n\t}\n\tckmv2[10][i] = false;\n}\n\n\n//********************************************************************************//\n\nfunction CubieCube() {\n\tthis.cp = [0, 1, 2, 3, 4, 5, 6, 7];\n\tthis.co = [0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.ep = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\tthis.eo = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.getFlip = function getFlip() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tidx |= this.eo[i] << i;\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getFlipSym = function getFlipSym() {\n\t\tif (FlipR2S != 0) {\n\t\t\treturn FlipR2S[this.getFlip()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(FlipS2R, temps.getFlip());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tthis.setFlip = function setFlip(idx) {\n\t\tthis.eo[11] = bitOdd(idx);\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tthis.eo[i] = idx & 1;\n\t\t\tidx >>>= 1;\n\t\t}\n\t}\n\t\n\tthis.getTwist = function getTwist() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<7; i++) {\n\t\t\tidx *= 3;\n\t\t\tidx += this.co[i];\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getTwistSym = function getTwistSym() {\n\t\tif (TwistR2S != null) {\n\t\t\treturn TwistR2S[this.getTwist()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tlet idx = binarySearch(TwistS2R, temps.getTwist());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\n\tthis.setTwist = function setTwist(idx) {\n\t\tvar twst = 0;\n\t\tfor (var i=6; i>=0; i--) {\n\t\t\ttwst += this.co[i] = idx % 3;\n\t\t\tidx = ~~(idx/3);\n\t\t}\n\t\tthis.co[7] = (15 - twst) % 3;\n\t}\n\t\n\tthis.getUDSlice = function getUDSlice() {\n\t\tvar idx = 0;\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (this.ep[i] >= 8) {\n\t\t\t\tidx += Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t}\n\n\tthis.setUDSlice = function setUDSlice(idx) {\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (idx >= Cnk[11-i][r]) {\n\t\t\t\tidx -= Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t\tthis.ep[i] = (11-r);\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (i+r-4);\n\t\t\t}\n\t\t}\n\t}\n\tthis.getMPerm = function getMPerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=8; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\n\t}\t\n\tthis.setMPerm = function setMPerm(idx) {\n\t\tthis.ep[11] = 8;\n\t\tfor (var i=10; i>=8; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i) + 8);\n\t\t\tidx = ~~(idx / (12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getMid3 = function getMid3() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] >= 9) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\n\t}\n\t\n\tthis.setMid3 = function setMid3(idxA) {\n\t\tvar edge = perm3[idxA % 6];\n\t\tidxA = ~~(idxA / 6);\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (idxA >= Cnk[i][r]) {\n\t\t\t\tidxA -= Cnk[i][r--];\n\t\t\t\tthis.ep[i] = edge[2-r];\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (8-i+r);\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getURtoUL = function getURtoUL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] <= 2) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\n\n\tthis.getDRtoDL = function getDRtoDL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (4 <= this.ep[i] && this.ep[i] <= 6) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\t\n\n\tthis.setEdgePerm = function setEdgePerm(idx) {\n\t\tthis.ep[11] = 0;\n\t\tfor (var i=10; i>=0; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i));\n\t\t\tidx = ~~(idx/(12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\t\t\n\t}\n\t\n\tthis.getEdgePerm = function getEdgePerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=0; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\t\t\n\t}\n\n\tthis.getCPermSym = function getCPermSym() {\n\t\tif (EPermR2S != null) {\n\t\t\tvar idx = EPermR2S[get8Perm(this.cp)];\n\t\t\tidx ^= e2c[idx&0x0f];\n\t\t\treturn idx;\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(CPermS2R, get8Perm(temps.cp));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tthis.getEPermSym = function getEPermSym() {\t\n\t\tif (EPermR2S != null) {\n\t\t\treturn EPermR2S[get8Perm(this.ep)];\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(EPermS2R, get8Perm(temps.ep));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\t\n\n\tthis.URFConjugate = function URFConjugate() {\n\t\tCornMult(urf2, this, temps);\n\t\tCornMult(temps, urf1, this);\t\t\n\t\tEdgeMult(urf2, this, temps);\n\t\tEdgeMult(temps, urf1, this);\t\t    \t\t\n\t}\n\t\n\tthis.invCubieCube = function invCubieCube() {\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.ep[this.ep[edge]] = edge;\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.eo[edge] = this.eo[temps.ep[edge]];\n\t\tfor (var corn=0; corn<8; corn++)\n\t\t\ttemps.cp[this.cp[corn]] = corn;\n\t\tfor (var corn=0; corn<8; corn++) {\n\t\t\tvar ori = this.co[temps.cp[corn]];\n\t\t\ttemps.co[corn] = -ori;\n\t\t\tif (temps.co[corn] < 0)\n\t\t\t\ttemps.co[corn] += 3;\n\t\t}\n\t\tthis.copy(temps);\n\t}\n\n\n\tthis.init = function init(cperm, twist, eperm, flip) {\n\t\tset8Perm(this.cp, cperm);\n\t\tthis.setTwist(twist);\n\t\tthis.setEdgePerm(eperm);\n\t\tthis.setFlip(flip);\n\t}\n\t\n\tthis.copy = function copy(c) {\n\t\tfor (var i=0; i<8; i++) {\n\t\t\tthis.cp[i] = c.cp[i];\n\t\t\tthis.co[i] = c.co[i];\n\t\t}\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tthis.ep[i] = c.ep[i];\n\t\t\tthis.eo[i] = c.eo[i];\n\t\t}\n\t}\n}\n\nconst cctemp = new CubieCube();\nconst temps = new CubieCube();\n\nfunction set8Perm(arr, idx) {\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar p = fact[7-i];\n\t\tvar v = ~~(idx / p);\n\t\tidx %= p;\n\t\tv <<= 2;\n\t\tarr[i] = ((val >> v) & 7);\n\t\tvar m = (1 << v) - 1;\n\t\tval = (val & m) + ((val >> 4) & ~m);\n\t}\n\tarr[7] = val;\n}\n\nfunction get8Perm(arr) {\n\tvar idx = 0;\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar v = arr[i] << 2;\n\t\tidx = (8 - i) * idx + ((val >> v) & 7);\n\t\tval -= 0x11111110 << v;\n\t}\n\treturn idx;\t\n}\n\nfunction CornMult(a, b, prod) {\n\tfor (var corn=0; corn<8; corn++) {\n\t\tprod.cp[corn] = a.cp[b.cp[corn]];\n\t\tvar oriA = a.co[b.cp[corn]];\n\t\tvar oriB = b.co[corn];\n\t\tvar ori = oriA;\n\t\tori += (oriA<3) ? oriB : 3-oriB;\n\t\tori %= 3;\n\t\tif (oriA < 3 ^ oriB < 3) {\n\t\t\tori += 3;\n\t\t}\n\t\tprod.co[corn] = ori;\n\t}\n}\t\n\nfunction EdgeMult(a, b, prod) {\n\tfor (var ed=0; ed<12; ed++) {\n\t\tprod.ep[ed] = a.ep[b.ep[ed]];\n\t\tprod.eo[ed] = (b.eo[ed] ^ a.eo[b.ep[ed]]);\n\t}\n}\n\nfunction CornConjugate(a, idx, b) {\n\tCornMult(CubeSym[SymInv[idx]], a, cctemp);\n\tCornMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nfunction EdgeConjugate(a, idx, b) {\n\tEdgeMult(CubeSym[SymInv[idx]], a, cctemp);\n\tEdgeMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nvar CubeSym = Array(16);\nvar moveCube = Array(18);\nvar SymInv = Array(16);\nvar SymMult = Array(16);\nvar SymMove = Array(16);\nvar Sym8Mult = Array(8);\nvar Sym8Move = Array(8);\nvar Sym8MultInv = Array(8);\nvar SymMoveUD = Array(16);\nvar FlipS2R = Array(336);\nvar TwistS2R = Array(324);\nvar CPermS2R = Array(2768);\nvar EPermS2R = CPermS2R;\nvar FlipR2S = Array(2048);\nvar TwistR2S = Array(2187);\nvar EPermR2S = createArray(40320);\nfor (var i=0; i<40320; i++) {\n\tEPermR2S[i] = 0;\n}\nvar MtoEPerm = Array(40320);\nvar merge = Array(56);\nvar e2c = [0, 0, 0, 0, 1, 3, 1, 3, 1, 3, 1, 3, 0, 0, 0, 0];\nconst urf1 = new CubieCube();\nurf1.init(2531, 1373, 67026819, 1877);\nconst urf2 = new CubieCube();\nurf2.init(2089, 1906, 322752913, 255);\n\n\nfunction CubieInit() {\n\tvar mc = Array(6);\n\tmc[0] = new CubieCube();\n\tmc[0].init(15120, 0, 119750400, 0);\n\tmc[1] = new CubieCube();\n\tmc[1].init(21021, 1494, 323403417, 0);\n\tmc[2] = new CubieCube();\n\tmc[2].init(8064, 1236, 29441808, 802);\n\tmc[3] = new CubieCube();\n\tmc[3].init(9, 0, 5880, 0);\n\tmc[4] = new CubieCube();\n\tmc[4].init(1230, 412, 2949660, 0);\n\tmc[5] = new CubieCube();\n\tmc[5].init(224, 137, 328552, 1160);\n\tfor (var m=0; m<6; m++) {\n\t\tmoveCube[m*3] = mc[m];\n\t\tfor (var p=0; p<2; p++) {\n\t\t\tmoveCube[m*3+p+1] = new CubieCube();\n\t\t\tEdgeMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t\tCornMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t}\n\t}\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar temp;\n\tvar f2 = new CubieCube();\n\tf2.init(28783, 0, 259268407, 0);\n\tvar u4 = new CubieCube();\n\tu4.init(15138, 0, 119765538, 1792);\n\tvar lr2 = new CubieCube();\n\tlr2.init(5167, 0, 83473207, 0);\n\tlr2.co = [ 3, 3, 3, 3, 3, 3, 3, 3 ];\n\tfor (var i=0; i<16; i++) {\n\t\tSymMult[i] = Array(16);\n\t\tSymMove[i] = Array(18);\n\t\tSymMoveUD[i] = Array(10);\n\t\tCubeSym[i] = new CubieCube();\n\t\tCubeSym[i].copy(c);\n\t\tCornMult(c, u4, d);\n\t\tEdgeMult(c, u4, d);\n\t\ttemp = d;\td = c;\tc = temp;\n\t\tif (i % 4 == 3) {\n\t\t\tCornMult(c, lr2, d);\n\t\t\tEdgeMult(c, lr2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\t\t\t\t\n\t\t}\n\t\tif (i % 8 == 7) {\n\t\t\tCornMult(c, f2, d);\n\t\t\tEdgeMult(c, f2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\n\t\t}\n\t}\n\n\tfor (var j=0; j<16; j++) {\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornMult(CubeSym[j], CubeSym[k], c);\n\t\t\tif (c.cp[0] == 0 && c.cp[1] == 1 && c.cp[2] == 2) {\n\t\t\t\tSymInv[j] = k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i=0; i<16; i++) {\n\t\tfor (var j=0; j<16; j++) {\n\t\t\tCornMult(CubeSym[i], CubeSym[j], c);\n\t\t\tfor (var k=0; k<16; k++) {\n\t\t\t\tif (CubeSym[k].cp[0] == c.cp[0] && CubeSym[k].cp[1] == c.cp[1] && CubeSym[k].cp[2] == c.cp[2]) {\n\t\t\t\t\tSymMult[i][j] = k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tCornConjugate(moveCube[j], SymInv[s], c);\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar found = 1;\n\t\t\t\tfor (var i=0; i<8; i++) {\n\t\t\t\t\tif (c.cp[i] != moveCube[m].cp[i] || c.co[i] != moveCube[m].co[i]) {\n\t\t\t\t\t\tfound = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found) {\n\t\t\t\t\tSymMove[s][j] = m;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<10; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tSymMoveUD[s][j] = std2ud[SymMove[s][ud2std[j]]];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tSym8Mult[j] = Array(8);\n\t\tSym8Move[j] = Array(18);\n\t\tSym8MultInv[j] = Array(8);\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Mult[j][s] = (SymMult[j<<1][s<<1]>>>1);\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Move[s][j] = SymMove[s<<1][j];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8MultInv[j][s] = Sym8Mult[j][SymInv[s<<1]>>1];\n\t\t}\n\t}\n\n\tconst occ = new Array(1260);\n\n\tvar count = 0;\n\tfor (var i=0; i<64; occ[i++] = 0);\n\n\tfor (var i=0; i<2048; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setFlip(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = d.getFlip();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tFlipR2S[idx] = ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tFlipS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\tcount = 0;\n\tfor (var i=0; i<69; occ[i++] = 0);\n\tfor (var i=0; i<2187; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setTwist(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tCornConjugate(c, s, d);\n\t\t\t\tvar idx = d.getTwist();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tTwistR2S[idx] =  ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tTwistS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\n\tvar mask = Array(56);\n\tfor (var i=0; i<56; i++) {\n\t\tmask[i] = Array(2);\n\t\tmerge[i] = Array(56);\n\t}\n\tfor (var i=0; i<40320; i++) {\n\t\tset8Perm(c.ep, i);\n\t\tvar a = ~~(c.getURtoUL() / 6);\n\t\tvar b = ~~(c.getDRtoDL() / 6);\n\t\tmask[a][b>>>5] |= 1 << (b&0x1f);\n\t}\n\t\n\tfor (var i=0; i<56; i++) {\n\t\tcount = 0;\n\t\tfor (var j=0; j<56; j++) {\n\t\t\tif ((mask[i][j>>>5]&(1<<(j&0x1f))) != 0) {\n\t\t\t\tmerge[i][j] = count++;\n\t\t\t}\n\t\t}\n\t}\n\tcount = 0;\n\tfor (var i=0; i<1260; occ[i++] = 0);\n\tfor (var i=0; i<40320; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tset8Perm(c.ep, i);\n\t\t\tfor (var s=0; s<16; s++) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = get8Perm(d.ep);\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tvar a = d.getURtoUL();\n\t\t\t\tvar b = d.getDRtoDL();\n\t\t\t\tvar m = (merge[~~(a/6)][~~(b/6)] * 4032 + a * 12 + b % 6 * 2 + get8Parity(idx));\n\t\t\t\tMtoEPerm[m] = (count << 4 | s);\n\t\t\t\tEPermR2S[idx] = (count << 4 | s);\n\t\t\t}\n\t\t\tEPermS2R[count++] = i;\n\t\t}\n\t}\n}\n\nvar UDSliceMove = Array(495);//new char[495][18];\nvar TwistMove = Array(324);//new char[324][18];\nvar FlipMove = Array(336);//new char[336][18];\nvar UDSliceConj = Array(495);//new char[495][8];\nvar UDSliceTwistPrun = Array(495*324);//new byte[495 * 324];\nvar UDSliceFlipPrun = Array(495*336);//new byte[495 * 336];\n\t\nvar TwistFlipPrun = Array(336*324*8);//new byte[336 * 324 * 8];\n\t\n\t//phase1to2\nvar Mid3Move = Array(1320);//new char[1320][18];\nvar Mid32MPerm = Array(24);//new byte[24];\nvar CParity = Array(87);//new byte[2768/8];\n\n\t//phase2\nvar CPermMove = Array(2768);//new char[2768][18];\nvar EPermMove = Array(2768);//new char[2768][10];\nvar MPermMove = Array(24);//new byte[24][10];\nvar MPermConj = Array(24);//new byte[24][16];\nvar MCPermPrun = Array(24*2768);//new byte[24*2768];\nvar MEPermPrun = Array(24*2768);//new byte[24*2768];\n\n\nfunction CoordInit() {\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar i, j;\n\tfor (i=0; i<2768; i++) {\n\t\tCPermMove[i] = Array(18);\n\t\tset8Perm(c.cp, CPermS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tCPermMove[i][j] = d.getCPermSym();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<2768; i++) {\n\t\tEPermMove[i] = Array(10);\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tEPermMove[i][j] = d.getEPermSym();\n\t\t}\n\t}\n\tfor (i=0; i<336; i++) {\n\t\tFlipMove[i] = Array(18);\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tFlipMove[i][j] = d.getFlipSym();\n\t\t}\n\t}\n\tfor (i=0; i<324; i++) {\n\t\tTwistMove[i] = Array(18);\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tTwistMove[i][j] = d.getTwistSym();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceMove[i] = Array(18);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tUDSliceMove[i][j] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceConj[i] = Array(8);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<16; j+=2) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tUDSliceConj[i][j>>>1] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<1320; i++) {\n\t\tMid3Move[i] = Array(18);\n\t\tc.setMid3(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tMid3Move[i][j] = d.getMid3();\n\t\t}\n\t}\t\n\tfor (i=0; i<24; i++) {\n\t\tc.setMPerm(i);\n\t\tMid32MPerm[c.getMid3() % 24] = i;\n\t}\n\tfor (i=0; i<2768; i++) {\n\t\tCParity[i>>>3] |= (get8Parity(CPermS2R[i])) << (i & 7);\n\t}\n\tfor (i=0; i<24; i++) {\n\t\tMPermMove[i] = Array(10);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tMPermMove[i][j] = d.getMPerm();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<24; i++) {\n\t\tMPermConj[i] = Array(16);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<16; j++) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tMPermConj[i][j] = d.getMPerm();\n\t\t}\n\t}\n\t\n\tvar SymState = Array(324);\n\tfor (i=0; i<324; i++) {\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tCornConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(TwistS2R, d.getTwist()) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tvar SymStateF = Array(324);\n\tfor (i=0; i<336; i++) {\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tEdgeConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(FlipS2R, d.getFlip()) != 0xffff) {\n\t\t\t\tSymStateF[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\t\t\n\tfor (i=0; i<336*324*8; i++) {\n\t\tTwistFlipPrun[i] = -1;\n\t}\n\tfor (i=0; i<8; i++) {\n\t\tTwistFlipPrun[i] = 0;\n\t}\n\tvar depth = 0;\n\tvar done = 8;\n\tvar inv;\n\tvar select;\n\tvar check;\n\t\n\twhile (done < 336*324*8) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<336*324*8; i++) {\n\t\t\tif (TwistFlipPrun[i] != select)\n\t\t\t\tcontinue;\n\t\t\tvar twist = ~~(i / 2688);\n\t\t\tvar flip = i % 2688;\n\t\t\tvar fsym = i & 7;\n\t\t\tflip >>>= 3;\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\tvar tsymx = twistx & 7;\n\t\t\t\ttwistx >>>= 3;\n\t\t\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\t\t\tvar fsymx = Sym8MultInv[Sym8Mult[flipx & 7][fsym]][tsymx];\n\t\t\t\tflipx >>>= 3;\n\t\t\t\tvar idx = twistx * 2688 + (flipx << 3 | fsymx);\n\t\t\t\tif (TwistFlipPrun[idx] == check) {\n\t\t\t\t\tdone++;\n\t\t\t\t\tif (inv) {\n\t\t\t\t\t\tTwistFlipPrun[i] = depth;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTwistFlipPrun[idx] = depth;\n\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\tvar symF = SymStateF[flipx];\n\t\t\t\t\t\tif (sym != 1 || symF != 1) {\n\t\t\t\t\t\t\tfor (var j=0; j<8; j++, symF >>= 1) {\n\t\t\t\t\t\t\t\tif ((symF & 1) == 1) {\n\t\t\t\t\t\t\t\t\tvar fsymxx = Sym8MultInv[fsymx][j];\n\t\t\t\t\t\t\t\t\tfor (var k=0; k<8; k++) {\n\t\t\t\t\t\t\t\t\t\tif ((sym & (1 << k)) != 0) {\n\t\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymxx][k]);\n\t\t\t\t\t\t\t\t\t\t\tif (TwistFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tTwistFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n\tfor (i=0; i<495*324; i++) {\n\t\tUDSliceTwistPrun[i] = -1;\n\t}\n\tUDSliceTwistPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 324) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*324; i++) {\n\t\t\tif (UDSliceTwistPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar twist = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\t\tvar symx = twistx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\ttwistx >>>= 3;\n\t\t\t\t\tvar idx = twistx * 495 + slicex;\n\t\t\t\t\tif (UDSliceTwistPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceTwistPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceTwistPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceTwistPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceTwistPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\n\tfor (i=0; i<495*336; i++) {\n\t\tUDSliceFlipPrun[i] = -1;\n\t}\n\tUDSliceFlipPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 336) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*336; i++) {\n\t\t\tif (UDSliceFlipPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar flip = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar flipx = FlipMove[flip][m];\n\t\t\t\t\tvar symx = flipx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\tflipx >>>= 3;\n\t\t\t\t\tvar idx = flipx * 495 + slicex;\n\t\t\t\t\tif (UDSliceFlipPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceFlipPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceFlipPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymStateF[flipx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = flipx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tdepth++;\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\n\t\n\tSymState = Array(2768);\n\tfor (i=0; i<2768; i++) {\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=1; j<16; j++) {\n\t\t\tEdgeConjugate(c, j, d);\n\t\t\tif (binarySearch(EPermS2R, get8Perm(d.ep)) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tfor (i=0; i<24*2768; i++) {\n\t\tMEPermPrun[i] = -1;\n\t}\n\tMEPermPrun[0] = 0;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MEPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar edge = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar edgex = EPermMove[edge][m];\n\t\t\t\t\tvar symx = edgex & 15;\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tedgex >>>= 4;\n\t\t\t\t\tvar idx = edgex * 24 + midx;\n\t\t\t\t\tif (MEPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMEPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMEPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[edgex];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = edgex * 24 + MPermConj[midx][j];\n\t\t\t\t\t\t\t\t\t\tif (MEPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMEPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\t\t\n\tfor (i=0; i<24*2768; i++) {\n\t\tMCPermPrun[i] = -1;\n\t}\n\tMCPermPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MCPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar corn = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar cornx = CPermMove[corn][ud2std[m]];\n\t\t\t\t\tvar symx = (cornx & 15);\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tcornx >>>= 4;\n\t\t\t\t\tvar idx = cornx * 24 + midx;\n\t\t\t\t\tif (MCPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMCPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMCPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[cornx];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = cornx * 24 + MPermConj[midx][j ^ e2c[j]];\n\t\t\t\t\t\t\t\t\t\tif (MCPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMCPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n}\t\t\t\t\t\n\nfunction randomCube() {\n\tvar eperm;\n\tvar cperm;\n\tdo {\n\t\teperm = ~~(Math.random() * 479001600);\n\t\tcperm = ~~(Math.random() * 40320);\n\t} while (((get8Parity(cperm) ^ get12Parity(eperm))) != 0);\n\tvar c = new CubieCube();\n\tc.init(cperm, ~~(Math.random() * 2187), eperm, ~~(Math.random() * 2048));\n\treturn c;\n}\n\nvar move = Array(31);\n\nvar corn = Array(20);\nvar csym = Array(20);\nvar mid3 = Array(20);\nvar e1 = Array(20);\nvar e2 = Array(20);\nvar urfidx;\n\nvar twist = Array(6);\nvar tsym = Array(6);\nvar flip = Array(6);\nvar fsym = Array(6);\nvar slice = Array(6);\nvar corn0 = Array(6);\nvar csym0 = Array(6);\nvar mid30 = Array(6);\nvar e10 = Array(6);\nvar e20 = Array(6);\nvar prun = Array(6);\n\nvar length1 = 0;\nvar maxlength2 = 0;\nvar sol = 999;\nvar valid1 = 0;\nvar valid2 = 0;\nvar solution = \"\";\nvar useSeparator = false;\n\nfunction Solve(c) {\n\tc.temps = new CubieCube();\n\tfor (var i=0; i<6; i++) {\n\t\ttwist[i] = c.getTwistSym();\n\t\ttsym[i] = twist[i] & 7;\n\t\ttwist[i] >>>= 3;\n\t\tflip[i] = c.getFlipSym();\n\t\tfsym[i] = flip[i] & 7;\n\t\tflip[i] >>>= 3;\n\t\tslice[i] = c.getUDSlice();\n\t\tcorn0[i] = c.getCPermSym();\n\t\tcsym0[i] = corn0[i] & 15;\n\t\tcorn0[i] >>>= 4;\n\t\tmid30[i] = c.getMid3();\n\t\te10[i] = c.getURtoUL();\n\t\te20[i] = c.getDRtoDL();\n\t\tprun[i] = Math.max(Math.max(UDSliceTwistPrun[twist[i] * 495 + UDSliceConj[slice[i]][tsym[i]]],\n\t\t\t\t\t\tUDSliceFlipPrun[flip[i] * 495 + UDSliceConj[slice[i]][fsym[i]]]),\n\t\t\t\t\t\tTwistFlipPrun[twist[i] * 2688 + (flip[i] << 3 | Sym8MultInv[fsym[i]][tsym[i]])]);\n\t\tc.URFConjugate();\n\t\tif (i==2) {\n\t\t\tc.invCubieCube();\n\t\t}\n\t}\n\tsolution = null;\n\tsol = 22;\n\tfor (length1=0; length1<sol; length1++) {\n\t\tmaxlength2 = Math.min(sol/2+1, sol-length1);\n\t\tfor (urfidx=0; urfidx<6; urfidx++) {\n\t\t\tcorn[0] = corn0[urfidx];\n\t\t\tcsym[0] = csym0[urfidx];\n\t\t\tmid3[0] = mid30[urfidx];\n\t\t\te1[0] = e10[urfidx];\n\t\t\te2[0] = e20[urfidx];\n\t\t\tif ((prun[urfidx] <= length1)\n\t\t\t\t\t&& phase1(twist[urfidx], tsym[urfidx], flip[urfidx], fsym[urfidx],\n\t\t\t\t\t\t\t\tslice[urfidx], length1, 18)) {\n\t\t\t\tif (solution == null) {\n\t\t\t\t\treturn \"Error 8\";\n\t\t\t\t} else {\n\t\t\t\t\treturn solution;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn \"Error 7\";\n}\n\nfunction phase1(twist, tsym, flip, fsym, slice, maxl, lm) {\n\tif (twist==0 && flip==0 && slice==0 && maxl < 5) {\n\t\treturn maxl == 0 && init2();\n\t}\n\tfor (var m=0; m<18; m++) {\n\t\tif (ckmv[lm][m]) {\n\t\t\tm+=2;\n\t\t\tcontinue;\n\t\t}\n\t\tvar slicex = UDSliceMove[slice][m];\n\t\tvar twistx = TwistMove[twist][Sym8Move[tsym][m]];\n\t\tvar tsymx = Sym8Mult[twistx & 7][tsym];\n\t\ttwistx >>>= 3;\n\t\tif (UDSliceTwistPrun[twistx * 495 + UDSliceConj[slicex][tsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\tvar fsymx = Sym8Mult[flipx & 7][fsym];\n\t\tflipx >>>= 3;\n\t\tif (TwistFlipPrun[twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymx][tsymx])] >= maxl\n\t\t\t\t||UDSliceFlipPrun[flipx * 495 + UDSliceConj[slicex][fsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[length1-maxl] = m;\n\t\tvalid1 = Math.min(valid1, length1-maxl);\n\t\tif (phase1(twistx, tsymx, flipx, fsymx, slicex, maxl-1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction init2() {\n//\tif (System.currentTimeMillis() > timeOut) {\n//\t\treturn true;\n//\t}\n\tvalid2 = Math.min(valid2, valid1);\n\tfor (var i=valid1; i<length1; i++) {\n\t\tvar m = move[i];\n\t\tcorn[i+1] = CPermMove[corn[i]][SymMove[csym[i]][m]];\n\t\tcsym[i+1] = SymMult[corn[i+1] & 15][csym[i]];\n\t\tcorn[i+1] >>>= 4;\n\t\tmid3[i+1] = Mid3Move[mid3[i]][m];\n\t}\n\tvalid1 = length1;\n\tvar mid = Mid32MPerm[mid3[length1] % 24];\n\tvar prun = MCPermPrun[corn[length1] * 24 + MPermConj[mid][csym[length1]]];\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\tfor (var i=valid2; i<length1; i++) {\n\t\te1[i+1] = Mid3Move[e1[i]][move[i]];\n\t\te2[i+1] = Mid3Move[e2[i]][move[i]];\n\t}\n\tvalid2 = length1;\n\tvar cornx = corn[length1];\n\tvar ex = merge[~~(e1[length1]/6)][~~(e2[length1]/6)] * 4032\n\t\t\t\t + e1[length1] * 12 + e2[length1] % 6 * 2 + (((CParity[cornx>>>3]>>>(cornx&7))&1) ^ get4Parity(mid));\n\tvar edge = MtoEPerm[ex];\n\tvar esym = edge & 15;\n\tedge >>>= 4;\n\t\tprun = Math.max(MEPermPrun[edge * 24 + MPermConj[mid][esym]], prun);\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\t\tvar lm = length1==0 ? 10 : std2ud[~~(move[length1-1]/3)*3+1];\n\tfor (var i=prun; i<maxlength2; i++) {\n\t\tif (phase2(edge, esym, corn[length1], csym[length1], mid, i, length1, lm)) {\n\t\t\tsol = length1 + i;\n\t\t\tvar sb = \"\";\n\t\t\tvar urf = urfidx;\n//\t\t\tif (inverse) {\n\t\t\t\turf = (urf + 3) % 6;\n//\t\t\t}\n\t\t\tif (urf < 3) {\n\t\t\t\tfor (var s=0; s<length1; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1; s<sol; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var s=sol-1; s>=length1; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1-1; s>=0; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// sb += \"(\" + sol + \"f)\";\n\t\t\tsolution = sb;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction phase2(edge, esym, corn, csym, mid, maxl, depth, lm) {\n\tif (edge==0 && corn==0 && mid==0) {\n\t\treturn true;\n\t}\n\tfor (var m=0; m<10; m++) {\n\t\tif (ckmv2[lm][m]) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar midx = MPermMove[mid][m];\n\t\tvar edgex = EPermMove[edge][SymMoveUD[esym][m]];\n\t\tvar esymx = SymMult[edgex & 15][esym];\n\t\tedgex >>>= 4;\n\t\tif (MEPermPrun[edgex * 24 + MPermConj[midx][esymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar cornx = CPermMove[corn][SymMove[csym][ud2std[m]]];\n\t\tvar csymx = SymMult[cornx & 15][csym];\n\t\tcornx >>>= 4;\n\t\tif (MCPermPrun[cornx * 24 + MPermConj[midx][csymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[depth] = ud2std[m];\n\t\tif (phase2(edgex, esymx, cornx, csymx, midx, maxl-1, depth+1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nvar initialized = false;\n\nfunction initialize() {\n\tif (initialized) {\n\t\treturn;\n\t}\n\tCubieInit();\n\tCoordInit();\n\tinitialized = true;\n}\n\nfunction solve(c) {\n\tinitialize();\n\tconst cc = new CubieCube();\n\tcc.cp = c.cp;\n\tcc.co = c.co;\n\tcc.ep = c.ep;\n\tcc.eo = c.eo;\n\treturn Solve(cc);\n};\n\nmodule.exports.initialize = initialize;\nmodule.exports.solve = solve;\nmodule.exports.randomCube = randomCube;\n"],"sourceRoot":""}