{"version":3,"sources":["lib/Defs.tsx","components/CubeSim.tsx","lib/Math.ts","lib/CubeLib.tsx","lib/Selector.tsx","components/Select.tsx","components/Input.tsx","components/CmllTrainerView.tsx","components/BlockTrainerView.tsx","components/PanoramaView.tsx","lib/Pruner.tsx","lib/min2phase/min2phase-wrapper.ts","lib/Solver.tsx","lib/CachedSolver.tsx","components/FavListView.tsx","components/AppView.tsx","Config.tsx","lib/Local.tsx","Version.tsx","reducers/AbstractStateM.tsx","lib/Algs.tsx","reducers/BlockTrainerStateM.tsx","reducers/LSETrainerStateM.tsx","reducers/CmllStateM.tsx","reducers/StateFactory.tsx","KeyMapping.tsx","reducers/Reducer.tsx","theme.js","app/App.tsx","serviceWorker.js","index.js","lib/min2phase/min2phase.js"],"names":["Face","Typ","U","D","F","B","L","R","C","E","T","corners_coord","edges_coord","cstimer_corners_coord","cstimer_edges_coord","u","cpc","coc","epc","eoc","tpc","name","f","r","l","d","b","m","e","s","u_face","f_face","FBpairPos","color_map","TAU","Math","PI","axesInfo","THREE","cubeSim","width","height","colorScheme","mode","faces","stickers_tmpl","stickerwrap_tmpl","facesToReveal","hintDistance","scene","camera","renderer","antialias","geo","geo_border","setPixelRatio","window","devicePixelRatio","position","copy","lookAt","cubeG","add","updateWidthHeight","clearColor","canvas","domElement","setSize","setClearColor","aspect","updateProjectionMatrix","updateCube","cube","remove","i","cubie","rot","makeRotationFromEuler","rot1","setRotationFromMatrix","multiply","z","x","idx","curr_tmpl","sticker","clone","stickerwrap","indexOf","stickerhint","scale","set","drawCube","renderScene","render","cleanup","dispose","updateColorScheme","colorScheme_","materials","Array","fill","map","_","mat","color","side","alphaTest","mesh","setRotationFromEuler","materials_border","updateFacesToReveal","updateDrawParam","distance","setup","CubeSim","props","mount","React","useRef","useEffect","dom","current","appendChild","bgColor","removeChild","ref","style","rand_int","floor","random","rand_incl","rand_choice","arr","length","cartesianProduct","allEntries","reduce","results","entries","result","entry","concat","subResults","getParity","perm","visited","follow","cnt","res","arrayEqual","arr1","arr2","CubieCube","value","cp","co","ep","eo","tp","this","Id","o","p","oc","pc","mod","o_new","p_new","console","assert","src","dst","move","_apply_partial","toc","isArray","MoveSeq","moves","apply_one","apply","facelet_mapping","pos","piece","j","_rotate_coord","push","fm","custom_corners_coord","custom_edges_coord","idxOf","a_","target","a","getOriPerm","ori","_backward_rotate_coord","coord_pair","newpos","newOri","newPerm","_to_facelet_mapping","_from_facelet_mapping","perm_correct","ori_correct","y","fs","last_face","first_face","Move","arg","from_moves","from_cube","get_change","acc_p","acc_o","slice","all","generate_base_moves","make_rot_set","us","rs","ls","ds","bs","ms","es","ss","rws","lws","uws","xs","ys","zs","flat","moves_dict","Object","create","forEach","parse","rotset","Set","has","shift","str","tokens","token","ch","ord","charCodeAt","newMoves","nextMove","pop","combined","_combine","reverse","inv","useMetric","toString","join","move1","move2","getCnt","getStr","auf_moves","auf_move","SeqEvaluator","Map","sum","moveCost","get","moveCost_gen","FaceletCube","mult_move","face","face_new","work","typ","mod_for_typ","p1","p2","p_curr","o_curr","color_of_c","o1","o2","color_of_e","color_of_t","color_of_sticker","Error","d_face","l_face","r_face","b_face","from_cubie","mask","facelet","X","from_cubie_partial_masked","from_cubie_partial","to_unfolded_cube_str","faceletCube","face_count","str_face_map","color_cube","face_char","hasOwnProperty","count","lse_mask","CubeUtil","ext","stickers","find_pairs","edge_stickers","filter","corner_stickers","ep_stickers","cp_stickers","epcp_pairs","c","efs","cfs","match","get_color","connected_pairs","u_premove","m2_premove","get_random_with_mask","cp_rand","ep_rand","par","random_ori","ori_mask","random_perm","perm_mask","undecided","tmp","rand_shuffle","is_cmll_solved","premove","cube1","solved","is_mask_solved","get_random_lse","is_cube_solved","id","ColorScheme","suppressLoad","colors","load","split","newScheme","save","_setDefault","default_colors","JSON","stringify","valid_schemes_map","localStorage","setItem","serialize","item","getItem","deserialize","valid_schemes","Mask","fs_back_mask","fs_front_mask","fbdr_mask","fb_mask","sb_mask","cmll_mask","ss_front_mask","ss_back_mask","empty_mask","dl_solved_mask","bl_solved_mask","solved_mask","zhouheng_mask","lse_4c_mask","getActiveNames","ans","flags","names","getActiveName","useStyles","makeStyles","theme","container","paddingTop","spacing","paddingBottom","backgroundColor","palette","background","default","button","paper","padding","display","overflow","flexDirection","canvasPaper","infoColumn","scrambleColumn","paddingLeft","textColumn","breakpoints","up","minHeight","fixedHeight","title","flexGrow","select","text","primary","selectLabel","secondary","SingleSelect","state","dispatch","config","sel","classes","radioValue","label","FormControl","component","className","FormLabel","RadioGroup","aria-label","onChange","evt","n","new_flags","new_config","fbPairSolvedSelector","fbdrSelector","type","content","row","FormControlLabel","key","control","Radio","labelPlacement","MultiSelectContent","options","handleChange","checked","useState","manipChecked","setManipChecked","manipulator_row","manipulators","FormGroup","manip","enableIdx","Checkbox","fillValue","makeManipulator","Fragment","makeBox","MultiSelect","open","setOpen","handleClose","noDialog","Box","Button","variant","borderWidth","onClick","fontSize","marginLeft","marginRight","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","DialogActions","ColorSetter","toUserInput","setText","TextField","defaultValue","helperText","event","fullWidth","size","ColorPanel","orientationSelector","Divider","hint","fontWeight","borderBottom","prompt","CmllTrainerView","clsx","_getMask","cmllCubeMaskSelector","useTheme","simBackground","panel","cmllSelector","cmllAufSelector","triggerSelector","setReveal","reveal","downHandler","keyMapping","handle","addEventListener","removeEventListener","alg","case","desc","moves_c","collapse","Grid","Paper","margin","getColorsForOri","elevation","lineHeight","Typography","whiteSpace","onFocus","blur","sm","md","sourceIcon","sourceIconWrap","fab","top","left","ConfigPanelGroup","ssSelector","ssPairOnlySelector","solutionNumSelector","ssPosSelector","fbOnlySelector","fbdrScrambleSelector","fbPieceSolvedSelector","fsSelector","lseStageSelector","lseMCSelector","lseBarSelector","lseEOSelector","lseEOLRMCSelector","lseBarbieSelector","lseEOLRScrambleSelector","BlockTrainerView","kind","getMask","alt_algs","spaceButtonText","algText","minMove","remove_setup","min","describe_hide","algs","get_algs","describe_reveal","setFav","favSelected","justify","alignItems","icon","case_","solver","action","checkedIcon","fontFamily","root","flexWrap","justifyContent","textAlign","gridList","VisualCube","stage","sch","template","alt","PanoramaTable","GridList","cellHeight","cols","GridListTile","PanoramaView","PrunerPiece","S","I","O","prunerFactory","def","corner","edge","center","def_to_idx","count_all","curr_idx","idx_arr","eosize","epsize","eisize","esize","pow","ep_idx","e_idx","cosize","cpsize","cisize","csize","cp_idx","c_idx","tosize","tpsize","tisize","tsize","tp_idx","solved_states","moveset","encode","t","to","max_depth","fbdrPrunerConfig","c1","c2","enc_c","e1","e2","e3","e4","htm_rwm","fbPrunerConfig","fbPrunerConfig_old","enc_ce","t1","lsePrunerConfig","edge_encode","enc","edge_enc","solve","min2phaseSolve","toMin2Phase","Solver","accum","min_depth","SState","is_solved","pruners","state_count","prune_count","solve_depth","min_depth_","max_depth_","accum_","search","Moveable","depth","solution","STOP","CONTINUE","solutions","capacity","flag","sol","try_push","query","availableMoves","seen_encodings","new_cube","st","expand","getAvailableMove","k","base","prepareNextMoveable","depth_l","depth_r","log","getPruner","solverFactory","prunerConfig","pruner","dist","initialized","init","Uint8Array","frontier","total_expanded","new_frontier","newState","equal","cube2","Pruner","SsSolver","is_front","v","ssPrunerConfig","FsSolver","fsPrunerConfig","EOLRSolver","center_flag","barbie_mode","edge_idx","moves_ac","moves_mc","barb_moves","eolrPrunerConfig","all_solvers","CachedSolver","cache","useOld","min2phase_init","transformed_cube","to_cstimer_cube","is_solveable","min2phase_solve","table","minWidth","FavListView","favList","dialogID","setDialogID","dialogDelete","autoFocus","addDialogOpen","setAddDialogOpen","addString","setAddString","handleAddClose","dialogAdd","aria-labelledby","DialogContentText","multiline","onKeyDown","stopPropagation","allSolvers","trim","every","parseAddString","Table","TableHead","TableRow","TableCell","align","rowSpan","IconButton","TableBody","play","TabPanel","children","index","other","role","hidden","page","modes","_getInitialHashLocation","location","hash","AppView","useCallback","newValue","setValue","handleInfoClose","showFav","dividers","gutterBottom","AppBar","Tabs","scrollButtons","indicatorColor","Tab","theme_flag","paddingY","Container","maxWidth","initialFavList","initialConfig","arr_ori_flag","ssEOSelector","favListManager","getFavList","setFavList","item1","configManager","getConfig","vers","undefined","keys","item2","setConfig","partial","newConfig","assign","AbstractStateM","StateFactory","empty_alg","cmll_algs","trigger_algs","u_auf_algs","ori_algs","alg_generator","selector","algSet","lookup_algset","lookup","get_active_names","prefix","BlockTrainerStateM","solverL","solverR","scrambleMargin","scrambleCount","algDescWithMoveCount","magnification","premoves","algdesc","solverNames","solutionCap","solverName","pm","pre","score","evaluate","sort","updateSolutionOnly","_solve_min2phase","algDescs","_solve_with_solvers","solutionLength","scramble","scrambleSolver","max","algDesc","getRandom","_solve","state1","_updateCase","movestr","conf","_updateCap","FbdrStateM","fbOnly","pairSolved","startsWith","active","_get_pair_solved_front","_get_random_fs_back","_get_random_fs_front","SsStateM","allowed_dr_eo_ep","find","eo_","ep_","drPositionMap","allowed_dr_eo_ep_patterns","_get_random_fb","FbStateM","is_l_only","centers","includes","pairs","cc_edges","_find_center_connected_edges","_get_random","FsStateM","LSEStateM","bars","lse_premove","lseEODef","lseEODefLookup","EOLRStateM","eo_arr","targetEO","eolrMCMode","compare","useBarbie","useFullScramble","_getEOType","acSolver","mcSolver","acLength","mcLength","CmllStateM","m2_away","lse_cube","generator","trig_generator","u_auf_generator","ori_generator","trigger_alg","cmll_alg","u_auf_alg","alg_str","_get2PhaseSolution","history","_generateCase","SolvingStateM","SolvedStateM","defaultKeyMapping","lseKeyMapping","DefaultKeyMapping","altKey","ctrlKey","metaKey","toUpperCase","LSEKeyMapping","getInitialState","initialStateName","scrSource","reducer","code","stateM","reduceByKey","reactToConfig","reduceByConfig","rem","replay","reduceByFavlist","createMuiTheme","main","error","red","A400","themeDark","overrides","MuiDivider","keyCode","document","body","preventDefault","App","useReducer","appTheme","ThemeProvider","CssBaseline","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","createArray","bitCount","get8Parity","get12Parity","binarySearch","mid","val","fact","perm3","ud2std","std2ud","Cnk","length1","length2","createArrays","move2str","urfMove","ckmv","ckmv2","getFlip","getFlipSym","FlipR2S","EdgeConjugate","SymInv","temps","FlipS2R","setFlip","bitOdd","getTwist","getTwistSym","TwistR2S","CornConjugate","TwistS2R","setTwist","twst","getUDSlice","setUDSlice","getMPerm","setMPerm","getMid3","idxA","idxB","setMid3","getURtoUL","getDRtoDL","setEdgePerm","getEdgePerm","getCPermSym","EPermR2S","get8Perm","e2c","CPermS2R","getEPermSym","EPermS2R","URFConjugate","CornMult","urf2","urf1","EdgeMult","invCubieCube","corn","cperm","twist","eperm","flip","set8Perm","cctemp","prod","oriA","oriB","ed","CubeSym","moveCube","SymMult","SymMove","Sym8Mult","Sym8Move","Sym8MultInv","SymMoveUD","MtoEPerm","merge","UDSliceMove","TwistMove","FlipMove","UDSliceConj","UDSliceTwistPrun","UDSliceFlipPrun","TwistFlipPrun","Mid3Move","Mid32MPerm","CParity","CPermMove","EPermMove","MPermMove","MPermConj","MCPermPrun","MEPermPrun","urfidx","csym","mid3","tsym","fsym","corn0","csym0","mid30","e10","e20","prun","maxlength2","valid1","valid2","phase1","maxl","lm","cornx","ex","get4Parity","esym","phase2","sb","urf","init2","slicex","twistx","tsymx","flipx","fsymx","midx","edgex","esymx","csymx","initialize","mc","temp","f2","u4","lr2","found","occ","CubieInit","SymState","SymStateF","check","done","sym","symF","fsymxx","idxx","symx","CoordInit","module","exports","cc","Solve","randomCube"],"mappings":"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","file":"static/js/main.97ed1d8a.chunk.js","sourcesContent":["export enum Face {\n    U = 0, D, F, B, L, R, X\n}\nconst U = Face.U;\nconst D = Face.D;\nconst F = Face.F;\nconst B = Face.B;\nconst L = Face.L;\nconst R = Face.R;\nexport {U, D, F, B, L, R};\n\nexport enum Typ {\n    C = 0, E, T\n}\nconst C = Typ.C;\nconst E = Typ.E;\nconst T = Typ.T;\nexport {C, E, T}\n\nexport type CubieT = {\n    co: Array<number>,\n    cp: Array<number>,\n    eo: Array<number>,\n    ep: Array<number>,\n    tp: Array<number>\n}\n\nexport type FaceletCube = Array<string>\n\nexport type CornerCoord = [Face, Face, Face]\nlet corners_coord : Array<CornerCoord> = [\n    [U,F,L], [U,L,B], [U,B,R], [U,R,F],\n    [D,L,F], [D,B,L], [D,R,B], [D,F,R]\n]\n\nexport type EdgeCoord = [Face, Face]\nlet edges_coord : Array<EdgeCoord> = [\n    [U,F], [U,L], [U,B], [U,R],\n    [D,F], [D,L], [D,B], [D,R],\n    [F,L], [B,L], [B,R], [F,R],\n]\n\nlet cstimer_corners_coord : Array<CornerCoord> = [\n    [U,R,F],[U,F,L], [U,L,B], [U,B,R],\n    [D,F,R],[D,L,F], [D,B,L], [D,R,B]\n]\n\nlet cstimer_edges_coord : Array<EdgeCoord> = [\n    [U, R], [U,F], [U,L], [U,B],\n    [D, R], [D,F], [D,L], [D,B],\n    [F, R], [F,L], [B,L], [B,R]\n]\n\nexport {corners_coord, edges_coord, cstimer_corners_coord, cstimer_edges_coord }\n\nexport type FaceletMapping = [Face[], Face[]][]\n\nexport type PermChg = [number, number]\nexport type OriChg = number\n\nexport type MoveT = {\n    cpc: Array<PermChg>,\n    coc: Array<OriChg>,\n    epc: Array<PermChg>,\n    eoc: Array<OriChg>,\n    tpc: Array<PermChg>,\n    name: string\n}\n\nlet u : MoveT = {\n    cpc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    coc: [0, 0, 0, 0],\n    epc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"U\"\n}\n\nlet f : MoveT = {\n    cpc: [[0, 3], [3, 7], [7, 4], [4, 0]],\n    coc: [1, 2, 1, 2],\n    epc: [[0, 11], [11, 4], [4, 8], [8, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"F\",\n}\n\nlet r : MoveT = {\n    cpc: [[3, 2], [2, 6], [6, 7], [7, 3]],\n    coc: [1, 2, 1, 2],\n    epc: [[3, 10], [10, 7], [7, 11], [11, 3]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"R\",\n}\n\nlet l : MoveT = {\n    cpc: [[0, 4], [4, 5], [5, 1], [1, 0]],\n    coc: [2, 1, 2, 1],\n    epc: [[1, 8], [8, 5], [5, 9], [9, 1]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"L\",\n}\n\nlet d : MoveT = {\n    cpc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    coc: [0, 0, 0, 0],\n    epc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"D\",\n}\n\nlet b : MoveT = {\n    cpc: [[1, 5], [5, 6], [6, 2], [2, 1]],\n    coc: [2, 1, 2, 1],\n    epc: [[2, 9], [9, 6], [6, 10], [10, 2]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"B\",\n}\n\nlet m : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[0, 4], [4, 6], [6, 2], [2, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 2], [2, 1], [1, 3], [3, 0]],\n    name: \"M\",\n}\n\nlet e : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[8, 9], [9, 10], [10, 11], [11, 8]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[2, 4], [4, 3], [3, 5], [5, 2]],\n    name: \"E\",\n}\n\nlet s : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[1, 3], [3, 7], [7, 5], [5, 1]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 5], [5, 1], [1, 4], [4, 0] ],\n    name: \"S\",\n}\n\nexport {u, d, f, b, l, r, m, e, s}\n\nexport type StickerT = [number, number, Typ]\nexport type StickerExtT = [number, number, Typ, Face]\nexport type FaceletT = Array<StickerT>\n\nlet u_face : FaceletT = [\n    [1, 0, C], [2, 0, E], [2, 0, C],\n    [1, 0, E], [0, 0, T], [3, 0, E],\n    [0, 0, C], [0, 0, E], [3, 0, C]\n  ]\n\nlet f_face : FaceletT = [\n    [0, 1, C], [0, 1, E], [3, 2, C],\n    [8, 0, E], [2, 0, T], [11,0, E],\n    [4, 2, C], [4, 1, E], [7, 1, C]\n]\n\nexport {u_face, f_face}\n\nconst FBpairPos : [number, number, number, number][] = [\n    [0, 0, 8, 1], [0, 1, 1, 0], [ 0, 2 , 0, 1],\n    [1, 1, 2, 0], [1, 2, 1, 1],\n    [2, 0, 10, 1], [2, 1, 3, 0], [2, 2, 2, 1],\n    [3, 0, 11, 0], [3, 1, 0, 0], [3, 2, 3, 1],\n    [4, 0, 8, 0], [4, 1, 4, 0],\n    [6, 0, 10, 0], [6, 1, 6, 0], [6, 2, 7, 1],\n    [7, 0, 11, 1], [7, 1, 7, 0], [7, 2, 4, 1]\n]\n\nexport {FBpairPos}\n\nexport type FaceletCubeT = Array<Array<Face>>\n\n// A Cube can be in two representations: cubieCube or faceletCube\n\nlet color_map =`\\\n   UUU\n   UUU\n   UUU\nLLLFFFRRRBBB\nLLLFFFRRRBBB\nLLLFFFRRRBBB\n   DDD\n   DDD\n   DDD`\n\nexport {color_map}\n","import React, { useEffect } from 'react'\n\nimport { FaceletCubeT, Face } from \"../lib/Defs\";\nimport * as THREE from 'three';\nimport { useTheme } from '@material-ui/core';\nimport { getConfig } from '../lib/Local';\n\ntype Config = {\n    cube: FaceletCubeT, width: number, height: number, colorScheme: Array<string>, facesToReveal: Face[],\n    bgColor?: string,\n    hintDistance?: number\n}\n\n/*\nHow to propagate control of keypress ..? maybe not here, in the app.\n\nLet's look at click analogy: if a user click on sub-component,\nthat message should be propagated upwards to the parent.\n\nThat is, \"keydown\" should transform to some kind of message, e.g. the resulting cube state\nto be passed to the App, which then decides whether to trigger state change or let the cube keep being solved\n\n*/\n\n\ntype AxesInfo = [THREE.Vector3, THREE.Euler]\nconst TAU = Math.PI * 2;\nconst axesInfo: [THREE.Vector3, THREE.Euler][] = [\n    [new THREE.Vector3(0, 1, 0), new THREE.Euler(-TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, -1, 0), new THREE.Euler(TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, 0, 1), new THREE.Euler(0, 0, 0)],\n    [new THREE.Vector3(0, 0, -1), new THREE.Euler(0, TAU / 2, 0)],\n    [new THREE.Vector3(-1, 0, 0), new THREE.Euler(0, -TAU / 4, 0)],\n    [new THREE.Vector3(1, 0, 0), new THREE.Euler(0, TAU / 4, 0)],\n];\n\nconst setup = function (width: number, height: number, colorScheme?: Array<string>, mode?: string,\n    faces?: Face[]) {\n    let facesToReveal = faces || [Face.L, Face.B, Face.D]\n    let hintDistance = 7\n    const scene = new THREE.Scene()\n    const camera = new THREE.PerspectiveCamera(70, width / height, 0.1, 1000)\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    const mag = 1.0\n    const alpha = 0.5\n    const enableBorder = true\n    const geo = new THREE.PlaneGeometry(0.89 * mag * 2, 0.89 * mag * 2)\n    const geo_border = new THREE.PlaneGeometry(1.0 * mag * 2, 1.0 * mag * 2)\n    //const geo_border = new THREE.EdgesGeometry(geo_border_0)\n    renderer.setPixelRatio(window.devicePixelRatio)\n\n    //let colorScheme_ = colorScheme || [0xffffff, 0xffff00,  0x00ff00, 0x0000ff, 0xff8800, 0xff0000]\n\n    mode = mode || \"FRU\"\n\n    if (mode === \"FRU\")\n        camera.position.copy(new THREE.Vector3(2.6 / 1.1, 3 / 1.1, 3 / 1.1))\n    else\n        camera.position.copy(new THREE.Vector3(0 / 1.1, 3 / 1.1, 3 / 1.1))\n\n    //camera.position.copy(new THREE.Vector3(2.5, 5, 5))\n    camera.lookAt(new THREE.Vector3(0, 0, 0))\n\n\n    let stickers_tmpl: THREE.Mesh[], stickerwrap_tmpl: THREE.Mesh\n\n    function updateFacesToReveal(faces: Face[]) {\n        facesToReveal = faces\n    }\n    function updateColorScheme(colorScheme: Array<string>) {\n        let colorScheme_ = colorScheme\n        //console.log(\"update color scheme \", colorScheme_)\n        let materials = Array(7).fill(0).map((_, i) => {\n            let mat = new THREE.MeshBasicMaterial({ color: colorScheme_[i], side: THREE.DoubleSide });\n            mat.alphaTest = alpha;\n            return mat\n        })\n\n        stickers_tmpl = materials.map((mat) => {\n            let mesh = new THREE.Mesh(geo, mat)\n            mesh.setRotationFromEuler(axesInfo[0][1])\n            return mesh\n        })\n\n        let materials_border = new THREE.MeshBasicMaterial({ color: 0x000000, side: THREE.FrontSide })\n        stickerwrap_tmpl = (() => {\n            let mesh = new THREE.Mesh(geo_border, materials_border)\n            mesh.setRotationFromEuler(axesInfo[0][1])\n            return mesh\n        })()\n    }\n\n    function drawCube(faces: FaceletCubeT): THREE.Group {\n        const cube = new THREE.Group();\n        for (let i = 0; i < 6; i++) {\n            const cubie = new THREE.Group();\n            const rot = new THREE.Matrix4().makeRotationFromEuler(axesInfo[i][1]);\n            const rot1 = new THREE.Matrix4().makeRotationFromEuler(axesInfo[1][1]);\n            cubie.setRotationFromMatrix(rot.multiply(rot1))\n            for (let z = -1; z <= 1; z++) {\n                for (let x = -1; x <= 1; x++) {\n                    let idx = (z + 1) * 3 + (x + 1)\n\n                    const curr_tmpl = stickers_tmpl[faces[i][idx]]\n                    const sticker = curr_tmpl.clone()\n                    const stickerwrap = stickerwrap_tmpl.clone()\n\n                    const eps = 0.05\n                    sticker.position.copy(new THREE.Vector3(x * 2, 3, z * 2))\n                    stickerwrap.position.copy(new THREE.Vector3(x * 2, 3 - eps, z * 2))\n\n                    if (facesToReveal.indexOf(i) > -1) { // (i === 5 && mode === \"UF\")) {\n                        const stickerhint = curr_tmpl.clone()\n                        stickerhint.position.copy(new THREE.Vector3(x * 2, 3 + hintDistance + 3, z * 2))\n                        cubie.add(stickerhint)\n\n                    }\n                    if (enableBorder)\n                        cubie.add(stickerwrap)\n\n                    cubie.add(sticker)\n                }\n\n            }\n            cube.add(cubie)\n        }\n        cube.scale.set(1 / 3, 1 / 3, 1 / 3)\n        return cube\n    }\n\n    let cubeG = new THREE.Group();\n    scene.add(cubeG)\n    const updateCube = (cube: FaceletCubeT) => {\n        scene.remove(cubeG)\n        cubeG = drawCube(cube)\n        scene.add(cubeG)\n    }\n\n    const renderScene = () => {\n        renderer.render(scene, camera)\n    }\n\n    const updateWidthHeight = (width: number, height: number, clearColor?: string) => {\n        const canvas = renderer.domElement;\n        const needResize = canvas.width !== width || canvas.height !== height;\n        if (needResize) {\n            renderer.setSize(width, height, true);\n            clearColor = clearColor || '#eeeeef';\n            //renderer.setViewport( 0, 0, width * window.devicePixelRatio, height * window.devicePixelRatio);\n            renderer.setClearColor(clearColor) // #70788a') //#5a606e') // '#373B43') // '#eeeeee')\n            camera.aspect = width / height;\n            camera.updateProjectionMatrix();\n        }\n    }\n\n    const updateDrawParam = (distance: number) => {\n        hintDistance = distance\n    }\n\n\n    const cleanup = () => {\n        geo.dispose()\n        //materials.forEach(m => m.dispose())\n    }\n\n    //let defaultColorScheme = [ 0x00ff00, 0x0000ff, 0xff0000,0xff8800,0xffff00, 0xffffff]\n    updateWidthHeight(width, height)\n\n    return {\n        domElement: () => { return renderer.domElement },\n        updateCube,\n        renderScene,\n        updateWidthHeight,\n        cleanup,\n        updateColorScheme,\n        updateFacesToReveal,\n        updateDrawParam\n    }\n}\n\nlet cubeSim = setup(370, 370)\n\nfunction CubeSim(props: Config) {\n    const mount = React.useRef<HTMLDivElement | null>(null)\n    let { width, height } = props\n\n    useEffect(() => {\n        let dom = cubeSim.domElement()\n        let current = mount.current!\n\n        current.appendChild(dom)\n        cubeSim.updateFacesToReveal(props.facesToReveal)\n        cubeSim.updateWidthHeight(width, height, props.bgColor || \"#eeeeef\")\n        cubeSim.updateColorScheme(props.colorScheme)\n\n        if (props.hintDistance)\n            cubeSim.updateDrawParam(props.hintDistance)\n\n        cubeSim.updateCube(props.cube)\n        cubeSim.renderScene()\n\n        return () => {\n            current.removeChild(dom)\n        }\n    })\n\n    return <div\n        ref={mount}\n        style={{ width: props.width, height: props.height }}\n    />;\n}\n\nexport default CubeSim","let rand_int = (r: number) => {\n    return Math.floor(Math.random() * r)\n}\n\nlet rand_incl = (l: number, r: number) => {\n    return rand_int(r - l + 1) + l;\n}\nlet rand_choice = function<T>(arr: T[]) {\n    return arr[rand_int(arr.length)]\n}\n\nlet rand_shuffle = function<T>(arr: T[]) {\n    for (let i = 0, l = arr.length; i < l - 1; i++) {\n        let j = rand_incl(i, l - 1)\n        let tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp\n    }\n    return arr\n}\n\nexport function cartesianProduct<T>(...allEntries: T[][]): T[][] {\n    return allEntries.reduce<T[][]>(\n      (results, entries) =>\n        results\n          .map(result => entries.map(entry => result.concat([entry])))\n          .reduce((subResults, result) => subResults.concat(result), []),\n      [[]]\n    )\n  }\n\nlet getParity = (perm: number[]) => {\n    let visited = Array(perm.length).fill(false)\n    let follow = (i: number, cnt: number) : number => {\n        if (visited[i]) {\n            return 0\n        } else {\n            visited[i] = 1\n            if (visited[perm[i]]) {\n                return cnt;\n            } else\n                return follow(perm[i], cnt + 1)\n        }\n    }\n    let res = 0\n    for (let x of perm) {\n        res += follow(x, 0)\n    }\n    return res\n}\n\nlet arrayEqual = function<T>(arr1: T[], arr2: T[]) {\n    if (arr1.length !== arr2.length) return false;\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) return false;\n    }\n    return true;\n}\n\nlet encodeArr = function(base: number, rarr: number[]) {\n    let int = 0\n    for (let i = rarr.length - 1; i >= 0; i--)\n        int = rarr[i] + int * base\n    return int\n}\n\nexport {rand_int, rand_choice, rand_shuffle, getParity, arrayEqual, encodeArr}","import { MoveT, OriChg, PermChg, StickerT, StickerExtT, CornerCoord, EdgeCoord, cstimer_corners_coord, cstimer_edges_coord } from \"./Defs\";\nimport { u, d, f, b, l, r, m, e, s} from \"./Defs\";\nimport { FaceletT, FaceletCubeT, corners_coord, edges_coord, u_face, f_face, color_map } from \"./Defs\";\nimport { Typ, Face, C, E, T, U, D, F, B, L, R } from \"./Defs\";\nimport { rand_int, rand_shuffle, getParity, rand_choice, arrayEqual } from \"./Math\";\n\nconst C_MOD = 3;\nconst E_MOD = 2;\nconst T_MOD = 1;\n\nexport class CubieCube {\n    cp: number[] = [];\n    co: number[] = [];\n    ep: number[] = [];\n    eo: number[] = [];\n    tp: number[] = [];\n    // The addition of tp is not necessary, but helps us deal with slice moves in Roux during search and simcube.\n\n    Id() : CubieCube {\n        this.set({\n            cp: [0, 1, 2, 3, 4, 5, 6, 7],\n            co: [0, 0, 0, 0, 0, 0, 0, 0],\n            ep: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n            eo: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            tp: [0, 1, 2, 3, 4, 5]\n        })\n        return this\n    }\n    clone() : CubieCube {\n        return new CubieCube({\n            cp: [...this.cp],\n            co: [...this.co],\n            ep: [...this.ep],\n            eo: [...this.eo],\n            tp: [...this.tp]\n        })\n    }\n    constructor(value?: {cp: number[], co: number[], ep: number[], eo: number[], tp?: number[]} | CubieCube) {\n        if (value instanceof CubieCube) {\n            this.set({\n                cp: value.cp, co: value.co, ep: value.ep, eo: value.eo, tp: value.tp\n            })\n        }\n        else if (value) {\n            this.cp = value.cp\n            this.co = value.co\n            this.ep = value.ep\n            this.eo = value.eo\n            this.tp = value.tp || [0, 1, 2, 3, 4, 5] // UD FB LR\n        } else {\n            this.Id()\n        }\n    }\n    set(value: {cp?: number[], co?: number[], ep?: number[], eo?: number[], tp?: number[]} | CubieCube) {\n        this.cp = value.cp || this.cp\n        this.co = value.co || this.co\n        this.ep = value.ep || this.ep\n        this.eo = value.eo || this.eo\n        this.tp = value.tp || this.tp\n    }\n    _apply_partial(o: Array<number>, p: Array<number>, oc: Array<OriChg>, pc: Array<PermChg>, mod: number) {\n        let o_new = [...o];\n        let p_new = [...p];\n        console.assert(oc.length === pc.length)\n\n        for (let i = 0; i < oc.length; i++) {\n            //let [src, dst] = pc[i];\n            let src = pc[i][0], dst = pc[i][1];\n            p_new[dst] = p[src];\n            o_new[dst] = (o[src] + oc[i]) % mod;\n        }\n        return [o_new, p_new]\n    }\n\n    // all side-effect-less\n    apply_one(move: Move) {\n        let [co, cp] = this._apply_partial(this.co, this.cp, move.coc, move.cpc, C_MOD)\n        let [eo, ep] = this._apply_partial(this.eo, this.ep, move.eoc, move.epc, E_MOD)\n        let toc = Array(move.tpc.length).fill(0)\n        let [, tp] = this._apply_partial([0, 0, 0, 0, 0, 0], this.tp, toc, move.tpc, T_MOD)\n        return new CubieCube({ co, cp, eo, ep, tp })\n    }\n\n    apply(move: Move | Array<Move> | MoveSeq | string): CubieCube {\n        if (Array.isArray(move) || move instanceof MoveSeq) {\n            let moves = Array.isArray(move) ? move : move.moves\n            let cube = this.clone()\n            for (let i = 0; i < moves.length; i++) {\n                cube = cube.apply_one(moves[i])\n            }\n            return cube\n        } else if (typeof move === \"string\") {\n            return this.apply(new MoveSeq(move))\n        }\n        else {\n            return this.apply_one(move)\n        }\n    }\n\n    static _rotate_coord(fs: Face[]) {\n        let faces = [...fs] as Face[]\n        let last_face = faces[faces.length - 1];\n        for (let i = faces.length - 1; i > 0; i--) {\n            faces[i] = faces[i - 1];\n        }\n        faces[0] = last_face\n        return faces\n    }\n    static _backward_rotate_coord(fs: Face[]){\n        let faces = [...fs] as Face[]\n        let first_face = faces[0]\n        for (let i = 0; i < faces.length - 1; i++) {\n            faces[i] = faces[i + 1];\n        }\n        faces[faces.length - 1] = first_face\n        return faces\n    }\n\n    _to_facelet_mapping(corners_coord: CornerCoord[], edges_coord: EdgeCoord[]) {\n        let facelet_mapping : [Face[], Face[]][]= []\n\n        for (let i = 0; i < 8; i++) {\n            let pos = corners_coord[i] as Face[]\n            let piece = corners_coord[this.cp[i]] as Face[]\n\n            for (let j = 0; j < this.co[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i < 12; i++) {\n            let pos = edges_coord[i] as Face[]\n            let piece = edges_coord[this.ep[i]] as Face[]\n            for (let j = 0; j < this.eo[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        return facelet_mapping\n    }\n\n    _from_facelet_mapping (fm: [Face[], Face[]][], custom_corners_coord: CornerCoord[], custom_edges_coord: EdgeCoord[]) {\n        let cube = new CubieCube()\n        let idxOf = (a_: CornerCoord[] | EdgeCoord[], target: Face[]) => {\n            let a = a_ as Face[][]\n            for (let i = 0; i < a.length; i++) {\n                if (arrayEqual(a[i], target)) return i;\n            }\n            return -1;\n        }\n        let getOriPerm =(a_: CornerCoord[] | EdgeCoord[], target: Face[]): [number, number]  => {\n            let ori = 0;\n            let perm = idxOf(a_, target)\n\n            while (perm === -1) {\n                ori++;\n                target = CubieCube._backward_rotate_coord(target) as any\n                perm = idxOf(a_, target)\n\n                if (ori > 3) break;\n            }\n            return [ori, perm]\n        }\n\n        for (let coord_pair of fm) {\n            let pos = coord_pair[0], piece = coord_pair[1]\n            if (pos.length === 2) {\n                let newpos = idxOf(custom_edges_coord, pos);\n                let [newOri, newPerm] = getOriPerm(custom_edges_coord, piece);\n                cube.eo[newpos] = newOri;\n                cube.ep[newpos] = newPerm;\n            } else {\n                let newpos = idxOf(custom_corners_coord, pos);\n                let [newOri, newPerm] = getOriPerm(custom_corners_coord, piece);\n                cube.co[newpos] = newOri;\n                cube.cp[newpos] = newPerm;\n            }\n        }\n        return cube\n    }\n\n    to_cstimer_cube() {\n        let facelet_mapping = this._to_facelet_mapping(corners_coord, edges_coord)\n        let cube = this._from_facelet_mapping(facelet_mapping, cstimer_corners_coord, cstimer_edges_coord)\n        return cube\n    }\n\n    is_solveable() {\n        if (this.tp[0] !== 0) {\n            this.apply(new MoveSeq(\"M2\")) // assuming lse\n        }\n        let perm_correct = (getParity(this.cp) + getParity(this.ep)) % 2 === 0\n        let ori_correct = (this.co.reduce((x, y) => x + y, 0) % 3 === 0) && (this.eo.reduce((x, y) => x + y, 0) % 2 === 0)\n        return perm_correct && ori_correct\n    }\n}\n\n\n/* Moves */\n/* We will generate all the moves based on the base moves and rotations, and return them in an array */\nexport class Move {\n    cpc: Array<PermChg> = [];\n    coc: Array<OriChg> = [];\n    epc: Array<PermChg> = [];\n    eoc: Array<OriChg> = [];\n    tpc: Array<PermChg> = [];\n    name: string = \"\";\n    constructor(arg?: Array<Move> | CubieCube | Move | MoveT, name?: string) {\n        if (Array.isArray(arg)) {\n            this.from_moves(arg, name!)\n        } else if (arg instanceof Move){\n            this.cpc = [...arg.cpc]\n            this.coc = [...arg.coc]\n            this.epc = [...arg.epc]\n            this.eoc = [...arg.eoc]\n            this.tpc = [...arg.tpc]\n            this.name = name!\n        } else if (arg instanceof CubieCube) {\n            this.from_cube(arg, name!)\n        } else if (arg) {\n            this.set(arg)\n        }\n    }\n    set(move: Move | MoveT) {\n        this.cpc = move.cpc\n        this.coc = move.coc\n        this.epc = move.epc\n        this.eoc = move.eoc\n        this.tpc = move.tpc\n        this.name = move.name\n    }\n    from_cube(cube: CubieCube, name: string) {\n        let get_change = (p: Array<number>, o: Array<number>, acc_p: Array<PermChg>, acc_o: Array<OriChg>) => {\n            for (let i = 0; i < p.length; i++) {\n                if (i === p[i] && o[i] === 0) {\n                } else {\n                    acc_p.push([p[i], i]);\n                    acc_o.push(o[i]);\n                }\n            }\n        }\n        get_change(cube.cp, cube.co, this.cpc, this.coc);\n        get_change(cube.ep, cube.eo, this.epc, this.eoc);\n        get_change(cube.tp, [0, 0, 0, 0, 0, 0], this.tpc, []);\n        this.name = name\n        return this\n    }\n    from_moves (moves: Move[], name: string) {\n        this.from_cube(new CubieCube().apply(moves), name)\n        return this\n    }\n    clone() {\n        return new Move(this, this.name)\n    }\n    static make_rot_set(move: Move): Array<Move> {\n        return [move,\n            new Move().from_moves([move, move], move.name + \"2\"),\n            new Move().from_moves([move, move, move], move.name + \"'\"),\n        ]\n    }\n\n    static generate_base_moves = () => {\n        let make_rot_set = Move.make_rot_set\n        let us = make_rot_set(new Move(u));\n        let fs = make_rot_set(new Move(f));\n        let rs = make_rot_set(new Move(r));\n        let ls = make_rot_set(new Move(l));\n        let ds = make_rot_set(new Move(d));\n        let bs = make_rot_set(new Move(b));\n        let ms = make_rot_set(new Move(m));\n        let es = make_rot_set(new Move(e));\n        let ss = make_rot_set(new Move(s));\n\n        let rw = new Move([new Move(r), ms[2]], \"r\")\n        let rws = make_rot_set(rw)\n        let lw = new Move([new Move(l), new Move(m)], \"l\")\n        let lws = make_rot_set(lw)\n        let uw = new Move([new Move(u), new Move(e)], \"u\")\n        let uws = make_rot_set(uw)\n\n        let x = new Move([new Move(r), ls[2], ms[2]], \"x\")\n        let xs = make_rot_set(x)\n        let y = new Move([new Move(u), new Move(e), ds[2]], \"y\")\n        let ys = make_rot_set(y)\n        let z = new Move([x, y, x, x, x], \"z\")\n        let zs = make_rot_set(z)\n\n        let id = new Move(new CubieCube(), \"id\")\n        let moves = [\n            id,\n            us, fs, rs, ls, ds, bs, ms, es, ss,\n            xs, ys, zs,\n            rws, lws, uws\n        ].flat()\n        let moves_dict: { [key: string]: Move } = Object.create({})\n        moves.forEach(m => moves_dict[m.name] = m)\n        return moves_dict\n    }\n    static all: {[key: string]: Move} = Move.generate_base_moves();\n\n    inv(): Move {\n        let name: string\n        switch (this.name[this.name.length - 1]) {\n            case \"'\": name = this.name.slice(0, this.name.length - 1); break\n            case \"2\": name = this.name; break\n            default: name = this.name + \"'\"\n        }\n        return Move.all[name]\n    }\n\n    toString() {\n        return this.name\n    }\n}\n\n\nexport class MoveSeq {\n    moves: Move[] = [];\n\n    constructor(moves: Move[] | string) {\n        if (typeof moves === \"string\") {\n            this.parse(moves);\n        } else {\n            this.moves = moves\n        }\n    }\n\n    static _combine(move1: Move, move2: Move) : MoveSeq {\n        const getCnt = (name : string) => {\n            if (name.length === 1) return 1\n            return name[1] === \"2\" ? 2 : 3\n        }\n        const getStr = (cnt : number) => {\n            return (cnt === 1) ? \"\" : (cnt === 2 ? \"2\" : \"'\")\n        }\n        if (move1.name[0] === move2.name[0]) {\n            let cnt = (getCnt(move1.name) + getCnt(move2.name)) % 4\n            if (cnt === 0) return new MoveSeq([])\n            else return new MoveSeq([ Move.all[move1.name[0] + getStr(cnt)] ])\n        } else {\n            return new MoveSeq([move1, move2])\n        }\n    }\n\n    remove_setup() {\n        let rotset = new Set([\"x\", \"x'\", \"x2\", \"y\", \"y'\", \"y2\", \"z\", \"z'\", \"z2\"]);\n        while (this.moves.length > 0 && rotset.has(this.moves[0].name)) {\n            this.moves.shift()\n        }\n        return this\n    }\n\n    parse(str: string) {\n        let tokens = []\n        let token = \"\"\n        for (let i = 0; i < str.length; i++) {\n            let ch = str[i]\n            if (ch === '2' || ch === '\\'') {\n                if (token.length === 1) {\n                    token += str[i];\n                    tokens.push(token)\n                    token = \"\"\n                }\n            } else if (ch === ' ') {\n                if (token.length > 0) {\n                    tokens.push(token); token = \"\";\n                }\n            } else {\n                const ord = ch.charCodeAt(0)\n                if ( (65 <= ord && ord < 65 + 26) || (97 <= ord && ord < 97 + 26)) {\n                    if (token.length > 0) {\n                        tokens.push(token)\n                        token = \"\"\n                    }\n                    token += str[i]\n                }\n            }\n        }\n        if (token.length > 0) tokens.push(token);\n\n        this.moves = []\n        for (let token of tokens) {\n            let move = Move.all[token]\n            if (move) {\n                this.moves.push(move)\n            } else {\n                return this\n                //throw Error(\"Invalid move sequence \" + move)\n            }\n        }\n        return this\n    }\n\n    collapse() : MoveSeq {\n        let newMoves : Move[] = []\n        let moves = this.moves\n        while (moves.length > 0) {\n            const nextMove = moves.shift()!\n            if (newMoves.length === 0) {\n                newMoves.push(nextMove)\n            } else {\n                const move = newMoves.pop()!\n                const combined = MoveSeq._combine(move, nextMove)\n                for (let m of combined.moves)\n                    newMoves.push(m)\n            }\n        }\n        return new MoveSeq(newMoves);\n    }\n\n    inv() {\n        let moves: Move[] = this.moves.slice(0).reverse().map(x => x.inv()).flat()\n        return new MoveSeq(moves)\n    }\n\n    static add_auf(moves: Array<Move>, auf_moves?: Array<Move | MoveSeq>) {\n        auf_moves = auf_moves || [ Move.all[\"id\"], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n        let auf_move = rand_choice(auf_moves)\n        if (auf_move instanceof MoveSeq) {\n            moves.concat(auf_move.moves)\n        } else {\n            moves.push(auf_move)\n        }\n    }\n\n    toString(useMetric?: string) {\n        return this.moves.map(m => m.toString()).join(\" \") + \" \" + (useMetric ? \"(\" + this.moves.length + \")\" : \"\")\n    }\n}\n\nexport class SeqEvaluator {\n    static moveCost_gen() {\n    let pairs : [string, number][]= [\n        [\"U\", 1], [\"U'\", 1], [\"U2\", 1.4],\n        [\"R\", 1], [\"R'\", 1], [\"R2\", 1.4],\n        [\"r\", 1], [\"r'\", 1], [\"r2\", 1.5],\n        [\"L\", 1], [\"L'\", 1], [\"L2\", 1.4],\n        [\"F\", 1.4], [\"F'\", 1.4], [\"F2\", 1.8],\n        [\"B\", 1.6], [\"B'\", 1.6], [\"B2\", 2.2],\n        [\"D\", 1.4], [\"D'\", 1.4], [\"D2\", 1.7],\n        [\"M\", 1.5], [\"M'\", 1.2], [\"M2\", 1.8],\n        [\"S\", 1.7], [\"S'\", 1.7], [\"S2\", 3.0],\n        [\"E\", 1.5], [\"E'\", 1.5], [\"E2\", 2.4],\n    ]\n    let costMap = new Map(pairs)\n    return costMap\n    }\n    static moveCost = SeqEvaluator.moveCost_gen()\n\n    static evaluate(moves : MoveSeq) {\n        let sum = 0\n        for (let m of moves.moves) {\n            const value = (SeqEvaluator.moveCost.get(m.name)) || 1.4\n            sum += value\n        }\n        return sum\n    }\n}\n\n/* Faces */\nlet FaceletCube = function () {\n    let mult_move = (face: FaceletT, move: Move): FaceletT => {\n        let face_new: FaceletT = [...face]\n        let mod_for_typ = (typ: Typ) => {\n            switch (typ) {\n                case C: return 3;\n                case E: return 2;\n                case T: return 1\n            }\n        }\n        let work = (p: PermChg, o: number, typ: Typ) => {\n            let mod = mod_for_typ(typ)\n            let [p1, p2] = p\n            for (let i = 0; i < face.length; i++) {\n                let [p_curr, o_curr, typ_curr] = face[i];\n                if (typ_curr === typ && p_curr === p1) {\n                    face_new[i] = [p2, (o_curr + o) % mod, typ]\n                }\n            }\n        }\n        for (let i = 0; i < move.cpc.length; i++) {\n            work(move.cpc[i], move.coc[i], C)\n        }\n        for (let i = 0; i < move.epc.length; i++) {\n            work(move.epc[i], move.eoc[i], E)\n        }\n        for (let i = 0; i < move.tpc.length; i++) {\n            work(move.tpc[i], 0, T)\n        }\n        return face_new\n    }\n    let color_of_c = (p: number, o1: number, o2: number) =>\n    corners_coord[p][(3 - o1 + o2) % 3];\n    let color_of_e = (p: number, o1: number, o2: number) =>\n        edges_coord[p][(2 - o1 + o2) % 2];\n    let color_of_t = (p: number) => [U, D, F, B, L, R][p]\n\n    let color_of_sticker = (cube: CubieCube, sticker: StickerT) => {\n        let [p, o, typ] = sticker\n        if (typ === C) {\n            return color_of_c(cube.cp[p], cube.co[p], o)\n        } else if (typ === E) {\n            return color_of_e(cube.ep[p], cube.eo[p], o)\n        } else if (typ === T) {\n            return color_of_t(cube.tp[p])\n        } else {\n            throw Error(\"unidentified type \" + typ)\n        }\n    }\n\n    let from_cubie_partial = (cube: CubieCube, facelet: FaceletT) => {\n        return facelet.map(s => color_of_sticker(cube, s))\n    }\n    let from_cubie_partial_masked = (cube: CubieCube, facelet: FaceletT, mask: Mask) => {\n        return facelet.map(([p, o, typ]) => {\n            if (typ === C) {\n                if (mask.cp[cube.cp[p]] === 1)\n                    return color_of_c(cube.cp[p], cube.co[p], o)\n                else\n                    return Face.X\n            } else if (typ === E) {\n                if (mask.ep[cube.ep[p]] === 1)\n                    return color_of_e(cube.ep[p], cube.eo[p], o)\n                else\n                    return Face.X\n            } else if (typ === T) {\n                if (mask.tp && mask.tp[cube.tp[p]] === 0)\n                    return Face.X\n                else\n                    return color_of_t(cube.tp[p])\n            } else {\n                throw Error(\"unidentified type \" + typ)\n            }\n        })\n    }\n\n    let moves = Move.all\n    let generate_base_facelets = () => {\n        let d_face = mult_move(f_face, moves[\"x'\"])\n        let l_face = mult_move(f_face, moves[\"y\"])\n        let r_face = mult_move(f_face, moves[\"y'\"])\n        let b_face = mult_move(f_face, moves[\"y2\"])\n        return {\n            d_face, l_face, r_face, b_face\n        }\n    }\n    let { d_face, l_face, r_face, b_face } = generate_base_facelets()\n\n    let from_cubie = (cube: CubieCube, mask?: Mask): FaceletCubeT => {\n        //console.log(\"converting from cube\", cube)\n        let faces = [u_face, d_face, f_face, b_face, l_face, r_face]\n        if (mask)\n            return faces.map((facelet) => from_cubie_partial_masked(cube, facelet, mask))\n        else\n            return faces.map((facelet) => from_cubie_partial(cube, facelet))\n    }\n\n    let to_unfolded_cube_str = (faceletCube: FaceletCubeT): String => {\n        let face_count = [0, 0, 0, 0, 0, 0];\n        let str_face_map: { [key: string]: Face } = {\n            \"U\": U, \"D\": D, \"F\": F, \"B\": B, \"L\": L, \"R\": R\n        }\n        let face_str_map = \"UDFBLR\"\n        let color_cube = \"\"\n        for (let i = 0; i < color_map.length; i++) {\n            let face_char = color_map[i];\n            if (str_face_map.hasOwnProperty(face_char)) {\n                let face: number = str_face_map[face_char] as number;\n                let count = face_count[face];\n                let color = faceletCube[face][count]\n                color_cube += face_str_map[color]\n                face_count[face] += 1;\n            } else {\n                color_cube += color_map[i];\n            }\n        }\n        return color_cube;\n    }\n\n    return {\n        from_cubie,\n        to_unfolded_cube_str,\n        color_of_sticker,\n        faces: {\n            u_face, d_face, l_face, r_face, f_face, b_face\n        }\n    }\n}()\n\ntype Mask = {\n    co?: number[],\n    eo?: number[],\n    tp?: number[],\n    cp: number[],\n    ep: number[],\n}\nfunction mask_copy (m: Mask) {\n    return {\n        co: m.co && [...m.co],\n        eo: m.eo && [...m.eo],\n        tp: m.tp && [...m.tp],\n        cp: [...m.cp],\n        ep: [...m.ep]\n    }\n}\n\nconst lse_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n}\n\nconst lse_4c_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1],\n    eo: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n}\n\nconst solved_mask : Mask = {\n    cp: [1, 1, 1, 1,  1, 1, 1, 1],\n    ep:[1, 1, 1, 1,  1, 1, 1, 1, 1, 1, 1, 1],\n}\nconst empty_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\nconst dl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]\n}\nconst bl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]\n}\nconst fs_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst fs_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst fb_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst zhouheng_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst fbdr_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst sb_mask : Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst cmll_mask : Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nlet CubeUtil = (() => {\n    let is_cube_solved = (cube: CubieCube) => {\n        let id = new CubieCube()\n        return arrayEqual(cube.co, id.co) &&\n               arrayEqual(cube.eo, id.eo) &&\n               arrayEqual(cube.cp, id.cp) &&\n               arrayEqual(cube.ep, id.ep)\n    }\n\n    function ext(stickers: StickerT[], f: Face) : StickerExtT[] {\n        return stickers.map(x => {\n            let [a, b, c] = x;\n            return [a,b,c,f]\n        })\n    }\n\n    let { u_face, d_face, l_face, r_face, f_face, b_face } = FaceletCube.faces\n    let stickers = [ ...ext(u_face, U), ...ext(d_face, D),\n        ...ext(l_face, L), ...ext(r_face, R), ...ext(f_face,F),  ...ext(b_face, B)]\n\n    let find_pairs = function() {\n        // enumerate each sticker\n        let edge_stickers = stickers.filter(s => s[2] === Typ.E)\n        let corner_stickers = stickers.filter(s => s[2] === Typ.C)\n\n        let ep_stickers : StickerExtT[][] = Array(12).fill(0).map(_ => Array(0))\n        edge_stickers.map(s => ep_stickers[s[0]].push(s) )\n\n        let cp_stickers : StickerExtT[][] = Array(8).fill(0).map(_ => Array(0))\n        corner_stickers.map(s => cp_stickers[s[0]].push(s))\n\n        const epcp_pairs : [number, number][] = []\n        for (let e = 0; e < 12; e++) {\n            for (let c = 0; c < 8; c++) {\n                let efs = ep_stickers[e]\n                let cfs = cp_stickers[c]\n\n                let match = 0;\n                efs.forEach( (e) => {\n                    cfs.forEach( (c) => { if (e[3] === c[3]) match++ })\n                })\n                if (match === 2) {\n                    epcp_pairs.push( [e, c] )\n                }\n            }\n        }\n\n\n        let get_color = (cube: CubieCube, s: StickerExtT) => {\n            return FaceletCube.color_of_sticker(cube, [s[0], s[1], s[2]] )\n        }\n        let func = (cube: CubieCube) => {\n            // now we process the cube\n            let connected_pairs : [number, number][]= []\n            //console.log(\"All neighboring pairs \", epcp_pairs)\n            for (let [ep, cp] of epcp_pairs) {\n                let efs = ep_stickers[ep]\n                let cfs = cp_stickers[cp]\n                let cnt = 0;\n                efs.forEach( (e) => {\n                    const c = cfs.filter( (c) => e[3] === c[3])[0]\n                    if (get_color(cube, e) === get_color(cube, c)) cnt++;\n                })\n                if (cnt === 2) {\n                    connected_pairs.push([ep, cp])\n                }\n            }\n            return connected_pairs\n        }\n        return func\n    }()\n\n    let is_mask_solved = (cube: CubieCube, { co, eo, cp, ep }: Mask, premove: (Move | Move[])[]) => {\n        //let moves = [ [], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"] ]\n        co = co || cp\n        eo = eo || ep\n        for (let move of premove) {\n            let cube1 = cube.apply(move)\n            let solved = true\n            for (let i = 0; i < 8 && solved; i++) {\n                if ((co[i] && cube1.co[i] !== 0)\n                    || (cp[i] && cube1.cp[i] !== i)) {\n                    solved = false;\n                }\n            }\n            for (let i = 0; i < 12 && solved; i++) {\n                if ((eo[i] && cube1.eo[i] !== 0)\n                    || (ep[i] && cube1.ep[i] !== i)) {\n                    solved = false;\n                }\n            }\n            if (solved) return true;\n        }\n        return false;\n    }\n\n    const u_premove = [[], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n    const m2_premove = [[], Move.all[\"M2\"]]\n\n    let is_cmll_solved = (cube: CubieCube) => {\n        return is_mask_solved(cube, lse_mask, u_premove)\n    }\n\n    let get_random_with_mask = ({ co, eo, cp, ep }: Mask): CubieCube => {\n        co = co || cp\n        eo = eo || ep\n        // get_random -- figure out which masks are 0, and assign random to these\n        let random_ori = (ori_mask: number[], typ: Typ) => {\n            let ori = Array(ori_mask.length).fill(0)\n            let mod = (typ === C) ? 3 : 2\n            let sum: number\n            do {\n                sum = 0\n                for (let i in ori_mask) {\n                    if (ori_mask[i] === 0) {\n                        ori[i] = rand_int(mod)\n                        sum += ori[i]\n                    }\n                }\n            } while (sum % mod > 0)\n            return ori\n        }\n        let random_perm = (perm_mask: number[]) => {\n            let perm: number[] = Array(perm_mask.length).fill(0)\n            let undecided: number[] = []\n            for (let i = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    undecided.push(i)\n                } else {\n                    perm[i] = i\n                }\n            }\n            rand_shuffle(undecided)\n            for (let i = 0, cnt = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    perm[i] = undecided[cnt]\n                    cnt += 1\n                }\n            }\n            return perm\n        }\n        let cp_rand, ep_rand, par\n        do {\n            [cp_rand, ep_rand] = [random_perm(cp), random_perm(ep)]\n            par = (getParity(cp_rand) + getParity(ep_rand)) & 1\n        } while (par > 0)\n\n        return new CubieCube({\n            co: random_ori(co, C),\n            cp: cp_rand,\n            eo: random_ori(eo, E),\n            ep: ep_rand,\n        })\n    }\n\n    let get_random_lse = (): CubieCube => {\n        let cube = get_random_with_mask(lse_mask)\n        return cube.apply(rand_choice(m2_premove))\n    }\n\n \n\n    return {\n        is_cmll_solved,\n        get_random_lse,\n        get_random_with_mask,\n        is_cube_solved,\n        find_pairs,\n        stickers\n    }\n})()\n\nexport abstract class Storage {\n    abstract name: string;\n    abstract serialize(): string;\n    abstract deserialize(x: string): void;\n    abstract _setDefault(): void;\n    save() {\n        window.localStorage.setItem(this.name, this.serialize());\n    }\n    load() {\n        const item = window.localStorage.getItem(this.name)\n        if (item) this.deserialize(item);\n        else this._setDefault();\n    }\n}\n\nexport class ColorScheme extends Storage {\n    // UDFBLR\n    // specify the colors for uf\n    // how to do this?\n    static default_colors = {\n        \"G\": \"#00b500\",\n        \"B\": \"#0000ff\",\n        \"R\": \"#ff0000\",\n        \"O\": \"#ff8800\",\n        \"Y\": \"#ffff00\",\n        \"W\": \"#ffffff\",\n        \"X\": \"#cccccc\"\n    }\n    name = \"colorscheme\";\n    colors: {[key:string]:string} = {};\n    // UDFBLR from UF\n    // INFERR UFR from UF?\n    static valid_schemes = [\n        \"WYGBOR\",\n        \"WYBGRO\",\n        \"WYROGB\",\n        \"WYORBG\",\n        \"YWGBRO\",\n        \"YEBGOR\",\n        \"YWROBG\",\n        \"YWORGB\",\n\n        \"GBWYRO\",\n        \"GBYWOR\",\n        \"GBROYW\",\n        \"GBORWY\",\n        \"BGWYOR\",\n        \"BGYWRO\",\n        \"BGROWY\",\n        \"BGORYW\",\n\n        \"ORWYGB\",\n        \"ORYWBG\",\n        \"ORGBYW\",\n        \"ORBGWY\",\n        \"ROWYBG\",\n        \"ROYWGB\",\n        \"ROGBWY\",\n        \"ROBGYW\",\n    ]\n    static valid_schemes_map = function() {\n        return new Map(ColorScheme.valid_schemes.map(x => [ x[0] + x[2], x]))\n    }();\n    constructor(suppressLoad?: boolean) {\n        super();\n        if (!suppressLoad) {\n            this.load();\n        }\n    }\n    toUserInput() {\n        return \"GBROYWX\".split('').map(x => this.colors[x])\n    }\n    set( colors:{[key:string]:string} | string[]) {\n        let newScheme = new ColorScheme(true);\n        if (Array.isArray(colors)) {\n            colors.forEach( (color, i) => newScheme.colors[\"GBROYWX\"[i]] = color )\n        } else {\n            newScheme.colors = {...this.colors, ...colors};\n        }\n        newScheme.save();\n        return newScheme\n    }\n    setWithDefault() {\n        let newScheme = new ColorScheme(true);\n        newScheme._setDefault();\n        newScheme.save();\n        return newScheme\n    }\n    _setDefault() { this.colors = ColorScheme.default_colors; };\n    serialize() {\n        return JSON.stringify(this.colors)\n    }\n    deserialize(s: string) {\n        this.colors = JSON.parse(s)\n    }\n    getColorsForOri(s: string) {\n        let faces = (ColorScheme.valid_schemes_map.get(s) || ColorScheme.valid_schemes_map.get(\"WG\")) + \"X\";\n        let arr : string[] = []\n        for (let i = 0; i < faces.length; i++) {\n            arr.push(this.colors[faces[i]]!)\n        }\n        return arr\n    }\n}\n\nlet Mask = {\n    lse_mask, fs_back_mask, fs_front_mask, fbdr_mask, fb_mask, sb_mask, cmll_mask, ss_front_mask, ss_back_mask,\n    empty_mask, dl_solved_mask, bl_solved_mask, solved_mask, zhouheng_mask, lse_4c_mask,\n    copy: mask_copy\n}\n\nexport { FaceletCube, CubeUtil, Mask }\n","export type Selector = {\n    names: string[],\n    flags: number[],\n    kind: string,\n    label?: string\n}\n\nfunction getActiveNames(s : Selector) {\n    let ans = []\n    for (let i = 0; i < s.flags.length; i++) {\n        if (s.flags[i] === 1) {\n            ans.push(s.names[i])\n        }\n    }\n    return ans\n}\n\nfunction getActiveName(s : Selector) {\n    for (let i = 0; i < s.flags.length; i++) {\n        if (s.flags[i] === 1) {\n            return (s.names[i])\n        }\n    }\n    return \"\"\n}\n\nexport {getActiveNames, getActiveName}\n","import React from 'react'\n\nimport {\n    FormControlLabel, FormGroup, Button, makeStyles, Box,\n    FormControl, FormLabel, RadioGroup, Checkbox, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport Radio from '@material-ui/core/Radio';\n\nimport { AppState, Config, Action } from '../Types';\nimport { Selector } from '../lib/Selector';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        flexGrow: 1,\n    },\n    select: {\n      color: theme.palette.text.primary\n    },\n    selectLabel: {\n      color: theme.palette.text.secondary\n    }\n\n}))\n\nfunction SingleSelect(props: {state: AppState, dispatch: React.Dispatch<Action>,\n    select: (c: Config) => Selector, label?: string}) {\n    let { state, dispatch, select } = props\n    let { config } = state\n    let sel = select(config)\n    let classes = useStyles()\n\n    const handleChange = (evt: { target: { value: string; }; }) => {\n      let { names } = sel\n      let n = names.length\n      let new_flags = Array(n).fill(0)\n\n      for (let i = 0; i < names.length; i++) {\n        if (names[i] === evt.target.value) {\n          new_flags[i] = 1\n        }\n      }\n      let new_config = JSON.parse(JSON.stringify(config))\n      select(new_config).flags = new_flags\n      if (new_config.fbPairSolvedSelector.flags[1] === 1) {\n        new_config.fbdrSelector.flags = [1, 0, 0]\n      }\n      dispatch( { type: \"config\", content: new_config })\n    }\n\n    let radioValue = function() {\n      let { names, flags } = sel\n      for (let i = 0; i < flags.length; i++) {\n        if (flags[i] === 1) return names[i]\n      }\n      return \"\"\n    }()\n\n    let label = sel.label || props.label || \"\"\n    return (\n      <FormControl component=\"fieldset\" className={classes.select}>\n      <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n      <RadioGroup aria-label=\"position\" name=\"position\" value={radioValue} onChange={handleChange} row>\n        {\n          sel.names.map(name => (\n            <FormControlLabel\n              key={name}\n              value={name}\n              control={<Radio color=\"primary\" />}\n              label={name}\n              labelPlacement=\"end\"\n            />\n          ))\n        }\n      </RadioGroup>\n    </FormControl>)\n  }\n\n\n\n  type MultiOptions = {\n    label?: string, noDialog?: boolean,\n    manipulators?: {name: string, enableIdx: number[]}[]\n  }\n\n\n  function MultiSelectContent(props: {state: AppState, dispatch: React.Dispatch<Action>, select: (c: Config) => Selector, options?: MultiOptions }) {\n    let { state, dispatch, select, options } = props\n    options = options || {}\n    let { config } = state\n\n    let sel = select(config)\n    const handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n      let { names, flags } = sel\n      let new_flags = [...flags]\n\n      for (let i = 0; i < names.length; i++) {\n        if (names[i] === evt.target.value) {\n          new_flags[i] = (evt.target.checked)? 1 : 0\n        }\n      }\n      let new_config = JSON.parse(JSON.stringify(config))\n      select(new_config).flags = new_flags\n      dispatch( { type: \"config\", content: new_config })\n    }\n\n    let makeBox = (name: string, checked: boolean) => {\n      return (\n      <FormControlLabel\n          control={\n          <Checkbox color=\"primary\" checked={checked} onChange={handleChange} />\n          }\n          label={name}\n          key={name}\n          value={name}\n      />)\n    }\n\n    const [manipChecked, setManipChecked] = React.useState< { [ name: string ]: boolean } >({})\n    let label = sel.label || options.label || \"\"\n    let makeManipulator = (manip: {name: string, enableIdx: number[]}) => {\n      let {name, enableIdx} = manip\n      let handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n        setManipChecked( {...manipChecked, [name] : evt.target.checked } )\n        let fillValue = (evt.target.checked);\n        let { flags } = sel\n        let new_flags = [...flags]\n        for (let i of enableIdx) {\n          new_flags[i] = fillValue ? 1 : 0;\n        }\n        let new_config = JSON.parse(JSON.stringify(config))\n        select(new_config).flags = new_flags;\n        dispatch( { type: \"config\", content: new_config } )\n      }\n      return (\n        <FormControlLabel\n        control={\n        <Checkbox color=\"primary\" checked={manipChecked[name]} onChange={handleChange} />\n        }\n        label={name}\n        key={name}\n        value={name}\n        />)\n    }\n    let manipulator_row = options.manipulators ?\n      (<FormGroup row>\n      {options.manipulators.map(x => makeManipulator(x)) }\n      </FormGroup>) : null;\n    const content = (\n      <React.Fragment>\n        {manipulator_row}\n        <FormGroup row>\n        {sel.names.map( (name, i) => makeBox(name, !!sel.flags[i]))}\n        </FormGroup>\n      </React.Fragment>\n    )\n    return {label, content}\n  }\n\n  function MultiSelect(props: {state: AppState, dispatch: React.Dispatch<Action>, select: (c: Config) => Selector, options?: MultiOptions }) {\n    let { state, dispatch, select, options } = props\n    let {label, content} = MultiSelectContent({state, dispatch, select, options})\n    options = options || {}\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    }\n    let classes = useStyles()\n\n    if (options.noDialog)\n    return (\n      <FormControl component=\"fieldset\" className={classes.select}>\n        <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n        {content}\n      </FormControl>\n    )\n\n    return (\n    <div>\n      <FormLabel component=\"legend\">{label}</FormLabel>\n      <Box height={8}/>\n      <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n      <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n        Edit\n      </Button>\n      <Box height={8}/>\n      <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n        <DialogTitle> {label} </DialogTitle>\n        <DialogContent>\n          {content}\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Ok\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n    )\n  }\n\n  export { SingleSelect, MultiSelectContent, MultiSelect }","import React, { Fragment } from 'react'\n\nimport {\n    TextField,\n    Divider,\n    Button, Box,\n    FormLabel, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport { AppState, Config, Action } from '../Types';\nimport { ColorScheme } from '../lib/CubeLib';\n\nimport { MultiSelectContent } from './Select';\n\nexport function ColorSetter(props: {state: AppState, dispatch: React.Dispatch<Action>}) {\n    const [text, setText] = React.useState(props.state.colorScheme.toUserInput().join(\",\"))\n    const handleChange = (event: any) => setText(event.target.value);\n    const handleClick = () => {\n        let arr = text.split(\",\")\n        props.dispatch({\n            type: \"colorScheme\",\n            content: arr.length === 7? arr : ColorScheme.default_colors\n        })\n    }\n    return (\n        <Fragment>\n        <Box>\n        <TextField\n            label=\"Color\"\n            defaultValue=\"Default Value\"\n            helperText=\"G,B,R,O,Y,W,Gray\"\n            onChange={handleChange}\n            fullWidth\n            value={text}\n        /></Box>\n\n        <Box>\n        <Button variant=\"outlined\" size=\"medium\" color=\"primary\" onClick={handleClick} >\n            Set color\n        </Button>\n        </Box>\n        </Fragment>\n    )\n}\n\nexport function ColorPanel(props: {state: AppState, dispatch: React.Dispatch<Action>}) {\n    let { state, dispatch } = props\n    let select = (config: Config) => { return config.orientationSelector }\n    let {label, content} = MultiSelectContent({state, dispatch, select})\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    }\n    return (\n        <div>\n        <FormLabel component=\"legend\">Orientation and Color Scheme</FormLabel>\n        <Box height={8}/>\n        <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n        <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n          Edit\n        </Button>\n        <Box height={8}/>\n        <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n          <DialogTitle> Set Orientation (U-F) and Color Scheme  </DialogTitle>\n          <DialogContent>\n            {content}\n            <Box height={20}/>\n                <Divider />\n            <Box height={20}/>\n            <ColorSetter {...{state, dispatch}}/>\n\n          </DialogContent>\n          <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                  Close\n              </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n}","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { makeStyles, useTheme, FormControl, FormLabel, Typography, Button} from '@material-ui/core';\n\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport { FaceletCube, CubeUtil, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState, Action, Config } from \"../Types\";\nimport clsx from 'clsx';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\nimport { MultiSelect, SingleSelect } from './Select';\nimport { ColorPanel } from './Input';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 300,\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        fontSize: 18,\n        borderBottom: \"2px solid\",\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    button: {\n      width: \"100%\"\n    },\n}))\n\n\n\nfunction _getMask(name: string) {\n  switch (name) {\n    case \"Show\": return Mask.solved_mask;\n    case \"Hide\": return Mask.empty_mask;\n    case \"Hide LSE\": return Mask.lse_mask;\n    default: return Mask.solved_mask\n  }\n}\nfunction CmllTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n    const canvasPaper = clsx(classes.canvasPaper, classes.fixedHeight);\n    let facelet = FaceletCube.from_cubie(cube,\n      _getMask(getActiveName( state.config.cmllCubeMaskSelector) || \"Show\"))\n\n    const theme = useTheme()\n    const simBackground = getActiveName(state.config.theme) === \"bright\" ? \"#eeeeef\" : theme.palette.background.paper\n\n    const cmll = (c: Config) => c.cmllSelector;\n    const cmllcubemask = (c : Config) => c.cmllCubeMaskSelector;\n    const cmllauf = (c: Config) => c.cmllAufSelector;\n    const trigger = (c: Config) => c.triggerSelector;\n    const ori = (c: Config) => c.orientationSelector;\n\n    const panel = (\n      <Fragment>\n        <SingleSelect {...{state, dispatch, select: cmllcubemask, label: \"Virtual Cube\"}} />\n        <MultiSelect {...{state, dispatch, select: cmll, options: { label: \"CMLL Case\", noDialog: true} }} />\n        <MultiSelect {...{state, dispatch, select: cmllauf, options: { label: \"CMLL Auf\", noDialog: true} }} />\n        <MultiSelect {...{state, dispatch, select: trigger, options: { label: \"SB Last Pair Trigger (Uncheck all for pure CMLL)\", noDialog: true} } } />\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n\n    React.useEffect( () =>  {\n      setReveal(false)\n    }, [ state ])\n    const [reveal, setReveal] = React.useState(false)\n    const handleClick = () => {\n      setReveal(true)\n    }\n    const handleNext = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n    }\n\n    React.useEffect(() => {\n      function downHandler(event: KeyboardEvent) {\n        state.keyMapping.handle(event, dispatch);\n      }\n      window.addEventListener('keydown', downHandler);\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n      };\n    });\n\n    let alg = \"\"\n    let setup = \"\"\n    if (state.case.desc.length === 4) {\n      setup = state.case.desc[3].alg\n    }\n    if (reveal && state.case.desc.length >= 3) {\n      const moves = new MoveSeq(state.case.desc[1].alg +state.case.desc[2].alg)\n      let moves_c = moves.collapse()\n      if (moves_c.moves.length > 0) {\n        if (moves_c.moves[0].name[0] === \"U\") {\n          alg += \"(\" + moves_c.moves[0].name + \") \";\n          moves_c.moves = moves_c.moves.slice(1)\n        }\n        alg += moves_c.toString()\n      }\n    }\n    return (\n    <Box className={classes.container}>\n    <Grid container >\n      <Grid item xs={12} >\n            <Paper className={canvasPaper}>\n              <Box margin=\"auto\">\n              <CubeSim\n                width={300}\n                height={300}\n                cube={facelet}\n                colorScheme={state.colorScheme.getColorsForOri(state.cube.ori)}\n                bgColor={simBackground}\n                facesToReveal={[Face.L]}\n              />\n              </Box>\n            </Paper>\n      </Grid>\n    </Grid>\n\n    <Box height = {5}/>\n\n    <Paper className={classes.paper} elevation={2}>\n    <Grid container spacing={2}>\n\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Scramble\n              </Box> </Box>\n      </Box>\n      </Grid>\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { setup }\n          </Typography>\n        </Box>\n\n      </Grid>\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Case\n              </Box> </Box>\n      </Box>\n      </Grid>\n      { (!reveal) ?\n      <Grid item xs={3}>\n      <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n      size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClick}> { /* className={classes.margin}>  */ }\n          Show\n      </Button>\n      </Grid>\n      :\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { alg }\n          </Typography>\n        </Box>\n\n      </Grid>\n      }\n    </Grid>\n    <Box height={30}/>\n\n    <Grid container spacing={0}>\n        <Grid item xs={4} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n          size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\n              Next\n          </Button>\n        </Grid>\n    </Grid>\n    </Paper>\n\n\n    <Box height={20}/>\n      <Divider />\n    <Box height={20}/>\n    { panel }\n\n    <Box height={20}/>\n      <Divider />\n    <Box height={15}/>\n\n    <Box>\n    <FormControl component=\"fieldset\" className={classes.prompt}>\n      <FormLabel component=\"legend\">\n         Usage: Press space for next case. Enter to redo.\n      </FormLabel>\n      </FormControl>\n    </Box>\n\n    </Box>\n    );\n}\n\nexport default CmllTrainerView\n\n\n","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, makeStyles, Typography, useTheme, FormControl, FormLabel, } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nimport { FaceletCube, CubeUtil, Mask, Move, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState,  Action, Config, FavCase, Mode} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport clsx from 'clsx';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\n\nimport { SingleSelect, MultiSelect } from './Select';\nimport { ColorSetter, ColorPanel } from './Input';\nimport { AlgDesc } from '../lib/Algs';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default,\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    sourceIcon : {\n        color: theme.palette.text.hint,\n        fontSize: 18,\n        padding: 0\n    },\n    sourceIconWrap : {\n        height: 32,\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n  }))\n\n\nfunction getMask(state: AppState) : Mask {\n    if (state.mode === \"fbdr\") {\n      const fbOnly = (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\")\n      //   getActiveName(state.config.fbOnlySelector) === \"FB Last Pair\"\n      return fbOnly ? Mask.fb_mask : Mask.fbdr_mask\n    }\n    else if (state.mode === \"fs\") {\n      let name = getActiveName(state.config.fsSelector)\n      return ({\n        \"Front FS\": Mask.fs_front_mask,\n        \"Back FS\": Mask.fs_back_mask,\n        \"Both\": Mask.fb_mask\n      } as any)[name]\n    }\n    else if (state.mode === \"ss\") {\n      if (state.case.desc.length === 0) return Mask.sb_mask\n      if (state.case.desc[0].kind === \"ss-front\")\n        return Mask.ss_front_mask\n      else\n        return Mask.ss_back_mask\n    }\n    else if (state.mode === \"fb\") {\n      if (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\") {\n        return Mask.fb_mask\n      }\n      else if (state.case.desc[0].kind === \"fbdr\") {\n        return Mask.fbdr_mask\n      } else {\n        return Mask.solved_mask\n      }\n    }\n    else if (state.mode === \"4c\" || state.mode === \"eopair\") {\n      return Mask.solved_mask\n    }\n    else return Mask.sb_mask\n}\n\nfunction getHelperTextForMode(mode: Mode) {\n  if (mode === \"4c\" || mode === \"eopair\") {\n    return (\"Usage: Press space for next case. Enter to redo.\"\n      + \"\\n\\n\" + \"Virtual Cube: I/K (E/D) for M'/M, J/F for U/U'\")\n  } else {\n    return null\n  }\n}\n\n\nfunction BlockTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n\n    let facelet = FaceletCube.from_cubie(cube, getMask(state))\n\n    let desc : AlgDesc[] = state.case.desc.length ? state.case.desc :\n       [ { alg: \"\", alt_algs: [], setup:\"Press next for new case\", id: \"\", kind: \"\"} ]\n\n    let spaceButtonText = (state.name === \"hiding\") ? \"Reveal\" : \"Next\"\n\n\n    let describe_reveal = function(algs: AlgDesc[]) {\n      let get_algs = (d: AlgDesc) => [d.alg].concat(d.alt_algs || []);\n      if (algs.length === 1) {\n        return get_algs(algs[0]).join(\"\\n\")\n      } else {\n        return algs.map( alg =>\n          `[${alg.kind}]:\\n` + get_algs(alg).join(\"\\n\") + \"\\n\"\n        )\n      }\n    }\n\n    let describe_hide = (desc: AlgDesc[]) => {\n      let minMove = desc.map( d =>\n        [d.alg].concat(d.alt_algs || [])\n        .map(a => new MoveSeq(a).remove_setup().moves.length))\n        .flat()\n        .reduce( (a, b) => Math.min(a, b), 100 )\n      return `(Min = ${minMove} STM)`\n    }\n    let algText = (state.name === \"hiding\") ? describe_hide(desc)\n      : (state.name === \"revealed\") ? describe_reveal(desc) : \"\"\n\n    const handleSpace = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n      if (spaceButtonText === \"Next\") {\n        setFav(false)\n      }\n    }\n\n    const setup = desc.length ? desc[0].setup! : \"\"\n\n\n    const theme = useTheme()\n    const simBackground = getActiveName(state.config.theme) === \"bright\" ? \"#eeeeef\" : theme.palette.background.paper\n\n    // source\n    // Add event listeners\n    React.useEffect(() => {\n      function downHandler(event: KeyboardEvent) {\n        if (event.key === \" \" && spaceButtonText === \"Next\") {\n          setFav(false)\n        }\n        state.keyMapping.handle(event, dispatch);\n      }\n      window.addEventListener('keydown', downHandler);\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n      };\n    });\n\n\n    const [favSelected, setFav] = React.useState(false)\n    const handleFav = () => {\n      if (state.case.desc.length === 0) return\n      const case_ : FavCase = {\n        mode: state.mode,\n        solver: state.case.desc.map(x => x.kind),\n        setup: setup || \"\"\n      }\n      if (!favSelected){\n        setFav(true)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"add\"})\n      } else {\n        setFav(false)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"remove\" })\n      }\n    }\n\n    // helper-text\n    let helperText = getHelperTextForMode(state.mode)\n\n    return (\n    <Box className={classes.container}>\n\n      <Grid container>\n        <Grid item xs={12}>\n        <Paper className={ clsx(classes.canvasPaper, classes.fixedHeight) }>\n          <Box margin=\"auto\">\n            <CubeSim\n              width={250}\n              height={250}\n              cube={facelet}\n              colorScheme={state.colorScheme.getColorsForOri(state.cube.ori)}\n              hintDistance={ (state.mode === \"4c\" || state.mode === \"eopair\") ? 1.1 : 7 }\n              bgColor={simBackground}\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            />\n          </Box>\n        </Paper>\n        </Grid>\n      </Grid>\n\n      <Paper className={classes.paper} elevation={2}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6} className={classes.scrambleColumn} >\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12} className={classes.infoColumn} >\n            <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Scramble\n              </Box> </Box>\n            <Box flexGrow={0.2}></Box>\n            <Box >\n            {/* <Checkbox  className={classes.sourceIconWrap}\n              icon={<CreateIcon />}\n              checked={sourceSelected}\n              onChange = {handleSource}\n              checkedIcon={<CreateIcon color=\"primary\" />}\n              name=\"source\" /> */}\n\n            <Checkbox  className={classes.sourceIconWrap}\n              icon={<FavoriteIcon />}\n              checked={favSelected}\n              onChange = {handleFav}\n              checkedIcon={<FavoriteIcon color=\"primary\" />}\n              name=\"fav\" />\n\n            </Box>\n\n            </Box>\n\n          </Grid>\n\n          <Grid item xs={12}  >\n            <Box paddingBottom={1} lineHeight={1} className={classes.textColumn}>\n            <Typography style={{whiteSpace: 'pre-line', fontSize: 20, fontWeight: 400}}>\n                {setup}\n              </Typography>\n\n            </Box>\n          </Grid>\n\n\n        </Grid>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12}className={classes.infoColumn} >\n            <Box display=\"flex\" >\n                <Box className={classes.title} >\n                  Solution\n                </Box>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12} className={classes.textColumn} >\n            <Box paddingBottom={2} lineHeight={1}>\n              <Typography style={{whiteSpace: 'pre-line', fontSize: 16}} >\n                {algText}\n              </Typography>\n            </Box>\n\n          </Grid>\n        </Grid>\n        </Grid>\n\n      </Grid>\n\n      <Grid container spacing={0}>\n        <Grid item xs={4} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button} size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleSpace}> { /* className={classes.margin}>  */ }\n              {spaceButtonText}\n          </Button>\n        </Grid>\n      </Grid>\n\n      </Paper>\n\n      <Box height={20}/>\n      <Divider/>\n      <Box height={20}/>\n\n      <ConfigPanelGroup {...{state, dispatch} } />\n\n      {helperText ?\n      <Fragment>\n        <Box height={20}/>\n          <Divider/>\n        <Box height={15}/>\n        <Box>\n        <FormControl component=\"fieldset\" className={classes.prompt}>\n          <FormLabel component=\"legend\">\n            <pre style={{ fontFamily: 'inherit' }}>\n              {helperText}\n            </pre>\n          </FormLabel>\n          </FormControl>\n        </Box>\n      </Fragment> : null }\n    </Box>\n    );\n}\n\n\n\nfunction ConfigPanelGroup(props: {state: AppState, dispatch: React.Dispatch<Action> }) {\n  let { state, dispatch } = props\n  if (state.mode === \"ss\") {\n    let select1 = (config: Config) => { return config.ssSelector }\n    let select2 = (config: Config) => { return config.ssPairOnlySelector }\n    let select3 = (config: Config) => { return config.solutionNumSelector }\n    let select4 = (config: Config) => { return config.ssPosSelector }\n\n    let DRManip = [\n      // names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n      // \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n      { name: \"Toggle Select All\", enableIdx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] },\n      { name: \"Toggle All Oriented\", enableIdx: [0, 2, 4, 6, 8, 10, 12, 14, 16] },\n    ]\n    return (\n      <Fragment>\n      <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n      <MultiSelect {...{state, dispatch, select: select4, options: {manipulators: DRManip} }}> </MultiSelect>\n      <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n  } else if (state.mode === \"fbdr\") {\n    let select1 = (config: Config) => { return config.fbdrSelector }\n    let select2 = (config: Config) => { return config.fbOnlySelector }\n    let select3 = (config: Config) => { return config.fbPairSolvedSelector }\n    let select6 = (config: Config) => { return config.fbdrScrambleSelector }\n    let select4 = (config: Config) => { return config.solutionNumSelector }\n    return (\n      <Fragment>\n      <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select6}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select4}}> </SingleSelect>\n      <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n  } else if (state.mode === \"fb\") {\n    let select1 = (config: Config) => { return config.fbPieceSolvedSelector }\n    let select2 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n   } else if (state.mode === \"fs\") {\n    let select1 = (config: Config) => { return config.fsSelector }\n    let select2 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n   }else if (state.mode === \"4c\"){\n    let select1 = (config: Config) => { return config.lseStageSelector }\n    let select2 = (config: Config) => { return config.lseMCSelector }\n    let select3 = (config: Config) => { return config.lseBarSelector }\n    let select4 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n   } else if (state.mode === \"eopair\"){\n    let select1 = (config: Config) => { return config.lseEOSelector }\n    let select2 = (config: Config) => { return config.lseEOLRMCSelector }\n    let select3 = (config: Config) => { return config.lseBarbieSelector }\n    let select4 = (config: Config) => { return config.lseEOLRScrambleSelector }\n    let select5 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <MultiSelect {...{ state, dispatch, select: select1, options: {noDialog: true}} }> </MultiSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select5 }}> </SingleSelect>\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n   }\n   else return <Fragment/>\n}\n\n\n\nexport default BlockTrainerView\n\n\n","import React, { Dispatch } from 'react'\n\nimport { makeStyles } from '@material-ui/core';\nimport { Grid, GridList, GridListTile, Paper, Container } from '@material-ui/core';\n\nimport { AlgDesc } from \"../lib/Algs\";\nimport { AppState, Action } from '../Types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n      },\n    container: {\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n      },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      gridList: {\n        width: 600,\n        height: 450,\n      },\n}))\n\ntype VisualCubeConfig = {\n    alg: string;\n    stage: string;\n    sch: string; //yrbwog\n}\nfunction VisualCube(props: VisualCubeConfig) {\n  let { alg, stage, sch } = props\n  const template =\n  `http://localhost:8000/visualcube.php?fmt=svg&r=y30x-24&size=150&co=40&fo=100&cc=ccc`\n    + `&stage=${stage}&sch=${sch}&case=${alg}`\n  return <img src={template} alt=\"\"/>\n}\n\nfunction PanoramaTable(props: {algs: AlgDesc[]}){\n    let classes = useStyles()\n    let { algs } = props\n    return <GridList cellHeight={160} className={classes.gridList} cols={3}>\n            {algs.map((alg) => (\n                <GridListTile key={alg.id} cols={1}>\n                    <VisualCube alg={alg.alg} stage=\"f2b\" sch=\"yrbwog\"/>\n                </GridListTile>\n            ))}\n        </GridList>\n}\n\nexport default function PanoramaView(props: { state: AppState, dispatch: Dispatch<Action> }) {\n    let classes = useStyles()\n    let algs : AlgDesc[] = [\n        \"RUR\", \"RU'R'\"\n    ].map( str => ({\n        id: str,\n        alg: str,\n        kind: \"sb\"\n    }))\n\n    return <div className={classes.root}>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n    </div>\n}","import { CubieCube, Move, CubeUtil, Mask } from './CubeLib';\nimport { cartesianProduct } from './Math';\nimport { corners_coord } from './Defs';\n\nexport type PrunerConfig = {\n    size: number,\n    encode: (cube : CubieCube) => number,\n    solved_states: CubieCube[],\n    max_depth: number,\n    moveset: Move[]\n}\n\nexport type PrunerT = {\n    init: () => void,\n    query: (c : CubieCube) => number,\n    equal: (c1 : CubieCube, c2: CubieCube) => boolean,\n    encode: (c : CubieCube) => number\n}\n\nenum PrunerPiece {\n    S, O, I, X\n}; // Solved, Oriented, Include in Permutation, Exclude in Permutation (meaning the moveset will exclude this area)\nconst { S, O, I, X } = PrunerPiece\n\nexport type PrunerDef = {\n    corner: PrunerPiece[],\n    edge:   PrunerPiece[],\n    center: PrunerPiece[],\n    solved_states: string[],\n    moveset: string[],\n    max_depth: number\n}\n\nexport function Pruner(config: PrunerConfig) : PrunerT {\n    let dist: Uint8Array;\n    let { size, encode, solved_states, max_depth, moveset} = config\n    let initialized = false\n    function init() {\n        if (initialized) return\n        initialized = true\n        dist = new Uint8Array(size).fill(255)\n        for (let state of solved_states) {\n            dist[encode(state)] = 0\n        }\n        let frontier = [...solved_states]\n        let total_expanded = frontier.length\n        for (let i = 0; i < max_depth; i++) {\n            console.log(\"pruner: expanding depth \", i)\n            let new_frontier = []\n            for (let state of frontier) {\n                for (let move of moveset) {\n                    let newState = state.apply(move) // clone\n                    let idx = encode(newState)\n                    if (dist[idx] === 255) {\n                        dist[idx] = i + 1;\n                        new_frontier.push(newState)\n                    }\n                }\n            }\n            frontier = new_frontier\n            total_expanded += frontier.length\n        }\n        console.log(\"Initialization complete. size = \", total_expanded)\n    }\n    function query(cube: CubieCube) {\n        let d = dist[encode(cube)]\n        if (d === 255) return max_depth + 1;\n        return d\n    }\n    function equal(cube1: CubieCube, cube2: CubieCube) {\n        return encode(cube1) === encode(cube2)\n    }\n    return  {\n        init,\n        query,\n        equal,\n        encode\n    }\n}\n\n\n\nlet prunerFactory = function(def: PrunerDef): PrunerConfig {\n    // edge\n    if (def.corner.length !== 8 || def.edge.length !== 12 || def.center.length !== 6) {\n        throw new Error(\"Invalid pruner def\");\n    }\n    const {S, O, I, X} = PrunerPiece\n    const def_to_idx = (d : PrunerPiece[], count_all?: boolean) => {\n        let curr_idx = 0, idx_arr = []\n        for (let i = 0; i < d.length; i++) {\n            if (d[i] === S || (count_all && (d[i] === O || d[i] === I))) {\n                idx_arr.push(curr_idx++);\n            } else idx_arr.push(-1);\n        }\n        return idx_arr;\n    }\n    let eosize = def.edge.filter(x => x === S || x === O).length\n    let epsize = def.edge.filter(x => x === S).length\n    let eisize = def.edge.filter(x => x !== X).length\n    let esize = Math.pow(2, eosize) * Math.pow(eisize, epsize)\n    let ep_idx = def_to_idx(def.edge, false);\n    let e_idx = def_to_idx(def.edge, true);\n\n    let cosize = def.corner.filter(x => x === S || x === O).length\n    let cpsize = def.corner.filter(x => x === S).length\n    let cisize = def.edge.filter(x => x !== X).length\n    let csize = Math.pow(2, cosize) * Math.pow(cisize, cpsize)\n    let cp_idx = def_to_idx(def.corner, false);\n    let c_idx = def_to_idx(def.corner, true);\n\n    let tosize = def.center.filter(x => x === O).length\n    let tpsize = def.center.filter(x => x === S).length\n    let tisize = def.edge.filter(x => x !== X).length\n    let tsize = Math.pow(2, tosize) * Math.pow(tisize, tpsize)\n    let tp_idx = def_to_idx(def.center, false);\n    let t_idx = def_to_idx(def.center, true);\n\n    let size = esize * csize * tsize;\n\n    function encode(cube: CubieCube) {\n        let eo = 0, ep = 0, co = 0, cp = 0, to = 0, tp = 0, e, c, t\n        for (let i = 0; i < 12; i++) {\n            switch (def.edge[cube.ep[i]]) {\n                case S:\n                    eo = eo * 2 + cube.eo[i];\n                    ep = ep + Math.pow(eisize, ep_idx[cube.ep[i]]) * e_idx[i];\n                    break;\n                case O:\n                    eo = eo * 2 + cube.eo[i];\n                    break;\n            }\n        }\n        e = ep * Math.pow(2, eosize) + eo\n        for (let i = 0; i < 8; i++) {\n            switch (def.corner[cube.cp[i]]) {\n                case S:\n                    co = co * 3 + cube.co[i];\n                    cp = cp + Math.pow(cisize, cp_idx[cube.cp[i]]) * c_idx[i];\n                    break;\n                case O:\n                    co = co * 3 + cube.co[i];\n                    break;\n            }\n        }\n        c = cp * Math.pow(3, cosize) + co\n        for (let i = 0; i < 6; i++) {\n            switch (def.center[cube.tp[i]]) {\n                case S:\n                    tp = Math.pow(tisize, tp_idx[cube.tp[i]]) + i;\n                    break;\n                case O:\n                    to = to * 3 + (cube.tp[i] / 2) | 0;\n                    break;\n            }\n        }\n        t = tp * Math.pow(3, tosize) + to\n        return e * csize * tsize + c * tsize + t\n    }\n\n    const solved_states = def.solved_states.map( m => new CubieCube().apply(m))\n    const moveset : Move[] = def.moveset.map(s => Move.all[s])\n    const max_depth = def.max_depth\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\n\n\nlet fbdrPrunerConfig : PrunerConfig = function() {\n    const esize = Math.pow(24, 4)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        if (cube.cp[i] === 4) {\n          c1 = i * 3 + cube.co[i]\n        } else if (cube.cp[i] === 5) {\n          c2 = i * 3 + cube.co[i];\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0, e4 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n              case 7 : e4 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24 * 24) + e2 * (24 * 24) + e3 * 24 + e4\n      return enc_c + 24 * 24 * enc_e\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const max_depth = 4\n    const moveset : Move[] = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\nlet htm_rwm = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"]\n\nlet fbPrunerConfig = prunerFactory({\n    corner: [I,I,I,I,S,S,I,I],\n    edge:   [I,I,I,I,I,S,I,I,S,S,I,I],\n    center: [I,I,I,I,S,I],\n    solved_states: [\"id\"],\n    moveset: htm_rwm,\n    max_depth: 4\n});\n\nlet fbPrunerConfig_old : PrunerConfig = function() {\n    const esize = Math.pow(24, 3)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize * 6\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        if (cube.cp[i] === 4) {\n          c1 = i * 3 + cube.co[i]\n        } else if (cube.cp[i] === 5) {\n          c2 = i * 3 + cube.co[i];\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24 ) + e2 * (24 ) + e3\n      const enc_ce = enc_c + 24 * 24 * enc_e\n\n      let t1 = 0\n      for (let i = 0; i < 5; i++) {\n          if (cube.tp[i] === 4) { t1 = i }\n      }\n      const enc = enc_ce * 6 + t1\n      return enc\n    }\n\n    const moves = [\"id\"]\n    const solved_states = moves.map( move => new CubieCube().apply(move))\n\n    const max_depth = 4\n    const moveset : Move[] = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"] /* \"E\", \"E'\", \"E2\", \"S\", \"S'\", \"S2\" ]*/\n    .map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\n\n\n\nlet ssPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 3)\n    const c1 = is_front ? 7 : 6;\n    const e1 = is_front ? 11 : 10\n    const e2 = 7\n    function encode(cube:CubieCube) {\n      let v = [0 ,0, 0]\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v[0] = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n          if (cube.ep[i] === e1) v[1] = i * 2 + cube.eo[i];\n          else if (cube.ep[i] === e2) v[2] = i * 2 + cube.eo[i]\n      }\n      return v[0] + v[1] * 24 + v[2] * 24 * 24\n    }\n\n    const moves = [[]] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move))\n\n    const max_depth = 5\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n        \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\n\nlet fsPrunerConfig = (is_front: boolean) => prunerFactory({\n        corner: is_front ? [I,I,I,I,S,I,I,I] : [I,I,I,I,I,S,I,I] ,\n        edge:   is_front ? [I,I,I,I,I,S,I,I,S,I,I,I] : [I,I,I,I,I,S,I,I,I,S,I,I] ,\n        center: [I,I,I,I,S,I],\n        solved_states: [\"id\"],\n        moveset: htm_rwm,\n        max_depth: 4\n    });\n\n\nlet lsePrunerConfig : PrunerConfig = function() {\n    const size = Math.pow(12, 6) * 4 * 4 // TODO: optimize this plz\n    function encode(cube:CubieCube) {\n      let edge_encode = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n      let enc = [0, 0, 0, 0, 0, 0]\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx > -1) {\n            enc[idx] = edge_encode[i] * 2 + cube.eo[i];\n        }\n      }\n      let edge_enc = 0;\n      for (let i = 0; i < 6; i++) {\n        edge_enc = edge_enc * 12 + enc[i];\n      }\n      return edge_enc * 4 * 4 + cube.tp[0] * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves = [Move.all[\"id\"]]\n    const solved_states = moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 7\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\nfunction eolrPrunerConfig(center_flag: number, barbie_mode?: string): PrunerConfig {\n    const size = 6 * 6 * Math.pow(2, 6) * 4 * 2 // TODO: optimize this plz\n\n    const edge_encode = [0, 1, 0, 2, 0, -1, 0, -1, -1, -1, -1, -1];\n    const edge_idx = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n    function encode(cube:CubieCube) {\n      let eo = 0, ep = 0\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx >= 0) {\n            eo = eo * 2 + cube.eo[i]\n        }\n        if (idx > 0) {\n            ep += Math.pow(6, idx - 1) * edge_idx[i]\n        }\n      }\n      // make no distinction between centers M2 apart\n      return (eo * 36 + ep) * 4 * 2 + ~~(cube.tp[0] / 2) * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves_ac = cartesianProduct( [\"U'\", \"U\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"] ).map(x => x.join(\" \"))\n    const moves_mc = cartesianProduct( [\"M'\"], [\"U\", \"U'\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"]).map(x => x.join(\" \"))\n    let moves: string[] = []\n    if (center_flag & 0x01) moves = moves.concat(moves_ac)\n    if (center_flag & 0x10) moves = moves.concat(moves_mc)\n\n    const barb_moves_ac = [\"U\", \"U'\"]\n    const barb_moves_mc = [\"M U\", \"M U'\"]\n    let barb_moves: string[] = []\n    if (center_flag & 0x01) barb_moves = barb_moves.concat(barb_moves_ac)\n    if (center_flag & 0x10) barb_moves = barb_moves.concat(barb_moves_mc)\n\n    const pre_moves = barbie_mode === \"barbie\" ? barb_moves :\n        (barbie_mode === \"ab4c\" ? [\"id\"] : moves)\n\n    const solved_states = pre_moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 20\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\n\nexport { fbdrPrunerConfig, fsPrunerConfig, ssPrunerConfig, fbPrunerConfig, lsePrunerConfig, eolrPrunerConfig,\n    prunerFactory, fbPrunerConfig_old}","import {initialize, solve as min2phaseSolve, Min2PhaseCube} from \"./min2phase.js\"\nimport { CubieCube } from \"../CubeLib\";\n\nexport {initialize}\n\nfunction toMin2Phase(state: CubieCube): Min2PhaseCube {\n  // Note: this is its own inverse.\n  // const conjugate = {\n  //   EDGE: { permutation: [ 1, 0, 3, 2, 5, 4, 7, 6, 8, 9, 11, 10 ],\n  //           orientation: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CORNER: { permutation: [ 0, 3, 2, 1, 4, 5, 6, 7 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CENTER: { permutation: [ 0, 1, 2, 3, 4, 5 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0 ] }\n  // };\n  // const pseudo = Combine(def, Combine(def, conjugate, Invert(def, state)), conjugate);\n\n  return {\n    cp: state.cp,\n    co: state.co,\n    ep: state.ep,\n    eo: state.eo\n  }\n}\n\nexport function solve(state: CubieCube): string {\n  return min2phaseSolve(toMin2Phase(state));\n}\n","import { CubieCube, Move, MoveSeq } from './CubeLib';\nimport { arrayEqual } from './Math';\n\nimport { Pruner, PrunerT, fbdrPrunerConfig, fsPrunerConfig, ssPrunerConfig, fbPrunerConfig, lsePrunerConfig, PrunerConfig, eolrPrunerConfig, PrunerDef, fbPrunerConfig_old } from './Pruner';\n\nimport { prunerFactory } from './Pruner';\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\n\n\ntype SolverConfig = {\n    is_solved: (cube : CubieCube) => boolean,\n    moveset: Move[],\n    pruners: PrunerT[],\n}\n\ntype Accumulator = {\n    solutions: MoveSeq[],\n    capacity: number\n}\n\nexport type SolverT = {\n    solve: (cube : CubieCube, l : number, r : number, c : number) => MoveSeq[],\n    is_solved: (cube : CubieCube) => boolean,\n    getPruner: () => PrunerT[]\n}\n\n\nfunction Solver(config: SolverConfig) : SolverT{\n    const MAX_STATE_COUNT = 1000000\n    let { moveset, is_solved, pruners } = config\n    let state_count = 0, prune_count = 0;\n    let accum : Accumulator\n    let max_depth : number\n    let min_depth : number\n\n    enum SState {\n        CONTINUE,\n        STOP\n    };\n\n    function solve_depth(cube: CubieCube, min_depth_: number, max_depth_: number, accum_: Accumulator) {\n        accum = accum_\n        max_depth = max_depth_\n        min_depth = min_depth_\n        state_count = 0\n        prune_count = 0\n        search(cube, 0, [])\n        return accum\n    }\n\n    let Moveable = Object.create({})\n    function prepareNextMoveable() {\n        function getAvailableMove(name : string) {\n            switch (name[0]) {\n                case \"U\": return moveset.filter(k => k.name[0] !== \"U\");\n                case \"D\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\");\n                case \"R\": {\n                    let base = moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"r\");\n                    if (name === \"R\") return base.filter(k => k.name !== \"M'\")\n                    if (name === \"R'\") return base.filter(k => k.name !== \"M\")\n                    if (name === \"R2\") return base.filter(k => k.name !== \"M2\")\n                    return base\n                }\n                case \"L\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"r\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"M\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"F\": return moveset.filter(k => k.name[0] !== \"F\");\n                case \"B\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\");\n\n                case \"E\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\" && k.name[0] !== \"E\");\n                case \"S\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\" && k.name[0] !== \"S\");\n            }\n        }\n        for (let move of moveset) {\n            Moveable[move.name] = getAvailableMove(move.name)\n        }\n    }\n    prepareNextMoveable()\n\n    function expand(cube: CubieCube, depth: number, solution: Move[]) : SState{\n        const availableMoves = solution.length > 0 ? Moveable[solution[solution.length - 1].name] : moveset\n        const seen_encodings = new Set()\n        seen_encodings.add(pruners[0].encode(cube))\n        for (let move of availableMoves) {\n            let new_cube = cube.apply(move)\n            let enc = pruners[0].encode(new_cube)\n            let redundant = seen_encodings.has(enc)\n            if (!redundant) {\n                seen_encodings.add(enc)\n                solution.push(move);\n                let st : SState = search(new_cube, depth + 1, solution);\n                solution.pop();\n                if (st === SState.STOP) {\n                    return SState.STOP\n                }\n            }\n        }\n        return SState.CONTINUE\n    }\n\n    function try_push(solution: Move[], depth: number) {\n        if (depth < min_depth) return SState.CONTINUE\n        if (accum.solutions.length < accum.capacity) {\n            let flag = true\n            for (let sol of accum.solutions) {\n                if (arrayEqual(sol.moves, solution)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                accum.solutions.push(new MoveSeq([...solution]))\n            }\n        }\n\n        if (accum.solutions.length === accum.capacity) {\n            return SState.STOP\n        } else {\n            return SState.CONTINUE\n        }\n    }\n\n    function search(cube: CubieCube, depth: number, solution: Move[]) : SState {\n        state_count++;\n        if (state_count > MAX_STATE_COUNT) {\n            return SState.STOP\n        }\n        if (is_solved(cube)) {\n            return try_push(solution, depth)\n        } else {\n            if (depth >= max_depth) return SState.CONTINUE;\n            let d = pruners[0].query(cube)\n            if (d + depth > max_depth) {\n                prune_count++;\n                return SState.CONTINUE\n            } else {\n                return expand(cube, depth, solution)\n            }\n        }\n    }\n\n    function solve(cube: CubieCube, depth_l: number, depth_r: number, capacity: number) {\n        let accum : Accumulator = {\n            solutions: [],\n            capacity\n        }\n        for (let i = depth_l; i <= depth_r; i++) {\n            accum = solve_depth(cube, depth_l, i, accum)\n            if (accum.solutions.length === accum.capacity) {\n                break;\n            }\n        }\n        console.log(`Number of states = ${state_count}, pruned = ${prune_count}`);\n        return accum.solutions\n    }\n\n    function getPruner() {\n        return pruners\n    }\n    return { solve, is_solved, getPruner }\n};\n\nfunction solverFactory(def: PrunerDef | PrunerConfig) {\n    let prunerConfig: PrunerConfig\n    if (\"corner\" in def) {\n        prunerConfig = prunerFactory(def);\n    } else {\n        prunerConfig = def\n    }\n    let pruner = Pruner(prunerConfig)\n    pruner.init()\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    let solved_states = new Set(prunerConfig.solved_states.map(x => pruner.query(x)))\n    let is_solved = (prunerConfig.solved_states.length === 0) ?\n        (cube: CubieCube) => pruner.query(cube) === 0 :\n        (cube: CubieCube) => solved_states.has(pruner.query(cube));\n\n    let config = {\n        is_solved,\n        moveset: prunerConfig.moveset,\n        pruners: [pruner],\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nlet FbSolver = (useOld?: boolean) => solverFactory(useOld ? fbPrunerConfig_old : fbPrunerConfig)\n\nlet FbdrSolver = () => solverFactory(fbdrPrunerConfig)\n\nlet SsSolver = (is_front: boolean) => solverFactory(ssPrunerConfig(is_front))\n\nlet FsSolver = (is_front: boolean) => solverFactory(fsPrunerConfig(is_front))\n\nlet LSESolver = () => solverFactory(lsePrunerConfig)\n\nlet EOLRSolver = (center_flag: number, barbie_mode?: string) =>\n    solverFactory(eolrPrunerConfig(center_flag, barbie_mode))\n\nlet Min2PhaseSolver : () => SolverT = function() {\n    // polyfill for min2phase\n\n    min2phase_init();\n    function solve(cube : CubieCube, l : number, r : number, c : number) {\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp), \"Cube center is not solved: \" + cube.tp)\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        let solution = min2phase_solve(transformed_cube);\n        return [ new MoveSeq(solution) ]\n    }\n    function is_solved(cube: CubieCube) {\n        return true\n    }\n    function getPruner() {\n        return []\n    }\n    return {\n        solve,\n        is_solved,\n        getPruner\n    }\n}\n\n\n\nexport { FbdrSolver, FbSolver, FsSolver, SsSolver, Min2PhaseSolver, LSESolver, EOLRSolver }","import { FbdrSolver, SolverT, FsSolver, SsSolver, FbSolver, Min2PhaseSolver, LSESolver, EOLRSolver} from './Solver';\n\nlet all_solvers = [\n\"fbdr\",\"fb\", \"ss-front\", \"ss-back\", \"min2phase\",\n\"lse\", \"eolrac\", \"eolrmc\", \"eolr\", \"eolrac-b\", \"eolrmc-b\", \"eolr-b\" ]\n\nlet CachedSolver = function() {\n    let cache : Map<string, SolverT> = new Map()\n    function get(s: string) {\n        if (!cache.has(s)) {\n            switch (s) {\n                case \"fbdr\": cache.set(s, FbdrSolver()); break\n                case \"fb\": cache.set(s, FbSolver()); break\n                case \"fs-front\": cache.set(s, FsSolver(true)); break\n                case \"fs-back\": cache.set(s, FsSolver(false)); break\n                case \"ss-front\": cache.set(s, SsSolver(true)); break\n                case \"ss-back\": cache.set(s, SsSolver(false)); break\n                case \"min2phase\": cache.set(s, Min2PhaseSolver()); break\n                case \"lse\": cache.set(s, LSESolver()); break\n                case \"lse-ab4c\": cache.set(s, EOLRSolver(0x01, \"ab4c\")); break\n                case \"eolrac\": cache.set(s, EOLRSolver(0x01)); break\n                case \"eolrmc\": cache.set(s, EOLRSolver(0x10)); break\n                case \"eolr\": cache.set(s, EOLRSolver(0x11)); break\n                case \"eolrac-b\": cache.set(s, EOLRSolver(0x01, \"barbie\")); break\n                case \"eolrmc-b\": cache.set(s, EOLRSolver(0x10, \"barbie\")); break\n                case \"eolr-b\": cache.set(s, EOLRSolver(0x11, \"barbie\")); break\n            }\n        }\n        return cache.get(s) as SolverT\n    }\n    return {get}\n}()\n\nexport {CachedSolver, all_solvers}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  Button, IconButton, DialogContent, TextField, DialogContentText\n} from '@material-ui/core';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { Table, Paper, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\n\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport AddIcon from '@material-ui/icons/Add';\nimport { AppState, Action, FavCase } from '../Types';\nimport { all_solvers } from '../lib/CachedSolver';\n\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    width: '100%',\n    minWidth: 200,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport function warnDialog(props: { confirm: () => void} ) {\n\n}\n\nfunction parseAddString(state: AppState, s : string) : [ FavCase[], boolean] {\n  const res : FavCase[] = []\n\n  const allSolvers = new Set(all_solvers);\n  for (const line of s.split('\\n')) {\n    let cols = line.split(',')\n    if (cols.length !== 2) continue\n    let solver = cols[0].trim().split(\"|\")\n    let setup = cols[1].trim()\n\n    if (solver.every(x => allSolvers.has(x))) {\n      let case_ : FavCase = {\n        mode: state.mode,\n        solver,\n        setup\n      }\n      res.push(case_)\n    }\n  }\n  if (res.length > 0) return [res, true]\n  else return [ [], false]\n}\n\nexport default function FavListView(props: { state: AppState, dispatch: React.Dispatch<Action> }) {\n  const {state, dispatch} = props\n  const classes = useStyles();\n  const favList = state.favList.filter(c => c.mode === state.mode)\n\n  const play = (i: number) => {\n    dispatch({ type: \"favList\", content: [ favList[i] ], action: \"replay\" })\n  }\n  const remove = () => {\n    if (dialogID >= 0 && dialogID < favList.length)\n    dispatch({ type: \"favList\", content: [ favList[dialogID] ], action: \"remove\" })\n  }\n  const [ dialogID, setDialogID ] = React.useState(-1)\n\n  const handleClose = () => setDialogID(-1)\n  const handleRemove = () => { remove(); setDialogID(-1); }\n  const dialogDelete = (<Dialog open={dialogID >= 0} onClose={handleClose} >\n    <DialogTitle id=\"alert-dialog-title\">{\"Delete this alg from favorites?\"}</DialogTitle>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        No\n    </Button>\n      <Button onClick={handleRemove} color=\"primary\" autoFocus>\n        Yes\n    </Button>\n    </DialogActions>\n  </Dialog>)\n\n  const [ addDialogOpen, setAddDialogOpen ] = React.useState(false)\n  const [ addString, setAddString ] = React.useState(\"\")\n  const handleAdd = () => setAddDialogOpen(true)\n  const handleAddClose = () => setAddDialogOpen(false)\n  const handleAddSuccess = () => {\n    let [res, status] = parseAddString(state, addString)\n    if (status) {\n      dispatch({ type: \"favList\", content: res, action: \"add\" })\n    }\n    handleAddClose()\n  }\n  const handleTextChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\n    setAddString(event.target.value)\n  }\n  const dialogAdd = <Dialog open={addDialogOpen} onClose={handleAddClose} aria-labelledby=\"form-dialog-title\">\n    <DialogTitle id=\"form-dialog-title\">Add New Cases</DialogTitle>\n    <DialogContent>\n      <DialogContentText>\n        Input your cases here. (one per line) <br></br>\n        Format: [category], [setup algorithm].\n        category := fb | fbdr | ss-front | ss-back\n      </DialogContentText>\n      <TextField\n        autoFocus\n        multiline\n        margin=\"dense\"\n        id=\"name\"\n        fullWidth\n        onChange={handleTextChange}\n        onKeyDown={ (event) => { event.stopPropagation() } }\n      />\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleAddClose} color=\"primary\">\n        Cancel\n    </Button>\n      <Button onClick={handleAddSuccess} color=\"primary\">\n        Add All\n    </Button>\n    </DialogActions>\n  </Dialog>\n\n\n  return (\n    <div>\n    {dialogDelete}\n    {dialogAdd}\n    <Paper>\n      <Table className={classes.table} size=\"small\" >\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"> Scramble </TableCell>\n            <TableCell align=\"center\" rowSpan={1}>\n              <IconButton   onClick={handleAdd} component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <AddIcon />\n              </IconButton>\n            {/* <IconButton component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <FileCopyIcon />\n              </IconButton> */}\n             </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {favList.map((value, i) => {\n            //const labelId = `favlist-label-${i}`;\n            return (\n              <TableRow key={i}>\n                {/* <TableCell align=\"center\" >\n                  {/* padding=checkbox <Checkbox></Checkbox> */}\n\n                <TableCell align=\"center\">\n                { value.solver.join(\"|\") + \",\" + value.setup }\n                </TableCell>\n                <TableCell align=\"center\">\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => play(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <PlaylistPlayIcon />\n                  </IconButton>\n\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => setDialogID(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <DeleteOutlineIcon />\n                  </IconButton>\n\n                </TableCell>\n              </TableRow>\n            )\n          })}</TableBody>\n      </Table>\n    </Paper>\n    </div>\n  )\n}","import React from 'react'\nimport { AppState, Mode, Action } from \"../Types\";\n\nimport { Box, AppBar, Typography,Button,  Tabs, Tab, makeStyles } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { Grid, Container } from '@material-ui/core';\n\nimport CmllTrainerView from './CmllTrainerView';\nimport BlockTrainerView from './BlockTrainerView';\nimport PanoramaView from './PanoramaView';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\nimport InfoIcon from '@material-ui/icons/Info';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\n\nimport 'typeface-roboto';\n\nimport FavListView from './FavListView';\n\nimport { ENABLE_DEV } from '../settings';\n\ninterface TabPanelProps {\n  value: number,\n  index: number,\n  children: any,\n  [key: string]: any\n}\nfunction TabPanel(props: TabPanelProps ) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </Typography>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  page: {\n    backgroundColor: theme.palette.background.default\n  },\n  container: {\n    display: \"flex\"\n  },\n  icon: {\n    minWidth: 0\n  },\n  root: {\n    display: \"flex\"\n  }\n}))\n\n\nconst modes : Mode[] = [\"fbdr\", \"fs\", \"fb\", \"ss\", \"cmll\", \"4c\", \"eopair\"]\n\nfunction _getInitialHashLocation() {\n  if (window.location.hash) {\n    let idx = (modes as string[]).indexOf(window.location.hash.slice(1))\n    if (idx === -1) {\n      window.location.hash = \"\";\n      return 0;\n    } else {\n      return idx;\n    }\n  } else {\n    return 0\n  }\n}\n\n\n// TODO: Write getter and setter for config items, and also write handlers that map to setters\nfunction AppView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n  //const [locations, setLocations] = React.useState([])\n  let { state, dispatch } = props\n  let classes = useStyles()\n\n  const handleChange = React.useCallback( (_:any, newValue:number) => {\n    if (newValue < modes.length) {\n      setValue(newValue)\n      let mode = modes[newValue]\n      dispatch({type: \"mode\", content: mode})\n    }\n  }, [dispatch])\n\n  const [ open, setOpen ] = React.useState(false)\n\n  const [value, setValue] = React.useState(_getInitialHashLocation());\n  React.useEffect( () => {\n    dispatch({type: \"mode\", content: modes[_getInitialHashLocation()]})\n  }, [])\n\n  const handleInfoOpen = () => { setOpen(true) }\n  const handleInfoClose = () => { setOpen(false) }\n\n  const toggleBright = () => {\n    const theme_flag = [...state.config.theme.flags]\n    theme_flag[0] = 1 - theme_flag[0]\n    theme_flag[1] = 1 - theme_flag[1]\n    dispatch({ type: \"config\", content: {\n      theme: {\n        ...state.config.theme,\n        flags: theme_flag\n    }}})\n  }\n  const toggleFav = () => {\n    setFav(!showFav)\n  }\n\n  const [ showFav, setFav ] = React.useState(false)\n\n  return (\n    <main>\n      <Dialog open={open} onClose={handleInfoClose} >\n      <DialogTitle>About</DialogTitle>\n      <DialogContent dividers>\n        <Typography gutterBottom style={{whiteSpace: 'pre-line', fontSize: '1.3rem'}}>\n          Welcome to my awesome roux block trainer.\n        </Typography>\n        <br/>\n\n        <Typography gutterBottom style={{whiteSpace: 'pre-line'}}>\n\n        A bunch of shortcuts: <br/>\n        - Space for the next scramble. <br/>\n        - Enter to reset the virtual cube to current scramble. <br/>\n        - Cstimer style virtual cube control. <br/>\n\n        <br/>\n        </Typography>\n\n        {/* <Typography gutterBottom style={{whiteSpace: 'pre-line'}} variant=\"subtitle2\">\n        Currently supporting: FB+DR, SS, CMLL\n        </Typography> */}\n\n        <Typography gutterBottom style={{whiteSpace: 'pre-line'}} variant=\"body2\">\n\n        Feature requests are most definitely welcome. :)\n        </Typography>\n\n        <Typography gutterBottom variant=\"overline\">\n\n        --onionhoney(Zhouheng Sun)\n        </Typography>\n\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={handleInfoClose}>\n          Got it!\n        </Button>\n      </DialogActions>\n      </Dialog>\n\n      <AppBar color=\"primary\" position=\"static\">\n        <Tabs value={value} onChange={handleChange} scrollButtons=\"on\" variant=\"scrollable\" indicatorColor=\"secondary\" >\n          <Tab onFocus={e => e.target.blur() } label=\"FB Pair + DR \" id='tab0' />\n          <Tab onFocus={e => e.target.blur() } label=\"FS \" id='tab1' />\n          <Tab onFocus={e => e.target.blur() } label=\"Tough FB \" id='tab2' />\n          <Tab onFocus={e => e.target.blur() } label=\"SSquare \" id='tab3' />\n          <Tab onFocus={e => e.target.blur() } label=\"CMLL \" id='tab4'/>\n          <Tab onFocus={e => e.target.blur() } label=\"LSE 4c\" id='tab5'/>\n          <Tab onFocus={e => e.target.blur() } label=\"EOPair (LR/FB)\" id='tab6'/>\n          { ENABLE_DEV ?\n          <Tab onFocus={e => e.target.blur() } label=\"...\" id='tab7'/> : null }\n          <div style={{ flexGrow: 1 }}/>\n\n\n          <Tab onFocus={e => e.target.blur() } id='icon2' onClick={toggleFav} icon={ <BookmarkIcon /> } className={classes.icon} />\n          <Tab onFocus={e => e.target.blur() } id='icon0' onClick={toggleBright} icon={ <Brightness6Icon /> } className={classes.icon} />\n          <Tab onFocus={e => e.target.blur() } id='icon1' onClick={handleInfoOpen} icon={ <InfoIcon /> } className={classes.icon} />\n\n        </Tabs>\n      </AppBar>\n\n      <Box paddingY={2}>\n      <Container maxWidth={showFav ? \"md\" : \"sm\" }>\n\n      {\n      value === -1?\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item md={12} sm={12} xs={12}>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <PanoramaView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      :\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item hidden={!showFav} md={4} sm={4} xs={12} >\n        <FavListView {...{state, dispatch}} />\n        </Grid>\n\n        <Grid item md={showFav ? 8 : 12} sm={showFav ? 8 : 12} xs={12}>\n        <TabPanel value={value} index={0} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={1} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={2} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={3} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <CmllTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={5} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={6} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      }\n      </Container></Box>\n\n\n\n    </main>\n  )\n}\nexport default AppView","\nimport { Config, FavCase } from \"./Types\"\nexport const initialFavList : FavCase[] = []\nexport const initialConfig : Config = (() => {\n    let arr_ori_flag = Array(24).fill(0)\n    arr_ori_flag[7] = 1 // YR\n    return {\n        theme: {\n            names: [\"bright\", \"dark\"],\n            flags: [1,0],\n            kind: \"theme\"\n        },\n        cmllSelector: {\n            names: [\"o\", \"s\", \"as\", \"t\", \"l\", \"u\", \"pi\", \"h\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"cmll\",\n        },\n        cmllAufSelector: {\n            names: [\"None\", \"U\", \"U'\", \"U2\"],\n            flags: [1, 1, 1, 1],\n            kind: \"u_auf\"\n        },\n        cmllCubeMaskSelector: {\n            names: [\"Show\", \"Hide\", \"Hide LSE\"],\n            flags: [1, 0, 0],\n            kind: \"cube_mask\"\n        },\n        triggerSelector: {\n            names: [\"RUR'\", \"RU'R'\", \"R'U'R\", \"R'UR\"],\n            flags: [0, 0, 0, 0],\n            kind: \"trigger\"\n        },\n        orientationSelector: {\n            label: \"Color Scheme (U-F)\",\n            names: [\n                \"WG\", \"WB\", \"WO\", \"WR\",\n                \"YG\", \"YB\", \"YO\", \"YR\",\n                \"BW\", \"BY\", \"BO\", \"BR\",\n                \"GW\", \"GY\", \"GO\", \"GR\",\n                \"OW\", \"OY\", \"OB\", \"OG\",\n                \"RW\", \"RY\", \"RB\", \"RG\",\n            ],\n            flags: arr_ori_flag,\n            kind: \"orientation\"\n        },\n        fbdrSelector: {\n            label: \"Position of square\",\n            names: [\"FS at back\", \"FS at front\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"fbdr\"\n        },\n        fbdrScrambleSelector: {\n            label: \"Type of scramble\",\n            names: [\"Short (Concerning FBDR Pieces only)\", \"Random State (Entire cube, useful for practicing F2B)\"],\n            flags: [1, 0],\n            kind: \"fbdr-scramble\"\n        },\n        fbOnlySelector: {\n            label: \"Pieces to solve\",\n            names: [\"FB Last Pair + DR\", \"FB Last Pair Only\"],\n            flags: [1, 0],\n            kind: \"fb-only\"\n        },\n        fbPairSolvedSelector: {\n            label: \"Last Pair pattern\",\n            names: [\"Random\", \"Solved(FS at back only)\"],\n            flags: [1, 0],\n            kind: \"fb-pair-solved\"\n        },\n        fsSelector: {\n            label: \"Position of square\",\n            names: [\"Front FS\", \"Back FS\", \"Both\"],\n            flags: [0, 0, 1],\n            kind: \"fs\"\n        },\n        ssSelector: {\n            label: \"Position of square\",\n            names: [\"SS at front\", \"SS at back\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"ss\"\n        },\n        ssEOSelector: {\n            label: \"Orientation of DR\",\n            names: [\"Oriented\", \"Misoriented\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"ss-orientation\"\n        },\n        ssPosSelector: {\n            label: \"Position of DR\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"ss-position\"\n        },\n        ssPairOnlySelector: {\n            label: \"Solve w/wo DR\",\n            names: [\"SS\", \"SB First Pair\"],\n            flags: [1, 0],\n            kind: \"sb-pair-only\"\n        },\n        solutionNumSelector: {\n            label: \"Number of solutions\",\n            names: [\"1\", \"3\", \"5\", \"10\", \"25\"],\n            flags: [0, 0, 1, 0, 0],\n            kind: \"solution-num\"\n        },\n        fbPieceSolvedSelector: {\n            label: \"Difficulty\",\n            names: [\"Hard over x2y(Scramble only)\", \"Hard\", \"DL Solved\", \"BL Solved\", \"Random\"],\n            flags: [1, 0, 0, 0, 0],\n            kind: \"fb-piece-solved\"\n        },\n        lseMCSelector: {\n            label: \"Center\",\n            names: [\"Aligned\", \"Misaligned\"],\n            flags: [0, 1],\n            kind: \"lse-mc\"\n        },\n        lseBarSelector: {\n            label: \"EO Pair\",\n            names: [\"ULUR\", \"UFUB\"],\n            flags: [1, 0],\n            kind: \"lse-bar\"\n        },\n        lseStageSelector: {\n            label: \"Stage\",\n            names: [\"4b for MC(1 move EOPair insert)\", \"M2 to 4c\", \"4c\"],\n            flags: [0, 1, 0],\n            kind: \"lse-stage\"\n        },\n        lseEOSelector: {\n            label: \"EO\",\n            names: [\"solved\", \"arrow\", \"4/0\", \"2o/0\", \"2a/0\", \"1/1\", \"6flip\", \"2o/2\", \"0/2\", \"2a/2\"],\n            flags: [0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"lse-eo\"\n        },\n        lseEOLRMCSelector: {\n            label: \"Center strategy\",\n            names: [\"Non MC only\", \"MC only\", \"Combined\",\"Filter by Non-MC shorter\",  \"Filter by MC shorter\", ],\n            flags: [0, 0, 1, 0, 0],\n            kind: \"lse-eolrmc\"\n        },\n        lseBarbieSelector: {\n            label: \"EOLR / EOLRb\",\n            names: [\"EOLR\", \"EOLRb\"],\n            flags: [1, 0],\n            kind: \"lse-barbie\"\n        },\n        lseEOLRScrambleSelector: {\n            label: \"Type of scramble\",\n            names: [\"Short\", \"Random State\"],\n            flags: [0, 1],\n            kind: \"lse-eolr-scramble\"\n        }\n    }\n})()\n","import { Config, FavCase, Mode } from \"../Types\"\nimport { version } from \"../Version\"\nimport { initialConfig, initialFavList } from \"../Config\"\n\nexport type FavCaseStore = {mode: Mode, setup: string, solver: string }\nlet favListManager = function() {\n    const key = \"fav\"\n    let cache : FavCase[] | null = null\n    let getFavList = () => {\n        if (cache) return cache\n        const item = window.localStorage.getItem(key)\n        const item1 : FavCaseStore[] = item ? JSON.parse(item) : initialFavList\n        const item2 : FavCase[] = item1.map( ({mode, setup, solver}) => ({mode, setup, solver: solver.trim().split(\"|\")}) );\n        return item2\n    }\n    let setFavList = (item : FavCase[]) => {\n        const item1 : FavCaseStore[] = item.map(({mode, setup, solver}) => ({mode, setup, solver: solver.join(\"|\")}) );\n        window.localStorage.setItem(key, JSON.stringify(item1));\n        cache = item\n    }\n    return {\n        getFavList,\n        setFavList\n    }\n}()\n\nlet configManager = function() {\n    const key = \"config\"\n    const versionKey = \"version\"\n    let cache : Config | null = null\n\n    let getConfig = () => {\n        if (cache) {\n            return cache\n        }\n        const item = window.localStorage.getItem(key);\n        const vers = window.localStorage.getItem(versionKey)\n\n        const item1 : Partial<Config> = item ? JSON.parse(item) : initialConfig\n\n        if ( vers !== version) {\n            // version out of date\n            // let's preserve orientation\n            let config = initialConfig\n            if (item1.orientationSelector) {\n                config = {...initialConfig, orientationSelector: item1.orientationSelector}\n            }\n            window.localStorage.setItem(key, JSON.stringify(config));\n            window.localStorage.setItem(versionKey, version)\n\n            return config\n        }\n\n        // In rare cases we want to update new attributes but maintain previous version\n        if ( (item1 === null) || (item1 === undefined) || Object.keys(item1).length === 0) {\n            window.localStorage.setItem(key, JSON.stringify(initialConfig));\n            return initialConfig\n        }\n        // we will also add in unseen fields\n        if (Object.keys(item1).length < Object.keys(initialConfig).length) {\n            const item2 = {...initialConfig, ...item1}\n            window.localStorage.setItem(key, JSON.stringify(item2));\n            return item2\n        }\n        return item1 as Config\n    }\n\n    let setConfig = (partial: Partial<Config>) => {\n        let newConfig : Config = Object.assign(getConfig(), partial)\n        window.localStorage.setItem(key, JSON.stringify(newConfig));\n        cache = newConfig\n    }\n\n    return {\n        getConfig,\n        setConfig\n    }\n}()\n\nlet getConfig = configManager.getConfig\nlet setConfig = configManager.setConfig\nlet getFavList = favListManager.getFavList\nlet setFavList = favListManager.setFavList\n\nexport {\n    getConfig, setConfig, getFavList, setFavList\n}\n","const version = \"0.4.3\"\n\nexport {version}","import { AppState, Config, FavCase } from \"../Types\";\n/* State Manager\n * \"Passively\" updates localstorage in reduce.\n * Action types\n *  - move: respond to cube move\n *  - replay: replay case\n *  - reactToConfig: respond to changes in config\n */\nexport abstract class AbstractStateM {\n    state: AppState;\n    constructor(state: AppState) {\n        this.state = state;\n    }\n    abstract move(s: string): AppState;\n    abstract reactToConfig(conf: Config): AppState;\n    abstract control(s: string): AppState;\n\n    replay(case_: FavCase): AppState {\n        return this.state;\n    }\n}\n\nexport class StateFactory {\n    static create = (state: AppState) => {\n        let filler = ( (()=>1) as unknown ) as (state: AppState) => AbstractStateM;\n        return filler(state);\n    }\n}","// source: \"https://sites.google.com/view/kianroux/cmll\" and https://github.com/AshleyF/briefcubing/blob/master/algs.js\n\n//type oll_case = \"o\"|\"h\"|\"pi\"|\"u\"|\"t\"|\"s\"|\"as\"|\"l\"\nimport { Selector } from \"../lib/Selector\";\nimport { rand_choice } from \"./Math\";\n\nconst get_active_names = (sel : Selector) => {\n    let res = []\n    for (let i = 0; i < sel.names.length; i++) {\n        if (sel.flags[i]) {\n            res.push(sel.names[i]);\n        }\n    }\n    return res\n}\n\nexport type AlgDesc = {\n    id: string,\n    alg: string,\n    alt_algs?: string[],\n    setup?: string,\n    kind: string\n}\n\nconst empty_alg : AlgDesc = {\n    id: \"empty\",\n    alg: \"\",\n    kind: \"any\"\n}\n\nconst cmll_algs : AlgDesc[] = [\n    { id: \"o_adjacent_swap\", alg: \"R U R' F' R U R' U' R' F R2 U' R'\", kind: \"cmll\" },\n    { id: \"o_diagonal_swap\", alg: \"F R U' R' U' R U R' F' R U R' U' R' F R F'\", kind: \"cmll\" },\n    { id: \"h_columns\", alg: \"R U R' U R U' R' U R U2 R'\", kind: \"cmll\" },\n    { id: \"h_rows\", alg: \"F R U R' U' R U R' U' R U R' U' F'\", kind: \"cmll\" },\n    { id: \"h_column\", alg: \"U R U2' R2' F R F' U2 R' F R F'\", kind: \"cmll\" },\n    { id: \"h_row\", alg: \"r U' r2' D' r U' r' D r2 U r'\", kind: \"cmll\" },\n    { id: \"pi_right_bar\", alg: \"F R U R' U' R U R' U' F'\", kind: \"cmll\" },\n    { id: \"pi_back_slash\", alg: \"U F R' F' R U2 R U' R' U R U2' R'\", kind: \"cmll\" },\n    { id: \"pi_x_checkerboard\", alg: \"U' R' F R U F U' R U R' U' F'\", kind: \"cmll\" },\n    { id: \"pi_forward_slash\", alg: \"R U2 R' U' R U R' U2' R' F R F'\", kind: \"cmll\" },\n    { id: \"pi_columns\", alg: \"U' r U' r2' D' r U r' D r2 U r'\", kind: \"cmll\" },\n    { id: \"pi_left_bar\", alg: \"U' R' U' R' F R F' R U' R' U2 R\", kind: \"cmll\" },\n    { id: \"u_forward_slash\", alg: \"U2 R2 D R' U2 R D' R' U2 R'\", kind: \"cmll\" },\n    { id: \"u_back_slash\", alg: \"R2' D' R U2 R' D R U2 R\", kind: \"cmll\" },\n    { id: \"u_front_row\", alg: \"R2' F U' F U F2 R2 U' R' F R\", kind: \"cmll\" },\n    { id: \"u_rows\", alg: \"U' F R2 D R' U R D' R2' U' F'\", kind: \"cmll\" },\n    { id: \"u_x_checkerboard\", alg: \"U2 r U' r' U r' D' r U' r' D r\", kind: \"cmll\" },\n    { id: \"u_back_row\", alg: \"U' F R U R' U' F'\", kind: \"cmll\" },\n    { id: \"t_left_bar\", alg: \"U' R U R' U' R' F R F'\", kind: \"cmll\" },\n    { id: \"t_right_bar\", alg: \"U L' U' L U L F' L' F\", kind: \"cmll\" },\n    { id: \"t_rows\", alg: \"F R' F R2 U' R' U' R U R' F2\", kind: \"cmll\" },\n    { id: \"t_front_row\", alg: \"r' U r U2' R2' F R F' R\", kind: \"cmll\" },\n    { id: \"t_back_row\", alg: \"r' D' r U r' D r U' r U r'\", kind: \"cmll\" },\n    { id: \"t_columns\", alg: \"U2 r2' D' r U r' D r2 U' r' U' r\", kind: \"cmll\" },\n    { id: \"s_left_bar\", alg: \"U R U R' U R U2 R'\", kind: \"cmll\" },\n    { id: \"s_x_checkerboard\", alg: \"U L' U2 L U2' L F' L' F\", kind: \"cmll\" },\n    { id: \"s_forward_slash\", alg: \"U F R' F' R U2 R U2' R'\", kind: \"cmll\" },\n    { id: \"s_Columns\", alg: \"U2 R' U' R U' R2' F' R U R U' R' F U2' R\", kind: \"cmll\" },\n    { id: \"s_right_bar\", alg: \"U' R U R' U R' F R F' R U2' R'\", kind: \"cmll\" },\n    { id: \"s_back_slash\", alg: \"U R U' L' U R' U' L\", kind: \"cmll\" },\n    { id: \"as_right_bar\", alg: \"U R' U' R U' R' U2' R\", kind: \"cmll\" },\n    { id: \"as_columns\", alg: \"U' R2 D R' U R D' R' U R' U' R U' R'\", kind: \"cmll\" },\n    { id: \"as_back_slash\", alg: \"U' F' L F L' U2' L' U2 L\", kind: \"cmll\" },\n    { id: \"as_x_checkerboard\", alg: \"U' R U2' R' U2 R' F R F'\", kind: \"cmll\" },\n    { id: \"as_forward_slash\", alg: \"U' L' U R U' L U R'\", kind: \"cmll\" },\n    { id: \"as_left_bar\", alg: \"U R U2' R' F R' F' R U' R U' R'\", kind: \"cmll\" },\n    { id: \"l_mirror\", alg: \"F R U' R' U' R U R' F'\", kind: \"cmll\" },\n    { id: \"l_inverse\", alg: \"F R' F' R U R U' R'\", kind: \"cmll\" },\n    { id: \"l_pure\", alg: \"R U2 R' U' R U R' U' R U R' U' R U' R'\", kind: \"cmll\" },\n    { id: \"l_front_commutator\", alg: \"R U2 R D R' U2 R D' R2'\", kind: \"cmll\" },\n    { id: \"l_diag\", alg: \"R' U' R U R' F' R U R' U' R' F R2\", kind: \"cmll\" },\n    { id: \"l_back_commutator\", alg: \"U R' U2 R' D' R U2 R' D R2\", kind: \"cmll\" }\n]\n\nlet trigger_algs: AlgDesc[] = [\n    { id: \"RUR'_1\", alg: \"R U R'\", kind:\"trigger\"},\n    { id: \"RUR'_2\", alg: \"r U r'\", kind:\"trigger\"},\n    { id: \"RU'R'_1\", alg: \"R U' R'\", kind:\"trigger\"},\n    { id: \"RU'R'_2\", alg: \"r U' r'\", kind:\"trigger\"},\n    { id: \"R'U'R_1\", alg: \"R' U' R\", kind:\"trigger\"},\n    { id: \"R'U'R_2\", alg: \"r' U' r\", kind:\"trigger\"},\n    { id: \"R'UR_1\", alg: \"R' U R\", kind:\"trigger\"},\n    { id: \"R'UR_2\", alg: \"r' U r\", kind:\"trigger\"}\n]\n\nlet u_auf_algs: AlgDesc[] = [\n    { id: \"U\", alg: \"U\", kind: \"u_auf\"},\n    { id: \"U'\", alg: \"U'\", kind: \"u_auf\"},\n    { id: \"U2\", alg: \"U2\", kind: \"u_auf\"},\n    { id: \"None\", alg: \"\", kind: \"u_auf\"},\n]\n\nlet ori_algs: AlgDesc[] =\n    [\"WG\", \"WB\", \"WO\", \"WR\",\n    \"YG\", \"YB\", \"YO\", \"YR\",\n    \"BW\", \"BY\", \"BO\", \"BR\",\n    \"GW\", \"GY\", \"GO\", \"GR\",\n    \"OW\", \"OY\", \"OB\", \"OG\",\n    \"RW\", \"RY\", \"RB\", \"RG\"].map(s => ({id: s, alg: \"\", kind:\"orientation\" }))\n\nlet lookup_algset = (kind : string) => {\n    switch (kind) {\n        case \"cmll\": return cmll_algs;\n        case \"trigger\": return trigger_algs;\n        case \"orientation\": return ori_algs;\n        case \"u_auf\": return u_auf_algs;\n        default: return []\n    }\n}\n\nlet alg_generator = (selector: Selector) => {\n    let algSet = lookup_algset(selector.kind)\n    let lookup = new Set(get_active_names(selector))\n    let get_prefix = (id: string) => {\n        return id.split(\"_\", 1)[0]\n    }\n    let algs : AlgDesc[] = (() => {\n        return algSet.filter(alg => {\n            let prefix = get_prefix(alg.id);\n            return lookup.has(prefix)\n        })\n    })()\n\n    let next = () => {\n        if (algs.length === 0) {\n            return empty_alg\n        } else {\n            return rand_choice(algs)\n        }\n    }\n    return next\n}\n\nexport { alg_generator }","import { AppState, Config, FavCase } from \"../Types\";\nimport { alg_generator, AlgDesc } from \"../lib/Algs\";\nimport { Face, Typ, FBpairPos } from \"../lib/Defs\";\nimport { CubieCube, CubeUtil, Mask, FaceletCube, SeqEvaluator, MoveSeq } from '../lib/CubeLib';\nimport { getActiveName, getActiveNames } from '../lib/Selector';\nimport { CachedSolver } from \"../lib/CachedSolver\";\nimport { rand_choice, arrayEqual } from '../lib/Math';\nimport { AbstractStateM, StateFactory } from \"./AbstractStateM\";\n\nexport abstract class BlockTrainerStateM extends AbstractStateM {\n    abstract solverL: number;\n    abstract solverR: number;\n    scrambleMargin: number = 1;\n    scrambleCount: number = 1;\n    algDescWithMoveCount: string = \"\";\n    magnification = 2;\n    abstract getRandom(): [CubieCube, string[]] | [CubieCube, string[], string];\n    premoves: string[] = [\"\"];\n\n    _solve_min2phase(cube: CubieCube) : AppState  {\n\n        const state = this.state\n        const ori = alg_generator(state.config.orientationSelector)().id;\n        let algdesc: AlgDesc = {\n            id: `min2phase`,\n            alg: \"\",\n            alt_algs: [],\n            setup: CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0].toString(),\n            kind: `min2phase`\n        };\n        return {\n            ...state,\n            cube: {\n                ...state.cube,\n                state: cube,\n                ori\n            },\n            case: {\n                state: cube,\n                desc: [algdesc]\n            }\n        };\n    }\n    _solve_with_solvers(cube: CubieCube, solverNames: string[]): AlgDesc[]{\n        const state = this.state;\n        const solutionCap = 0 | (+(getActiveName(state.config.solutionNumSelector) || 5) * this.magnification);\n        let getDesc = (solverName: string) => {\n            const solver = CachedSolver.get(solverName);\n            const premoves = this.premoves || [\"\"]\n            let solutions = premoves.map(pm =>\n                solver\n                .solve(cube.apply(pm), 0, this.solverR, solutionCap)\n                .map(sol => ({pre: pm, sol: sol, score: SeqEvaluator.evaluate(sol)}) )).flat()\n            solutions.sort((a, b) => a.score - b.score);\n            const toString = (sol: any) =>\n                (sol.pre === \"\" ? \"\" : \"(\" + sol.pre + \") \") + sol.sol.toString(this.algDescWithMoveCount);\n            const alg = toString(solutions[0])\n            const alt_algs = solutions.slice(1, solutionCap).map(toString);\n            let algdesc: AlgDesc = {\n                id: `${solverName}`,\n                alg,\n                alt_algs,\n                kind: `${solverName}`\n            }\n            return algdesc\n        }\n        return solverNames.map(getDesc)\n    }\n\n    _solve(cube: CubieCube, solverNames: string[], options?: {\n        updateSolutionOnly?: boolean, scrambleSolver?: string,\n        scramble?: string,\n    }) {\n        const state = this.state;\n        options = options || {}\n        if (solverNames === [\"min2phase\"]) {\n            if (!options.updateSolutionOnly)\n                return this._solve_min2phase(cube)\n            return this.state\n        }\n        let algDescs = this._solve_with_solvers(cube, solverNames);\n        const solutionLength = new MoveSeq(algDescs[0].alg).remove_setup().moves.length;\n        const scrambleMargin = 1;\n        let setup : string\n        if (options.scramble) {\n            setup = options.scramble\n        } else if (options.updateSolutionOnly) {\n            setup = this.state.case.desc[0]!.setup!\n        } else {\n            const scramble = options.scrambleSolver === \"2phase\"?\n            CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0] :\n            rand_choice(\n                CachedSolver.get(options.scrambleSolver || solverNames[0])\n                .solve(cube, Math.max(this.solverL, solutionLength + scrambleMargin),\n                    this.solverR, this.scrambleCount || 1)).inv()\n            setup = scramble.toString()\n        }\n        // populate setup into setup\n        algDescs.forEach(algDesc => algDesc.setup = setup);\n\n        const ori = (options.updateSolutionOnly) ? this.state.cube.ori : alg_generator(state.config.orientationSelector)().id;\n        const name = options.updateSolutionOnly ? this.state.name : \"hiding\";\n        // console.log(\"algdesc\", algdesc)\n        return {\n            ...state,\n            name: name,\n            cube: {\n                ...state.cube,\n                state: cube,\n                ori\n            },\n            case: {\n                state: new CubieCube().apply(setup),\n                desc: algDescs\n            }\n        };\n    }\n    _updateCase(): AppState {\n        const [cube, solverName, scrambleSolver] = this.getRandom();\n        return this._solve(cube, solverName, {\n            updateSolutionOnly: false,\n            scrambleSolver\n        });\n    }\n    _updateCap(): AppState {\n        const state = this.state;\n        if (state.case.desc.length === 0) {\n            return state;\n        }\n        const [cube, solverNames] = [state.cube.state, state.case.desc!.map(x => x.kind)];\n        return this._solve(cube, solverNames, {\n            updateSolutionOnly:true\n        });\n    }\n    replay(case_: FavCase): AppState {\n        const cube = new CubieCube().apply(case_.setup)\n        const state1 = this._solve(cube, case_.solver, {scramble: case_.setup});\n        return {\n            ...state1,\n            mode: case_.mode\n        };\n    }\n    control(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            if (state.name === \"revealed\") {\n                return this._updateCase();\n            }\n            else {\n                return {\n                    ...state,\n                    name: \"revealed\"\n                };\n            }\n        }\n        else if (s === \"#enter\") {\n            return {\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                }\n            };\n        }\n        else {\n            return state;\n        }\n    }\n    move(movestr: string): AppState {\n        let state = this.state;\n        let move = new MoveSeq(movestr);\n        let cube = state.cube.state.apply(move);\n        return {\n            ...state,\n            cube: {\n                ...state.cube,\n                state: cube\n            }\n        };\n    }\n    reactToConfig(conf: Config): AppState {\n        // see if solution cap changed\n        let changed = !arrayEqual(this.state.config.solutionNumSelector.flags, conf.solutionNumSelector.flags);\n        if (changed) {\n            return (StateFactory.create({ ...this.state, config: conf }) as BlockTrainerStateM)._updateCap();\n        }\n        else {\n            return this.state;\n        }\n    }\n}\n// const m_premove = [[], Move.all[\"M\"], Move.all[\"M'\"], Move.all[\"M2\"]];\nexport class FbdrStateM extends BlockTrainerStateM {\n    solverL: number;\n    solverR: number;\n    _get_pair_solved_front() {\n        let [cp, co, ep, eo] = rand_choice(FBpairPos);\n        //let mask = Mask.copy(Mask.fs_front_mask)\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 8; i++) {\n            if (cube.cp[i] === 4) {\n                cube.cp[i] = cube.cp[cp];\n                cube.co[i] = cube.co[cp];\n                cube.cp[cp] = 4;\n                cube.co[cp] = co;\n            }\n        }\n        for (let i = 0; i < 12; i++) {\n            if (cube.ep[i] === 8) {\n                cube.ep[i] = cube.ep[ep];\n                cube.eo[i] = cube.eo[ep];\n                cube.ep[ep] = 8;\n                cube.eo[ep] = eo;\n            }\n        }\n        return cube;\n    }\n    _get_random_fs_back() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        return cube;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    _get_random_fs_front() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        return cube;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    getRandom(): [CubieCube, string[], string] {\n        const fbOnly = getActiveName(this.state.config.fbOnlySelector) === \"FB Last Pair Only\";\n        const pairSolved = getActiveName(this.state.config.fbPairSolvedSelector) !== \"Random\";\n        const scrambleType = getActiveName(this.state.config.fbdrScrambleSelector) || \"Short\";\n        const useMin2PhaseScramble = !scrambleType.startsWith(\"Short\");\n        const solverName = fbOnly ? \"fb\" : \"fbdr\";\n        const scrambleSolver = useMin2PhaseScramble ? \"min2phase\" : solverName\n        let active = getActiveNames(this.state.config.fbdrSelector)[0];\n        //console.log(\"active\", active)\n        if (active === \"FS at back\") {\n            if (pairSolved)\n                return [this._get_pair_solved_front(), [solverName], scrambleSolver];\n            else\n                return [this._get_random_fs_back(), [solverName], scrambleSolver];\n        }\n        else if (active === \"FS at front\") {\n            return [this._get_random_fs_front(), [solverName], scrambleSolver];\n        }\n        else\n            return [rand_choice([this._get_random_fs_back, this._get_random_fs_front])(),\n                [solverName], scrambleSolver];\n    }\n    constructor(state: AppState) {\n        super(state);\n        this.solverL = 8;\n        this.solverR = 10;\n    }\n}\nexport class SsStateM extends BlockTrainerStateM {\n    solverL: number;\n    solverR: number;\n    _get_random_fb(allowed_dr_eo_ep: [number, number][]) {\n        let active = getActiveName(this.state.config.ssPairOnlySelector);\n        let mask = (active === \"SS\") ? Mask.fb_mask : Mask.fbdr_mask;\n        let cube : CubieCube;\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(mask);\n            if (active !== \"SS\") break;\n            let ep = cube.ep.indexOf(7);\n            let eo = cube.eo[ep];\n            if (allowed_dr_eo_ep.find( ([eo_, ep_]) => (eo === eo_) && (ep === ep_))) {\n                break\n            }\n        }\n        return cube\n    }\n    getRandom(): [CubieCube, string[] ] {\n        let active = getActiveNames(this.state.config.ssSelector)[0];\n        const drPositionMap : [number, number][] = [\n            [0, 0], [1, 0],\n            [0, 1], [1, 1],\n            [0, 2], [1, 2],\n            [0, 3], [1, 3],\n            [0, 4], [1, 4],\n            [0, 6], [1, 6],\n            [0, 7], [1, 7],\n            [0, 10], [1, 10],\n            [0, 11], [1, 11]\n        ]\n        let allowed_dr_eo_ep_patterns = this.state.config.ssPosSelector.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => drPositionMap[i] )\n        let cube = this._get_random_fb(allowed_dr_eo_ep_patterns);\n        let solver;\n        if (active === \"SS at front\") {\n            solver = \"ss-front\";\n        }\n        else if (active === \"SS at back\") {\n            solver = \"ss-back\";\n        }\n        else {\n            solver = rand_choice([\"ss-back\", \"ss-front\"]);\n        }\n        return [cube, [solver] ];\n    }\n    constructor(state: AppState) {\n        super(state);\n        this.solverL = 9;\n        this.solverR = 10;\n    }\n}\nexport class FbStateM extends BlockTrainerStateM {\n    solverL: number;\n    solverR: number;\n    //premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    magnification = 1;\n\n    _find_center_connected_edges(cube: CubieCube, is_l_only: boolean) {\n        let centers = is_l_only ? [ Face.L ] : [ Face.F, Face.B, Face.L, Face.R]\n        let edges = CubeUtil.stickers.filter(c => c[2] === Typ.E && centers.includes(c[3])\n            && FaceletCube.color_of_sticker(cube, [c[0], c[1], c[2]]) === c[3]);\n        return edges;\n    }\n    _get_random(): [CubieCube, string] {\n        let active = getActiveName(this.state.config.fbPieceSolvedSelector);\n        let mask;\n        if (active === \"Random\")\n            mask = Mask.empty_mask;\n        else if (active === \"DL Solved\")\n            mask = Mask.dl_solved_mask;\n        else if (active === \"BL Solved\")\n            mask = Mask.bl_solved_mask;\n        else if (active === \"Zhouheng Variant\")\n            mask = Mask.zhouheng_mask;\n        else\n            mask = Mask.empty_mask;\n        let cube = CubeUtil.get_random_with_mask(mask);\n\n        let solver = \"fb\";\n        if (active === \"Zhouheng Variant\") {\n            // B F'\n            cube = cube.apply(\"B F'\");\n            solver = \"fbdr\";\n        }\n        const hard_str = \"Hard\";\n        const g_hard_str = \"Hard over x2y(Scramble only)\"\n        if (active === g_hard_str) {\n            solver = \"min2phase\";\n        }\n        if (active !== hard_str && active !== g_hard_str) {\n            return [cube, solver];\n        }\n        let n = 0;\n        let is_l_only = active === hard_str\n        while (true) {\n            let pairs = CubeUtil.find_pairs(cube);\n            let cc_edges = this._find_center_connected_edges(cube, is_l_only);\n            n++;\n            if (pairs.length === 0 && cc_edges.length === 0) {\n                console.log(\"Successful after \" + n + \" tries \");\n                return [cube, solver];\n            }\n            cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        }\n    }\n    getRandom() : [CubieCube, string[]]{\n        let [cube, solver] = this._get_random();\n        return [cube, [solver] ];\n    }\n    constructor(state: AppState) {\n        super(state);\n        this.solverL = 9;\n        this.solverR = 11;\n    }\n}\n\n\nexport class FsStateM extends BlockTrainerStateM {\n    solverL: number;\n    solverR: number;\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    magnification = 1;\n\n    getRandom(): [CubieCube, string[], string] {\n        let cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        let name = getActiveName(this.state.config.fsSelector)\n        if (name === \"Front FS\") {\n            return [cube, [\"fs-front\"], \"fb\"]\n        } else if (name === \"Back FS\") {\n            return [cube, [\"fs-back\"], \"fb\"]\n        } else {\n            return [cube, [\"fs-front\", \"fs-back\"], \"fb\" ];\n        }\n    }\n    constructor(state: AppState) {\n        super(state);\n        this.solverL = 7;\n        this.solverR = 11;\n    }\n}","\nimport { BlockTrainerStateM } from \"./BlockTrainerStateM\";\nimport { Mask, CubeUtil, CubieCube, Move } from \"../lib/CubeLib\";\nimport { getActiveName, getActiveNames } from \"../lib/Selector\";\nimport { rand_choice } from \"../lib/Math\";\nimport { CachedSolver } from \"../lib/CachedSolver\";\n\nexport class LSEStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n    getRandom(): [CubieCube, string[]] {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let bars = getActiveName(this.state.config.lseBarSelector)\n\n        let cube = CubeUtil.get_random_with_mask(Mask.lse_4c_mask);\n\n        let move = new Move().from_cube(cube, \"\")\n\n        if (bars === \"UFUB\") {\n            cube = new CubieCube().apply(rand_choice([\"U\", \"U\"])).apply(move)\n        } else {\n            cube = new CubieCube().apply(move)\n        }\n\n        let is_mc = getActiveName(this.state.config.lseMCSelector) === \"Misaligned\";\n        let lse_premove = is_mc ? [Move.all[\"M\"], Move.all[\"M'\"]] : [ [], Move.all[\"M2\"] ]\n        cube = cube.apply(rand_choice(lse_premove))\n\n        let stage = getActiveName(this.state.config.lseStageSelector)\n        if (stage === \"M2 to 4c\")  {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return [cube, [\"lse\"]];\n        } else if (stage.startsWith(\"4b for MC\")) {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            cube = cube.apply(rand_choice([\"M\", \"M'\"]))\n            cube = cube.apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return [cube, [\"lse\"]];\n        } else {\n            return [cube, [\"lse\"]];\n        }\n    }\n}\n\nconst lseEODef = [\n    {kind: \"solved\", eo: [0,0,0,0,0,0]},\n    {kind: \"arrow\", eo: [1,1,0,1,1,0]},\n    {kind: \"arrow\", eo: [0,1,1,1,0,1]},\n    {kind: \"4/0\", eo: [1,1,1,1,0,0]},\n    {kind: \"2o/0\", eo: [1,0,1,0,0,0]},\n    {kind: \"1/1\", eo: [1,0,0,0,0,1]},\n    {kind: \"1/1\", eo: [0,0,1,0,1,0]},\n    {kind: \"6flip\", eo: [1,1,1,1,1,1]},\n    {kind: \"2o/2\", eo: [0,1,0,1,1,1]},\n    {kind: \"0/2\", eo: [0,0,0,0,1,1]},\n    {kind: \"2a/2\", eo: [0,1,1,0,1,1]},\n]\nconst lseEODefLookup = function() {\n    let map = Object.assign({});\n    lseEODef.forEach( (def) => {\n        map[def.eo.toString()] = def.kind\n    })\n    return map\n}();\n\nexport class EOLRStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n\n    _getEOType(cube: CubieCube) {\n        for (let i = 0; i < 4; i++) {\n            let eo_arr = cube.eo.slice(0, 5)\n            eo_arr.push(cube.eo[6])\n            let eo = (lseEODefLookup[eo_arr.toString()])\n            if (eo) {\n\n                console.log(eo, eo_arr)\n                return eo;\n            }\n            cube = cube.apply(\"U\")\n        }\n        return \"Error\"\n    }\n\n    getRandom(): [CubieCube, string[], string] {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let targetEO = rand_choice(getActiveNames(this.state.config.lseEOSelector))\n\n        let cube: CubieCube\n        let count = 0;\n        let eolrMCMode = getActiveName(this.state.config.lseEOLRMCSelector)\n        let compare = eolrMCMode === \"Filter by Non-MC shorter\" || eolrMCMode === \"Filter by MC shorter\"\n        let useBarbie = getActiveName(this.state.config.lseBarbieSelector) === \"EOLRb\"\n        let useFullScramble = getActiveName(this.state.config.lseEOLRScrambleSelector) === \"Random State\"\n\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(Mask.lse_mask);\n            cube = cube.apply(rand_choice([\"id\", \"M2\"]))\n            console.log(\"targetEO\", targetEO)\n\n            if (count++ > 1000) {\n                console.log(\"something wrong\")\n                break\n            }\n\n            if (this._getEOType(cube) !== targetEO)\n                continue\n            if (compare) {\n                let acSolver = useBarbie ? \"eolrac-b\" : \"eolrac\"\n                let mcSolver = useBarbie ? \"eolrmc-b\" : \"eolrmc\"\n                let acLength = CachedSolver.get(acSolver).solve(cube, 0, 20, 1)[0].moves.length\n                let mcLength = CachedSolver.get(mcSolver).solve(cube, 0, 20, 1)[0].moves.length\n                if ( eolrMCMode === \"Filter by Non-MC shorter\" && acLength > mcLength ) continue\n                if ( eolrMCMode === \"Filter by MC shorter\" && mcLength > acLength ) continue\n            }\n            break\n        }\n\n        const ss = useFullScramble? \"lse\" : \"lse-ab4c\";\n        switch (eolrMCMode) {\n            case \"Non MC only\": return [cube, useBarbie ? [\"eolrac-b\"] : [\"eolrac\"], ss];\n            case \"MC only\": return [cube, useBarbie ? [\"eolrmc-b\"] : [\"eolrmc\"], ss];\n            case \"Combined\": return [cube, useBarbie ? [\"eolr-b\"] : [\"eolr\"], ss];\n            case \"Filter by Non-MC shorter\":\n            case \"Filter by MC shorter\": return [cube, useBarbie ? [\"eolr-b\"] : [\"eolr\"], ss];\n            default: return [cube, [\"eolr\"], ss];\n        }\n    }\n}\n","import { AppState, StateT, Config } from \"../Types\";\nimport { alg_generator, AlgDesc } from \"../lib/Algs\";\nimport { CubieCube, Move, CubeUtil, MoveSeq } from '../lib/CubeLib';\nimport { AbstractStateM } from \"./AbstractStateM\";\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\nimport { arrayEqual } from \"../lib/Math\";\n\nexport abstract class CmllStateM extends AbstractStateM {\n    _get2PhaseSolution(cube: CubieCube): AlgDesc {\n        // Aha! f = g(b) but you modified b later, and f won't update!\n\n        let m2_away = false\n        if (cube.tp[0] !== 0) {\n            m2_away = true\n            cube.apply(\"M2\")\n        }\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp))\n\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        min2phase_init();\n        let solution = min2phase_solve(transformed_cube);\n        if (m2_away) {\n            solution += \" M2\"\n        }\n        const algDesc: AlgDesc = ({\n            id: `scramble`,\n            alg: solution,\n            kind: 'scramble'\n        });\n        console.log(solution);\n        return algDesc;\n    }\n    _generateCase(): AppState {\n        let state = this.state;\n        let { config } = state;\n        let { cmllSelector, triggerSelector, cmllAufSelector, orientationSelector } = config;\n        let generator = alg_generator(cmllSelector);\n        let trig_generator = alg_generator(triggerSelector);\n        let u_auf_generator = alg_generator(cmllAufSelector);\n        let ori_generator = alg_generator(orientationSelector);\n        let trigger_alg: AlgDesc = trig_generator();\n        let cmll_alg: AlgDesc = generator();\n        let u_auf_alg: AlgDesc = u_auf_generator();\n        let alg_str = trigger_alg.alg + \" \" + u_auf_alg.alg + \" \" + cmll_alg.alg;\n        let moves: Move[] = new MoveSeq(alg_str).inv().moves;\n\n        let lse_cube: CubieCube\n        while (true) {\n            lse_cube = CubeUtil.get_random_lse().apply(moves)\n            if (lse_cube.is_solveable()) {\n                break;\n            }\n        }\n        let solution = this._get2PhaseSolution(lse_cube);\n        // ori based on ...?\n        let ori: string = ori_generator().id;\n        //console.log(\"current ori selector's ori \", ori)\n        return ({\n            ...state,\n            name: \"solving\",\n            cube: {\n                state: lse_cube,\n                ori,\n                history: [],\n            },\n            case: {\n                state: lse_cube,\n                desc: [trigger_alg, u_auf_alg, cmll_alg, solution]\n            },\n        });\n    }\n    control(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            // SCRAMBLE\n            // enter cleared solving state based on selection\n            return this._generateCase();\n        }\n        else if (s === \"#enter\") {\n            // REDO\n            return ({\n                ...state,\n                name: \"solving\",\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                    history: []\n                },\n                case: {\n                    ...state.case,\n                }\n            });\n        }\n        else {\n            throw new Error(\"Unrecognized control code\");\n        }\n    }\n    reactToConfig(conf: Config): AppState {\n        return this.state;\n    }\n}\nexport class SolvingStateM extends CmllStateM {\n    move(move: string): AppState {\n        let state = this.state;\n        let moves = new MoveSeq(move).moves;\n        if (moves.length > 0) {\n            let move = moves[0];\n            let cube = state.cube.state.apply(move);\n            let cmll_solved = CubeUtil.is_cmll_solved(cube);\n            let newState: StateT = cmll_solved ? \"solved\" : \"solving\";\n            return ({\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.cube.state.apply(move),\n                    history: [...state.cube.history, move],\n                },\n                name: newState\n            });\n        }\n        else {\n            // Nothing to apply\n            return state;\n        }\n    }\n}\nexport class SolvedStateM extends CmllStateM {\n    move(move: string): AppState {\n        return this.state;\n    }\n}\n","import { StateFactory} from './AbstractStateM';\nimport { AppState, Mode } from '../Types';\nimport { FbdrStateM, SsStateM, FbStateM, FsStateM} from './BlockTrainerStateM';\nimport { LSEStateM, EOLRStateM } from './LSETrainerStateM';\nimport { SolvingStateM, SolvedStateM } from './CmllStateM';\n\nStateFactory.create = function(state: AppState) {\n        let mode: Mode = state.mode;\n        switch (mode) {\n            case \"fbdr\":\n                return new FbdrStateM(state);\n            case \"ss\":\n                return new SsStateM(state);\n            case \"fs\":\n                return new FsStateM(state);\n            case \"fb\":\n                return new FbStateM(state);\n            case \"cmll\": {\n                switch (state.name) {\n                    case \"solving\": return new SolvingStateM(state);\n                    case \"solved\": return new SolvedStateM(state);\n                    default: throw new Error(\"impossible\");\n                }\n            }\n            case \"4c\":\n                return new LSEStateM(state);\n            case \"eopair\":\n                return new EOLRStateM(state);\n            case \"experimental\":\n                return new FbStateM(state);\n        }\n        ;\n    }\n\nexport { StateFactory };","import { Action } from \"./Types\";\n\nconst defaultKeyMapping : { [key: string]: string } = {\n    \"I\": \"R\",\n    \"K\": \"R'\",\n    \"W\": \"B\",\n    \"O\": \"B'\",\n    \"S\": \"D\",\n    \"L\": \"D'\",\n    \"D\": \"L\",\n    \"E\": \"L'\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"H\": \"F\",\n    \"G\": \"F'\",\n    \";\": \"y\",\n    \"A\": \"y'\",\n    \"U\": \"r\",\n    \"R\": \"l'\",\n    \"M\": \"r'\",\n    \"V\": \"l\",\n    \"T\": \"x\",\n    \"Y\": \"x\",\n    \"N\": \"x'\",\n    \"B\": \"x'\",\n    \".\": \"M'\",\n    \"X\": \"M'\",\n    \"5\": \"M\",\n    \"6\": \"M\",\n    \"P\": \"z\",\n    \"Q\": \"z'\",\n    \"Z\": \"d\",\n    \"C\": \"u'\",\n    \",\": \"u\",\n    \"/\": \"d'\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n  }\n\n\nconst lseKeyMapping : { [key: string]: string } = {\n    \"I\": \"M'\",\n    \"E\": \"M'\",\n    \"K\": \"M\",\n    \"D\": \"M\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"S\": \"E'\",\n    \"L\": \"E\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n  }\n\n\nexport abstract class KeyMapping {\n    abstract handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) : void;\n}\n\nexport class DefaultKeyMapping extends KeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (defaultKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: defaultKeyMapping[key]\n            });\n        }\n    }\n}\n\nexport class LSEKeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (lseKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: lseKeyMapping[key]\n            });\n        }\n    }\n}","\nimport { AppState, StateT, Action, Mode, Config, FavListAction } from \"../Types\"\nimport { CubieCube, ColorScheme } from '../lib/CubeLib';\nimport { setConfig, getConfig, getFavList, setFavList} from '../lib/Local';\nimport { getActiveName } from '../lib/Selector';\nimport { StateFactory } from \"./StateFactory\";\nimport { DefaultKeyMapping, LSEKeyMapping } from \"../KeyMapping\";\nimport { arrayEqual } from \"../lib/Math\";\n\nexport const getInitialState = (mode?: Mode) : AppState => {\n    mode = mode || \"fbdr\"\n    let initialStateName : StateT = function() {\n        switch (mode){\n            case \"cmll\": return \"solved\"\n            case \"fbdr\":\n            case \"ss\":\n            case \"fb\":\n            case \"4c\":\n            case \"eopair\":\n            case \"fs\":\n                return \"revealed\"\n            case \"experimental\":\n                return \"revealed\"\n        }\n    }()\n    let ori = getActiveName(getConfig().orientationSelector) || \"YR\"\n    return {\n        name: initialStateName,\n        mode,\n        scrSource: \"random\",\n        cube: {\n            state: new CubieCube(),\n            ori,\n            history: [],\n        },\n        case: {\n            state: new CubieCube(),\n            desc: []\n        },\n        config: getConfig(),\n        favList: getFavList(),\n        keyMapping: (mode === \"4c\" || mode === \"eopair\") ? new LSEKeyMapping() : new DefaultKeyMapping(),\n        colorScheme: new ColorScheme()\n    }\n}\n\nfunction reduceByFavlist(state: AppState, action: FavListAction) {\n    let favList = state.favList;\n\n    switch (action.action) {\n        case \"add\":\n            favList = [...action.content, ...favList]\n            setFavList(favList)\n            break;\n        case \"remove\": {\n        // only remove one at a time for now\n            const rem = action.content[0]\n            favList = favList.filter((value) => {\n                return !(value.mode === rem.mode && value.setup === rem.setup && arrayEqual(value.solver, rem.solver))\n            })\n            setFavList(favList)\n            break;\n        };\n        case \"replay\": {\n            return StateFactory.create(state).replay(action.content[0])\n        }\n    }\n    return {\n        ...state,\n        favList\n    }\n}\n\nexport function reducer(state: AppState, action: Action): AppState {\n    // todo: cache values based on this\n    // console.log(\"prev state\", state)\n    switch (action.type) {\n        case \"key\": {\n            let newState = reduceByKey(state, action.content)\n            return newState\n        };\n        case \"config\": {\n            // LESSON: Object.assign is dangerous\n            let newConfig = {...state.config, ...action.content}\n            setConfig(newConfig)\n            let newState = reduceByConfig(state, newConfig)\n            return {\n                ...newState,\n                config: newConfig\n            }\n        };\n        case \"mode\": {\n            let mode = action.content\n            window.location.hash = mode\n            state = getInitialState(mode)\n            return state\n        };\n        case \"scrSource\":\n            return {\n                ...state,\n                scrSource: action.content\n            }\n        case \"favList\":\n            return reduceByFavlist(state, action)\n        case \"colorScheme\":\n            return {\n                ...state,\n                colorScheme: state.colorScheme.set(action.content)\n            }\n        case \"custom\":\n            return action.content(state)\n        default:\n            return state\n        }\n}\n\n\nfunction reduceByKey(state: AppState, code: string): AppState {\n    if (code === \"\") return state;\n\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    if (code[0] === \"#\") {\n        return stateM.control(code)\n    } else {\n        return stateM.move(code)\n    }\n}\nfunction reduceByConfig(state: AppState, conf: Config): AppState {\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    return stateM.reactToConfig(conf)\n}","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  name: \"bright\",\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#d32f2f',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#eeeeef',\n      paper: '#fff'\n    },\n    text: {\n      primary: '#000',\n      secondary: '#888',\n      hint: '#556cd6'\n    }\n  },\n\n});\nconst themeDark = createMuiTheme({\n  name: \"dark\",\n  palette: {\n    primary: {\n      main: '#9FA4C2', // '#757575',\n    },\n    secondary: {\n      main: '#ffffff', //f55057',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#121212',\n      paper: '#252525' //#424242'\n    },\n    text: {\n      primary: '#fff',\n      secondary: '#ddd',\n      hint: '#eee'\n    }\n  },\n  overrides: {\n    // Style sheet name ⚛️\n    MuiDivider: {\n      // Name of the rule\n      // Some CSS\n      root: {\n        backgroundColor: 'rgba(255, 255 ,255, 0.3)',\n      }\n    },\n  }\n\n});\n\nexport { theme, themeDark };","import React from 'react'\nimport AppView from \"../components/AppView\"\nimport { reducer, getInitialState } from '../reducers/Reducer'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme, themeDark } from '../theme';\nimport { getActiveName } from '../lib/Selector';\n\nwindow.addEventListener('keypress', function(e) {\n  if(e.keyCode === 32 && e.target === document.body) {\n    e.preventDefault();\n  }\n});\n\nfunction App(props: {}) {\n  const [state, dispatch] = React.useReducer( reducer, getInitialState() )\n\n\n\n  const appTheme = getActiveName(state.config.theme) === \"bright\" ? theme : themeDark\n  return (\n    <ThemeProvider theme={appTheme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <AppView state={state} dispatch={dispatch} />\n    </ThemeProvider>\n  )\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function createArray(length) {\n\tconst arr = Array(length);\n\tfor (var i=0; i<length; i++) {\n\t\tarr[i] = 0;\n\t}\n\treturn arr;\n}\n\nfunction createArrays(length1, length2) {\n\tconst arr = Array(length1);\n\tfor (var i=0; i<length1; i++) {\n\t\tarr[i] = Array(length2);\n\t\tfor (var j=0; j<length2; j++) {\n\t\t\tarr[i][j] = 0;\n\t\t}\n\t}\n\treturn arr;\n}\n\nfunction bitOdd(i) {\n\ti ^= i >>> 1;\n\ti ^= i >>> 2;\n\ti ^= i >>> 4;\n\ti ^= i >>> 8;\n\treturn i & 1;\n}\n\nfunction bitCount(i) {\n\ti = i - ((i >>> 1) & 0x55555555);\n\ti = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n\treturn (i + (i >>> 8) + (i >>> 4)) & 0x0f;\n}\n\nfunction get4Parity(idx) {\n\tvar p = 0;\n\tfor (var i=2; i>=0; i--) {\n\t\tp += idx % (4-i);\n\t\tidx = ~~(idx / (4-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get8Parity(idx) {\n\tvar p = 0;\n\tfor (var i=6; i>=0; i--) {\n\t\tp += idx % (8-i);\n\t\tidx = ~~(idx / (8-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get12Parity(idx) {\n\tvar p = 0;\n\tfor (var i=10; i>=0; i--) {\n\t\tp += idx % (12-i);\n\t\tidx = ~~(idx / (12-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\n\nfunction binarySearch(arr, key) {\n\tvar length = arr.length;\n\tif (key <= arr[length-1]) {\n\t\tvar l = 0;\n\t\tvar r = length-1;\n\t\twhile (l <= r) {\n\t\t\tvar mid = (l+r)>>>1;\n\t\t\tvar val = arr[mid];\n\t\t\tif (key > val) {\n\t\t\t\tl = mid + 1;\n\t\t\t} else if (key < val) {\n\t\t\t\tr = mid - 1;\n\t\t\t} else {\n\t\t\t\treturn (mid);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0xffff;\n}\n\nvar fact = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600];\nvar perm3 = [[11, 10, 9], [10, 11, 9], [11, 9, 10], [9, 11, 10], [10, 9, 11], [9, 10, 11]];\nvar ud2std = [0, 1, 2, 4, 7, 9, 10, 11, 13, 16];\nvar std2ud = createArray(18);\nvar Cnk = createArrays(12, 13);\nvar move2str = [\"U \", \"U2\", \"U'\", \"R \", \"R2\", \"R'\", \"F \", \"F2\", \"F'\", \"D \", \"D2\", \"D'\", \"L \", \"L2\", \"L'\", \"B \", \"B2\", \"B'\"];\nvar urfMove = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17], \n\t\t\t\t\t\t\t\t\t\t\t[6, 7, 8, 0, 1, 2, 3, 4, 5,15,16,17, 9,10,11,12,13,14],\n\t\t\t\t\t\t\t\t\t\t\t[3, 4, 5, 6, 7, 8, 0, 1, 2,12,13,14,15,16,17, 9,10,11],\n\t\t\t\t\t\t\t\t\t\t\t[2, 1, 0, 5, 4, 3, 8, 7, 6,11,10, 9,14,13,12,17,16,15], \n\t\t\t\t\t\t\t\t\t\t\t[8, 7, 6, 2, 1, 0, 5, 4, 3,17,16,15,11,10, 9,14,13,12],\n\t\t\t\t\t\t\t\t\t\t\t[5, 4, 3, 8, 7, 6, 2, 1, 0,14,13,12,17,16,15,11,10, 9]];\nfor (var i=0; i<12; i++) {\n\tCnk[i][0] = 1;\n\tCnk[i][i] = 1;\n\tCnk[i][i+1] = 0;\n\tfor (var j=1; j<i; j++) {\n\t\tCnk[i][j] = (Cnk[i-1][j-1] + Cnk[i-1][j]);\n\t}\n}\nfor (var i=0; i<10; i++) {\n\tstd2ud[ud2std[i]] = i;\n}\n\nvar ckmv = Array(19);//new boolean[19][18];\nvar ckmv2 = Array(11);//new boolean[11][10];\nckmv[18] = Array(18);\nckmv2[10] = Array(10);\nfor (var i=0; i<18; i++) {\n\tckmv[i] = Array(18);\n\tfor (var j=0; j<18; j++) {\n\t\tckmv[i][j] = (~~(i/3) == ~~(j/3)) || ((~~(i/3)%3 == ~~(j/3)%3) && (i>=j));\n\t}\n\tckmv[18][i] = false;\n}\nfor (var i=0; i<10; i++) {\n\tckmv2[i] = Array(10);\n\tfor (var j=0; j<10; j++) {\n\t\tckmv2[i][j] = ckmv[ud2std[i]][ud2std[j]];\n\t}\n\tckmv2[10][i] = false;\n}\n\n\n//********************************************************************************//\n\nfunction CubieCube() {\n\tthis.cp = [0, 1, 2, 3, 4, 5, 6, 7];\n\tthis.co = [0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.ep = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\tthis.eo = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.getFlip = function getFlip() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tidx |= this.eo[i] << i;\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getFlipSym = function getFlipSym() {\n\t\tif (FlipR2S != 0) {\n\t\t\treturn FlipR2S[this.getFlip()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(FlipS2R, temps.getFlip());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tthis.setFlip = function setFlip(idx) {\n\t\tthis.eo[11] = bitOdd(idx);\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tthis.eo[i] = idx & 1;\n\t\t\tidx >>>= 1;\n\t\t}\n\t}\n\t\n\tthis.getTwist = function getTwist() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<7; i++) {\n\t\t\tidx *= 3;\n\t\t\tidx += this.co[i];\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getTwistSym = function getTwistSym() {\n\t\tif (TwistR2S != null) {\n\t\t\treturn TwistR2S[this.getTwist()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tlet idx = binarySearch(TwistS2R, temps.getTwist());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\n\tthis.setTwist = function setTwist(idx) {\n\t\tvar twst = 0;\n\t\tfor (var i=6; i>=0; i--) {\n\t\t\ttwst += this.co[i] = idx % 3;\n\t\t\tidx = ~~(idx/3);\n\t\t}\n\t\tthis.co[7] = (15 - twst) % 3;\n\t}\n\t\n\tthis.getUDSlice = function getUDSlice() {\n\t\tvar idx = 0;\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (this.ep[i] >= 8) {\n\t\t\t\tidx += Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t}\n\n\tthis.setUDSlice = function setUDSlice(idx) {\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (idx >= Cnk[11-i][r]) {\n\t\t\t\tidx -= Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t\tthis.ep[i] = (11-r);\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (i+r-4);\n\t\t\t}\n\t\t}\n\t}\n\tthis.getMPerm = function getMPerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=8; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\n\t}\t\n\tthis.setMPerm = function setMPerm(idx) {\n\t\tthis.ep[11] = 8;\n\t\tfor (var i=10; i>=8; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i) + 8);\n\t\t\tidx = ~~(idx / (12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getMid3 = function getMid3() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] >= 9) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\n\t}\n\t\n\tthis.setMid3 = function setMid3(idxA) {\n\t\tvar edge = perm3[idxA % 6];\n\t\tidxA = ~~(idxA / 6);\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (idxA >= Cnk[i][r]) {\n\t\t\t\tidxA -= Cnk[i][r--];\n\t\t\t\tthis.ep[i] = edge[2-r];\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (8-i+r);\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getURtoUL = function getURtoUL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] <= 2) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\n\n\tthis.getDRtoDL = function getDRtoDL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (4 <= this.ep[i] && this.ep[i] <= 6) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\t\n\n\tthis.setEdgePerm = function setEdgePerm(idx) {\n\t\tthis.ep[11] = 0;\n\t\tfor (var i=10; i>=0; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i));\n\t\t\tidx = ~~(idx/(12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\t\t\n\t}\n\t\n\tthis.getEdgePerm = function getEdgePerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=0; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\t\t\n\t}\n\n\tthis.getCPermSym = function getCPermSym() {\n\t\tif (EPermR2S != null) {\n\t\t\tvar idx = EPermR2S[get8Perm(this.cp)];\n\t\t\tidx ^= e2c[idx&0x0f];\n\t\t\treturn idx;\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(CPermS2R, get8Perm(temps.cp));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tthis.getEPermSym = function getEPermSym() {\t\n\t\tif (EPermR2S != null) {\n\t\t\treturn EPermR2S[get8Perm(this.ep)];\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(EPermS2R, get8Perm(temps.ep));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\t\n\n\tthis.URFConjugate = function URFConjugate() {\n\t\tCornMult(urf2, this, temps);\n\t\tCornMult(temps, urf1, this);\t\t\n\t\tEdgeMult(urf2, this, temps);\n\t\tEdgeMult(temps, urf1, this);\t\t    \t\t\n\t}\n\t\n\tthis.invCubieCube = function invCubieCube() {\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.ep[this.ep[edge]] = edge;\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.eo[edge] = this.eo[temps.ep[edge]];\n\t\tfor (var corn=0; corn<8; corn++)\n\t\t\ttemps.cp[this.cp[corn]] = corn;\n\t\tfor (var corn=0; corn<8; corn++) {\n\t\t\tvar ori = this.co[temps.cp[corn]];\n\t\t\ttemps.co[corn] = -ori;\n\t\t\tif (temps.co[corn] < 0)\n\t\t\t\ttemps.co[corn] += 3;\n\t\t}\n\t\tthis.copy(temps);\n\t}\n\n\n\tthis.init = function init(cperm, twist, eperm, flip) {\n\t\tset8Perm(this.cp, cperm);\n\t\tthis.setTwist(twist);\n\t\tthis.setEdgePerm(eperm);\n\t\tthis.setFlip(flip);\n\t}\n\t\n\tthis.copy = function copy(c) {\n\t\tfor (var i=0; i<8; i++) {\n\t\t\tthis.cp[i] = c.cp[i];\n\t\t\tthis.co[i] = c.co[i];\n\t\t}\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tthis.ep[i] = c.ep[i];\n\t\t\tthis.eo[i] = c.eo[i];\n\t\t}\n\t}\n}\n\nconst cctemp = new CubieCube();\nconst temps = new CubieCube();\n\nfunction set8Perm(arr, idx) {\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar p = fact[7-i];\n\t\tvar v = ~~(idx / p);\n\t\tidx %= p;\n\t\tv <<= 2;\n\t\tarr[i] = ((val >> v) & 7);\n\t\tvar m = (1 << v) - 1;\n\t\tval = (val & m) + ((val >> 4) & ~m);\n\t}\n\tarr[7] = val;\n}\n\nfunction get8Perm(arr) {\n\tvar idx = 0;\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar v = arr[i] << 2;\n\t\tidx = (8 - i) * idx + ((val >> v) & 7);\n\t\tval -= 0x11111110 << v;\n\t}\n\treturn idx;\t\n}\n\nfunction CornMult(a, b, prod) {\n\tfor (var corn=0; corn<8; corn++) {\n\t\tprod.cp[corn] = a.cp[b.cp[corn]];\n\t\tvar oriA = a.co[b.cp[corn]];\n\t\tvar oriB = b.co[corn];\n\t\tvar ori = oriA;\n\t\tori += (oriA<3) ? oriB : 3-oriB;\n\t\tori %= 3;\n\t\tif (oriA < 3 ^ oriB < 3) {\n\t\t\tori += 3;\n\t\t}\n\t\tprod.co[corn] = ori;\n\t}\n}\t\n\nfunction EdgeMult(a, b, prod) {\n\tfor (var ed=0; ed<12; ed++) {\n\t\tprod.ep[ed] = a.ep[b.ep[ed]];\n\t\tprod.eo[ed] = (b.eo[ed] ^ a.eo[b.ep[ed]]);\n\t}\n}\n\nfunction CornConjugate(a, idx, b) {\n\tCornMult(CubeSym[SymInv[idx]], a, cctemp);\n\tCornMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nfunction EdgeConjugate(a, idx, b) {\n\tEdgeMult(CubeSym[SymInv[idx]], a, cctemp);\n\tEdgeMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nvar CubeSym = Array(16);\nvar moveCube = Array(18);\nvar SymInv = Array(16);\nvar SymMult = Array(16);\nvar SymMove = Array(16);\nvar Sym8Mult = Array(8);\nvar Sym8Move = Array(8);\nvar Sym8MultInv = Array(8);\nvar SymMoveUD = Array(16);\nvar FlipS2R = Array(336);\nvar TwistS2R = Array(324);\nvar CPermS2R = Array(2768);\nvar EPermS2R = CPermS2R;\nvar FlipR2S = Array(2048);\nvar TwistR2S = Array(2187);\nvar EPermR2S = createArray(40320);\nfor (var i=0; i<40320; i++) {\n\tEPermR2S[i] = 0;\n}\nvar MtoEPerm = Array(40320);\nvar merge = Array(56);\nvar e2c = [0, 0, 0, 0, 1, 3, 1, 3, 1, 3, 1, 3, 0, 0, 0, 0];\nconst urf1 = new CubieCube();\nurf1.init(2531, 1373, 67026819, 1877);\nconst urf2 = new CubieCube();\nurf2.init(2089, 1906, 322752913, 255);\n\n\nfunction CubieInit() {\n\tvar mc = Array(6);\n\tmc[0] = new CubieCube();\n\tmc[0].init(15120, 0, 119750400, 0);\n\tmc[1] = new CubieCube();\n\tmc[1].init(21021, 1494, 323403417, 0);\n\tmc[2] = new CubieCube();\n\tmc[2].init(8064, 1236, 29441808, 802);\n\tmc[3] = new CubieCube();\n\tmc[3].init(9, 0, 5880, 0);\n\tmc[4] = new CubieCube();\n\tmc[4].init(1230, 412, 2949660, 0);\n\tmc[5] = new CubieCube();\n\tmc[5].init(224, 137, 328552, 1160);\n\tfor (var m=0; m<6; m++) {\n\t\tmoveCube[m*3] = mc[m];\n\t\tfor (var p=0; p<2; p++) {\n\t\t\tmoveCube[m*3+p+1] = new CubieCube();\n\t\t\tEdgeMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t\tCornMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t}\n\t}\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar temp;\n\tvar f2 = new CubieCube();\n\tf2.init(28783, 0, 259268407, 0);\n\tvar u4 = new CubieCube();\n\tu4.init(15138, 0, 119765538, 1792);\n\tvar lr2 = new CubieCube();\n\tlr2.init(5167, 0, 83473207, 0);\n\tlr2.co = [ 3, 3, 3, 3, 3, 3, 3, 3 ];\n\tfor (var i=0; i<16; i++) {\n\t\tSymMult[i] = Array(16);\n\t\tSymMove[i] = Array(18);\n\t\tSymMoveUD[i] = Array(10);\n\t\tCubeSym[i] = new CubieCube();\n\t\tCubeSym[i].copy(c);\n\t\tCornMult(c, u4, d);\n\t\tEdgeMult(c, u4, d);\n\t\ttemp = d;\td = c;\tc = temp;\n\t\tif (i % 4 == 3) {\n\t\t\tCornMult(c, lr2, d);\n\t\t\tEdgeMult(c, lr2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\t\t\t\t\n\t\t}\n\t\tif (i % 8 == 7) {\n\t\t\tCornMult(c, f2, d);\n\t\t\tEdgeMult(c, f2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\n\t\t}\n\t}\n\n\tfor (var j=0; j<16; j++) {\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornMult(CubeSym[j], CubeSym[k], c);\n\t\t\tif (c.cp[0] == 0 && c.cp[1] == 1 && c.cp[2] == 2) {\n\t\t\t\tSymInv[j] = k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i=0; i<16; i++) {\n\t\tfor (var j=0; j<16; j++) {\n\t\t\tCornMult(CubeSym[i], CubeSym[j], c);\n\t\t\tfor (var k=0; k<16; k++) {\n\t\t\t\tif (CubeSym[k].cp[0] == c.cp[0] && CubeSym[k].cp[1] == c.cp[1] && CubeSym[k].cp[2] == c.cp[2]) {\n\t\t\t\t\tSymMult[i][j] = k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tCornConjugate(moveCube[j], SymInv[s], c);\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar found = 1;\n\t\t\t\tfor (var i=0; i<8; i++) {\n\t\t\t\t\tif (c.cp[i] != moveCube[m].cp[i] || c.co[i] != moveCube[m].co[i]) {\n\t\t\t\t\t\tfound = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found) {\n\t\t\t\t\tSymMove[s][j] = m;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<10; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tSymMoveUD[s][j] = std2ud[SymMove[s][ud2std[j]]];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tSym8Mult[j] = Array(8);\n\t\tSym8Move[j] = Array(18);\n\t\tSym8MultInv[j] = Array(8);\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Mult[j][s] = (SymMult[j<<1][s<<1]>>>1);\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Move[s][j] = SymMove[s<<1][j];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8MultInv[j][s] = Sym8Mult[j][SymInv[s<<1]>>1];\n\t\t}\n\t}\n\n\tconst occ = new Array(1260);\n\n\tvar count = 0;\n\tfor (var i=0; i<64; occ[i++] = 0);\n\n\tfor (var i=0; i<2048; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setFlip(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = d.getFlip();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tFlipR2S[idx] = ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tFlipS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\tcount = 0;\n\tfor (var i=0; i<69; occ[i++] = 0);\n\tfor (var i=0; i<2187; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setTwist(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tCornConjugate(c, s, d);\n\t\t\t\tvar idx = d.getTwist();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tTwistR2S[idx] =  ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tTwistS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\n\tvar mask = Array(56);\n\tfor (var i=0; i<56; i++) {\n\t\tmask[i] = Array(2);\n\t\tmerge[i] = Array(56);\n\t}\n\tfor (var i=0; i<40320; i++) {\n\t\tset8Perm(c.ep, i);\n\t\tvar a = ~~(c.getURtoUL() / 6);\n\t\tvar b = ~~(c.getDRtoDL() / 6);\n\t\tmask[a][b>>>5] |= 1 << (b&0x1f);\n\t}\n\t\n\tfor (var i=0; i<56; i++) {\n\t\tcount = 0;\n\t\tfor (var j=0; j<56; j++) {\n\t\t\tif ((mask[i][j>>>5]&(1<<(j&0x1f))) != 0) {\n\t\t\t\tmerge[i][j] = count++;\n\t\t\t}\n\t\t}\n\t}\n\tcount = 0;\n\tfor (var i=0; i<1260; occ[i++] = 0);\n\tfor (var i=0; i<40320; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tset8Perm(c.ep, i);\n\t\t\tfor (var s=0; s<16; s++) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = get8Perm(d.ep);\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tvar a = d.getURtoUL();\n\t\t\t\tvar b = d.getDRtoDL();\n\t\t\t\tvar m = (merge[~~(a/6)][~~(b/6)] * 4032 + a * 12 + b % 6 * 2 + get8Parity(idx));\n\t\t\t\tMtoEPerm[m] = (count << 4 | s);\n\t\t\t\tEPermR2S[idx] = (count << 4 | s);\n\t\t\t}\n\t\t\tEPermS2R[count++] = i;\n\t\t}\n\t}\n}\n\nvar UDSliceMove = Array(495);//new char[495][18];\nvar TwistMove = Array(324);//new char[324][18];\nvar FlipMove = Array(336);//new char[336][18];\nvar UDSliceConj = Array(495);//new char[495][8];\nvar UDSliceTwistPrun = Array(495*324);//new byte[495 * 324];\nvar UDSliceFlipPrun = Array(495*336);//new byte[495 * 336];\n\t\nvar TwistFlipPrun = Array(336*324*8);//new byte[336 * 324 * 8];\n\t\n\t//phase1to2\nvar Mid3Move = Array(1320);//new char[1320][18];\nvar Mid32MPerm = Array(24);//new byte[24];\nvar CParity = Array(87);//new byte[2768/8];\n\n\t//phase2\nvar CPermMove = Array(2768);//new char[2768][18];\nvar EPermMove = Array(2768);//new char[2768][10];\nvar MPermMove = Array(24);//new byte[24][10];\nvar MPermConj = Array(24);//new byte[24][16];\nvar MCPermPrun = Array(24*2768);//new byte[24*2768];\nvar MEPermPrun = Array(24*2768);//new byte[24*2768];\n\n\nfunction CoordInit() {\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar i, j;\n\tfor (i=0; i<2768; i++) {\n\t\tCPermMove[i] = Array(18);\n\t\tset8Perm(c.cp, CPermS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tCPermMove[i][j] = d.getCPermSym();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<2768; i++) {\n\t\tEPermMove[i] = Array(10);\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tEPermMove[i][j] = d.getEPermSym();\n\t\t}\n\t}\n\tfor (i=0; i<336; i++) {\n\t\tFlipMove[i] = Array(18);\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tFlipMove[i][j] = d.getFlipSym();\n\t\t}\n\t}\n\tfor (i=0; i<324; i++) {\n\t\tTwistMove[i] = Array(18);\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tTwistMove[i][j] = d.getTwistSym();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceMove[i] = Array(18);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tUDSliceMove[i][j] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceConj[i] = Array(8);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<16; j+=2) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tUDSliceConj[i][j>>>1] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<1320; i++) {\n\t\tMid3Move[i] = Array(18);\n\t\tc.setMid3(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tMid3Move[i][j] = d.getMid3();\n\t\t}\n\t}\t\n\tfor (i=0; i<24; i++) {\n\t\tc.setMPerm(i);\n\t\tMid32MPerm[c.getMid3() % 24] = i;\n\t}\n\tfor (i=0; i<2768; i++) {\n\t\tCParity[i>>>3] |= (get8Parity(CPermS2R[i])) << (i & 7);\n\t}\n\tfor (i=0; i<24; i++) {\n\t\tMPermMove[i] = Array(10);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tMPermMove[i][j] = d.getMPerm();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<24; i++) {\n\t\tMPermConj[i] = Array(16);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<16; j++) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tMPermConj[i][j] = d.getMPerm();\n\t\t}\n\t}\n\t\n\tvar SymState = Array(324);\n\tfor (i=0; i<324; i++) {\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tCornConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(TwistS2R, d.getTwist()) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tvar SymStateF = Array(324);\n\tfor (i=0; i<336; i++) {\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tEdgeConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(FlipS2R, d.getFlip()) != 0xffff) {\n\t\t\t\tSymStateF[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\t\t\n\tfor (i=0; i<336*324*8; i++) {\n\t\tTwistFlipPrun[i] = -1;\n\t}\n\tfor (i=0; i<8; i++) {\n\t\tTwistFlipPrun[i] = 0;\n\t}\n\tvar depth = 0;\n\tvar done = 8;\n\tvar inv;\n\tvar select;\n\tvar check;\n\t\n\twhile (done < 336*324*8) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<336*324*8; i++) {\n\t\t\tif (TwistFlipPrun[i] != select)\n\t\t\t\tcontinue;\n\t\t\tvar twist = ~~(i / 2688);\n\t\t\tvar flip = i % 2688;\n\t\t\tvar fsym = i & 7;\n\t\t\tflip >>>= 3;\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\tvar tsymx = twistx & 7;\n\t\t\t\ttwistx >>>= 3;\n\t\t\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\t\t\tvar fsymx = Sym8MultInv[Sym8Mult[flipx & 7][fsym]][tsymx];\n\t\t\t\tflipx >>>= 3;\n\t\t\t\tvar idx = twistx * 2688 + (flipx << 3 | fsymx);\n\t\t\t\tif (TwistFlipPrun[idx] == check) {\n\t\t\t\t\tdone++;\n\t\t\t\t\tif (inv) {\n\t\t\t\t\t\tTwistFlipPrun[i] = depth;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTwistFlipPrun[idx] = depth;\n\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\tvar symF = SymStateF[flipx];\n\t\t\t\t\t\tif (sym != 1 || symF != 1) {\n\t\t\t\t\t\t\tfor (var j=0; j<8; j++, symF >>= 1) {\n\t\t\t\t\t\t\t\tif ((symF & 1) == 1) {\n\t\t\t\t\t\t\t\t\tvar fsymxx = Sym8MultInv[fsymx][j];\n\t\t\t\t\t\t\t\t\tfor (var k=0; k<8; k++) {\n\t\t\t\t\t\t\t\t\t\tif ((sym & (1 << k)) != 0) {\n\t\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymxx][k]);\n\t\t\t\t\t\t\t\t\t\t\tif (TwistFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tTwistFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n\tfor (i=0; i<495*324; i++) {\n\t\tUDSliceTwistPrun[i] = -1;\n\t}\n\tUDSliceTwistPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 324) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*324; i++) {\n\t\t\tif (UDSliceTwistPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar twist = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\t\tvar symx = twistx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\ttwistx >>>= 3;\n\t\t\t\t\tvar idx = twistx * 495 + slicex;\n\t\t\t\t\tif (UDSliceTwistPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceTwistPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceTwistPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceTwistPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceTwistPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\n\tfor (i=0; i<495*336; i++) {\n\t\tUDSliceFlipPrun[i] = -1;\n\t}\n\tUDSliceFlipPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 336) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*336; i++) {\n\t\t\tif (UDSliceFlipPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar flip = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar flipx = FlipMove[flip][m];\n\t\t\t\t\tvar symx = flipx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\tflipx >>>= 3;\n\t\t\t\t\tvar idx = flipx * 495 + slicex;\n\t\t\t\t\tif (UDSliceFlipPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceFlipPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceFlipPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymStateF[flipx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = flipx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tdepth++;\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\n\t\n\tSymState = Array(2768);\n\tfor (i=0; i<2768; i++) {\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=1; j<16; j++) {\n\t\t\tEdgeConjugate(c, j, d);\n\t\t\tif (binarySearch(EPermS2R, get8Perm(d.ep)) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tfor (i=0; i<24*2768; i++) {\n\t\tMEPermPrun[i] = -1;\n\t}\n\tMEPermPrun[0] = 0;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MEPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar edge = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar edgex = EPermMove[edge][m];\n\t\t\t\t\tvar symx = edgex & 15;\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tedgex >>>= 4;\n\t\t\t\t\tvar idx = edgex * 24 + midx;\n\t\t\t\t\tif (MEPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMEPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMEPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[edgex];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = edgex * 24 + MPermConj[midx][j];\n\t\t\t\t\t\t\t\t\t\tif (MEPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMEPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\t\t\n\tfor (i=0; i<24*2768; i++) {\n\t\tMCPermPrun[i] = -1;\n\t}\n\tMCPermPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MCPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar corn = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar cornx = CPermMove[corn][ud2std[m]];\n\t\t\t\t\tvar symx = (cornx & 15);\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tcornx >>>= 4;\n\t\t\t\t\tvar idx = cornx * 24 + midx;\n\t\t\t\t\tif (MCPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMCPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMCPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[cornx];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = cornx * 24 + MPermConj[midx][j ^ e2c[j]];\n\t\t\t\t\t\t\t\t\t\tif (MCPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMCPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n}\t\t\t\t\t\n\nfunction randomCube() {\n\tvar eperm;\n\tvar cperm;\n\tdo {\n\t\teperm = ~~(Math.random() * 479001600);\n\t\tcperm = ~~(Math.random() * 40320);\n\t} while (((get8Parity(cperm) ^ get12Parity(eperm))) != 0);\n\tvar c = new CubieCube();\n\tc.init(cperm, ~~(Math.random() * 2187), eperm, ~~(Math.random() * 2048));\n\treturn c;\n}\n\nvar move = Array(31);\n\nvar corn = Array(20);\nvar csym = Array(20);\nvar mid3 = Array(20);\nvar e1 = Array(20);\nvar e2 = Array(20);\nvar urfidx;\n\nvar twist = Array(6);\nvar tsym = Array(6);\nvar flip = Array(6);\nvar fsym = Array(6);\nvar slice = Array(6);\nvar corn0 = Array(6);\nvar csym0 = Array(6);\nvar mid30 = Array(6);\nvar e10 = Array(6);\nvar e20 = Array(6);\nvar prun = Array(6);\n\nvar length1 = 0;\nvar maxlength2 = 0;\nvar sol = 999;\nvar valid1 = 0;\nvar valid2 = 0;\nvar solution = \"\";\nvar useSeparator = false;\n\nfunction Solve(c) {\n\tc.temps = new CubieCube();\n\tfor (var i=0; i<6; i++) {\n\t\ttwist[i] = c.getTwistSym();\n\t\ttsym[i] = twist[i] & 7;\n\t\ttwist[i] >>>= 3;\n\t\tflip[i] = c.getFlipSym();\n\t\tfsym[i] = flip[i] & 7;\n\t\tflip[i] >>>= 3;\n\t\tslice[i] = c.getUDSlice();\n\t\tcorn0[i] = c.getCPermSym();\n\t\tcsym0[i] = corn0[i] & 15;\n\t\tcorn0[i] >>>= 4;\n\t\tmid30[i] = c.getMid3();\n\t\te10[i] = c.getURtoUL();\n\t\te20[i] = c.getDRtoDL();\n\t\tprun[i] = Math.max(Math.max(UDSliceTwistPrun[twist[i] * 495 + UDSliceConj[slice[i]][tsym[i]]],\n\t\t\t\t\t\tUDSliceFlipPrun[flip[i] * 495 + UDSliceConj[slice[i]][fsym[i]]]),\n\t\t\t\t\t\tTwistFlipPrun[twist[i] * 2688 + (flip[i] << 3 | Sym8MultInv[fsym[i]][tsym[i]])]);\n\t\tc.URFConjugate();\n\t\tif (i==2) {\n\t\t\tc.invCubieCube();\n\t\t}\n\t}\n\tsolution = null;\n\tsol = 22;\n\tfor (length1=0; length1<sol; length1++) {\n\t\tmaxlength2 = Math.min(sol/2+1, sol-length1);\n\t\tfor (urfidx=0; urfidx<6; urfidx++) {\n\t\t\tcorn[0] = corn0[urfidx];\n\t\t\tcsym[0] = csym0[urfidx];\n\t\t\tmid3[0] = mid30[urfidx];\n\t\t\te1[0] = e10[urfidx];\n\t\t\te2[0] = e20[urfidx];\n\t\t\tif ((prun[urfidx] <= length1)\n\t\t\t\t\t&& phase1(twist[urfidx], tsym[urfidx], flip[urfidx], fsym[urfidx],\n\t\t\t\t\t\t\t\tslice[urfidx], length1, 18)) {\n\t\t\t\tif (solution == null) {\n\t\t\t\t\treturn \"Error 8\";\n\t\t\t\t} else {\n\t\t\t\t\treturn solution;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn \"Error 7\";\n}\n\nfunction phase1(twist, tsym, flip, fsym, slice, maxl, lm) {\n\tif (twist==0 && flip==0 && slice==0 && maxl < 5) {\n\t\treturn maxl == 0 && init2();\n\t}\n\tfor (var m=0; m<18; m++) {\n\t\tif (ckmv[lm][m]) {\n\t\t\tm+=2;\n\t\t\tcontinue;\n\t\t}\n\t\tvar slicex = UDSliceMove[slice][m];\n\t\tvar twistx = TwistMove[twist][Sym8Move[tsym][m]];\n\t\tvar tsymx = Sym8Mult[twistx & 7][tsym];\n\t\ttwistx >>>= 3;\n\t\tif (UDSliceTwistPrun[twistx * 495 + UDSliceConj[slicex][tsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\tvar fsymx = Sym8Mult[flipx & 7][fsym];\n\t\tflipx >>>= 3;\n\t\tif (TwistFlipPrun[twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymx][tsymx])] >= maxl\n\t\t\t\t||UDSliceFlipPrun[flipx * 495 + UDSliceConj[slicex][fsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[length1-maxl] = m;\n\t\tvalid1 = Math.min(valid1, length1-maxl);\n\t\tif (phase1(twistx, tsymx, flipx, fsymx, slicex, maxl-1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction init2() {\n//\tif (System.currentTimeMillis() > timeOut) {\n//\t\treturn true;\n//\t}\n\tvalid2 = Math.min(valid2, valid1);\n\tfor (var i=valid1; i<length1; i++) {\n\t\tvar m = move[i];\n\t\tcorn[i+1] = CPermMove[corn[i]][SymMove[csym[i]][m]];\n\t\tcsym[i+1] = SymMult[corn[i+1] & 15][csym[i]];\n\t\tcorn[i+1] >>>= 4;\n\t\tmid3[i+1] = Mid3Move[mid3[i]][m];\n\t}\n\tvalid1 = length1;\n\tvar mid = Mid32MPerm[mid3[length1] % 24];\n\tvar prun = MCPermPrun[corn[length1] * 24 + MPermConj[mid][csym[length1]]];\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\tfor (var i=valid2; i<length1; i++) {\n\t\te1[i+1] = Mid3Move[e1[i]][move[i]];\n\t\te2[i+1] = Mid3Move[e2[i]][move[i]];\n\t}\n\tvalid2 = length1;\n\tvar cornx = corn[length1];\n\tvar ex = merge[~~(e1[length1]/6)][~~(e2[length1]/6)] * 4032\n\t\t\t\t + e1[length1] * 12 + e2[length1] % 6 * 2 + (((CParity[cornx>>>3]>>>(cornx&7))&1) ^ get4Parity(mid));\n\tvar edge = MtoEPerm[ex];\n\tvar esym = edge & 15;\n\tedge >>>= 4;\n\t\tprun = Math.max(MEPermPrun[edge * 24 + MPermConj[mid][esym]], prun);\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\t\tvar lm = length1==0 ? 10 : std2ud[~~(move[length1-1]/3)*3+1];\n\tfor (var i=prun; i<maxlength2; i++) {\n\t\tif (phase2(edge, esym, corn[length1], csym[length1], mid, i, length1, lm)) {\n\t\t\tsol = length1 + i;\n\t\t\tvar sb = \"\";\n\t\t\tvar urf = urfidx;\n//\t\t\tif (inverse) {\n\t\t\t\turf = (urf + 3) % 6;\n//\t\t\t}\n\t\t\tif (urf < 3) {\n\t\t\t\tfor (var s=0; s<length1; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1; s<sol; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var s=sol-1; s>=length1; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1-1; s>=0; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// sb += \"(\" + sol + \"f)\";\n\t\t\tsolution = sb;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction phase2(edge, esym, corn, csym, mid, maxl, depth, lm) {\n\tif (edge==0 && corn==0 && mid==0) {\n\t\treturn true;\n\t}\n\tfor (var m=0; m<10; m++) {\n\t\tif (ckmv2[lm][m]) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar midx = MPermMove[mid][m];\n\t\tvar edgex = EPermMove[edge][SymMoveUD[esym][m]];\n\t\tvar esymx = SymMult[edgex & 15][esym];\n\t\tedgex >>>= 4;\n\t\tif (MEPermPrun[edgex * 24 + MPermConj[midx][esymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar cornx = CPermMove[corn][SymMove[csym][ud2std[m]]];\n\t\tvar csymx = SymMult[cornx & 15][csym];\n\t\tcornx >>>= 4;\n\t\tif (MCPermPrun[cornx * 24 + MPermConj[midx][csymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[depth] = ud2std[m];\n\t\tif (phase2(edgex, esymx, cornx, csymx, midx, maxl-1, depth+1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nvar initialized = false;\n\nfunction initialize() {\n\tif (initialized) {\n\t\treturn;\n\t}\n\tCubieInit();\n\tCoordInit();\n\tinitialized = true;\n}\n\nfunction solve(c) {\n\tinitialize();\n\tconst cc = new CubieCube();\n\tcc.cp = c.cp;\n\tcc.co = c.co;\n\tcc.ep = c.ep;\n\tcc.eo = c.eo;\n\treturn Solve(cc);\n};\n\nmodule.exports.initialize = initialize;\nmodule.exports.solve = solve;\nmodule.exports.randomCube = randomCube;\n"],"sourceRoot":""}