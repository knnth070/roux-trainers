{"version":3,"sources":["lib/Defs.tsx","lib/Math.ts","components/CubeSim.tsx","lib/CubeLib.tsx","lib/Selector.tsx","components/Select.tsx","components/Input.tsx","components/CmllTrainerView.tsx","components/ScrambleInputView.tsx","components/BlockTrainerView.tsx","components/PanoramaView.tsx","lib/Pruner.tsx","lib/min2phase/min2phase-wrapper.ts","lib/Solver.tsx","lib/CachedSolver.tsx","components/FavListView.tsx","components/TopBarView.tsx","lib/Evaluator.tsx","lib/Analyzer.ts","components/AnalyzerView.tsx","lib/Worker.ts","components/AppView.tsx","Initialization.tsx","lib/LocalStorage.tsx","Version.tsx","reducers/AbstractStateM.tsx","lib/Algs.tsx","reducers/BlockTrainerStateM.tsx","reducers/LSETrainerStateM.tsx","reducers/CmllStateM.tsx","reducers/StateFactory.tsx","KeyMapping.tsx","reducers/InitialState.tsx","reducers/Reducer.tsx","theme.js","app/App.tsx","serviceWorker.js","index.js","lib/min2phase/min2phase.js"],"names":["Face","Typ","U","D","F","B","L","R","C","E","T","corners_coord","edges_coord","centers_coord","cstimer_corners_coord","cstimer_edges_coord","u","cpc","coc","epc","eoc","tpc","name","f","r","l","d","b","m","e","s","u_face","f_face","FBpairPos","color_map","rand_int","Math","floor","random","rand_incl","rand_choice","arr","length","cartesianProduct","allEntries","reduce","results","entries","map","result","entry","concat","subResults","getParity","perm","visited","Array","fill","follow","i","cnt","res","arrayEqual","arr1","arr2","TAU","PI","axesInfo","THREE","redraw_cube","cube","config","width","height","colorScheme","mode","faces","bgColor","hintDistance","facesToReveal","scene","camera","renderer","antialias","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","stickers_tmpl","stickerwrap_tmpl","cameraPosition","position","copy","aspect","lookAt","geo","geo_border","materials_border","color","side","drawCube","materials","_","mat","alphaTest","mesh","setRotationFromEuler","cubie","rot","makeRotationFromEuler","rot1","setRotationFromMatrix","multiply","z","x","idx","curr_tmpl","sticker","clone","stickerwrap","indexOf","stickerhint","add","scale","set","cubeG","render","updateCubeAndColor","remove","getRenderer","cleanupFunc","dispose","config_cache","painter","CubeSim","props","mount","React","useRef","useMemo","cubePainter","useEffect","dom","current","appendChild","domElement","removeChild","ref","style","zIndex","CubieCube","value","cp","co","ep","eo","tp","this","Id","obj","JSON","parse","stringify","o","p","oc","pc","mod","o_new","p_new","console","assert","src","dst","move","_apply_partial","toc","isArray","MoveSeq","moves","apply_one","apply","facelet_mapping","pos","piece","j","_rotate_coord","push","fm","custom_corners_coord","custom_edges_coord","custom_centers_coord","match_pos_piece","coord","parity","expected","Map","toString","ori","has","_backward_rotate_coord","warn","get","coord_pair","newOri","newpos","newPerm","_to_facelet_mapping","_from_facelet_mapping","perm_correct","ori_correct","y","transformed_mapping","mapping","face_mapping","Object","fromEntries","face_pos","face_target","fs","last_face","first_face","Move","arg","from_moves","from_cube","get_change","acc_p","acc_o","slice","all","generate_base_moves","make_rot_set","us","rs","ls","ds","bs","ms","es","ss","rws","lws","uws","xs","ys","zs","flat","moves_dict","create","forEach","rotset","Set","shift","str","tokens","token","comment_idx","search","ch","ord","charCodeAt","split","parse_line","newMoves","nextMove","pop","combined","_combine","reverse","inv","useMetric","join","move1","move2","getCnt","getStr","auf_moves","auf_move","FaceletCube","mult_move","face","face_new","work","typ","mod_for_typ","p1","p2","p_curr","o_curr","color_of_c","o1","o2","color_of_e","color_of_t","color_of_sticker","Error","d_face","l_face","r_face","b_face","from_cubie","mask","facelet","X","from_cubie_partial_masked","from_cubie_partial","to_unfolded_cube_str","faceletCube","face_count","str_face_map","color_cube","face_char","hasOwnProperty","count","lse_mask","CubeUtil","ext","stickers","find_pairs","edge_stickers","filter","corner_stickers","ep_stickers","cp_stickers","epcp_pairs","c","efs","cfs","match","get_color","connected_pairs","u_premove","m2_premove","get_random_with_mask","cp_rand","ep_rand","par","random_ori","ori_mask","sum","random_perm","perm_mask","undecided","tmp","rand_shuffle","is_cmll_solved","premove","cube1","solved","is_mask_solved2","is_solved","co_","eo_","tp_","every","get_random_lse","is_cube_solved","id","ColorScheme","suppressLoad","colors","load","newScheme","save","_setDefault","default_colors","valid_schemes_map","localStorage","setItem","serialize","item","getItem","deserialize","valid_schemes","Mask","fs_back_mask","fs_front_mask","fbdr_mask","fb_mask","sb_mask","cmll_mask","ss_front_mask","ss_back_mask","empty_mask","dl_solved_mask","bl_solved_mask","solved_mask","zhouheng_mask","lse_4c_mask","getActiveNames","ans","flags","names","getActiveName","useStyles","makeStyles","theme","container","paddingTop","spacing","paddingBottom","backgroundColor","palette","background","default","button","paper","padding","display","overflow","flexDirection","canvasPaper","infoColumn","scrambleColumn","paddingLeft","textColumn","breakpoints","up","minHeight","fixedHeight","title","flexGrow","select","text","primary","selectLabel","secondary","SingleSelect","state","dispatch","sel","classes","radioValue","label","FormControl","component","className","FormLabel","RadioGroup","aria-label","onChange","evt","n","new_flags","target","new_config","fbPairSolvedSelector","fbdrSelector","type","content","row","FormControlLabel","key","control","Radio","labelPlacement","MultiSelectContent","options","handleChange","checked","useState","manipChecked","setManipChecked","manipulator_row","manipulators","FormGroup","manip","enableIdx","Checkbox","fillValue","makeManipulator","Fragment","makeBox","MultiSelect","open","setOpen","handleClose","noDialog","Box","Button","variant","borderWidth","onClick","fontSize","marginLeft","marginRight","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","DialogActions","ColorSetter","toUserInput","setText","TextField","defaultValue","helperText","event","fullWidth","size","ColorPanel","orientationSelector","Divider","hint","fontWeight","borderBottom","prompt","CmllTrainerView","clsx","_getMask","cmllCubeMaskSelector","useTheme","simBackground","panel","cmllSelector","cmllAufSelector","triggerSelector","setReveal","reveal","downHandler","keyMapping","handle","addEventListener","removeEventListener","alg","setup","case","desc","algs","moves_c","collapse","Grid","Paper","margin","getColorsForOri","elevation","lineHeight","Typography","whiteSpace","onFocus","blur","sm","md","setupEdit","down","ScrambleInputView","editing","setEditing","scrambles","setValue","textField","onKeyPress","stopPropagation","trim","startIcon","onKeyDown","onKeyUp","onEntered","focus","inputRef","multiline","rowsMax","rows","InputProps","transition","marginBottom","borderRadius","condGap","fgap","flexShrink","flexBasis","minWidth","sourceIcon","sourceIconWrap","fab","top","left","ConfigPanelGroup","ssSelector","ssPairOnlySelector","solutionNumSelector","ssPosSelector","LPEdgeManip","fbOnlySelector","fbdrScrambleSelector","fbdrPosSelector1","fbdrPosSelector3","fbPieceSolvedSelector","fsSelector","lseStageSelector","lseMCSelector","lseBarSelector","lseEOSelector","lseEOLRMCSelector","lseBarbieSelector","lseEOLRScrambleSelector","BlockTrainerView","kind","getMask","spaceButtonText","algText","minMove","a","remove_setup","min","describe_hide","get_algs","describe_reveal","setFav","favSelected","alignItems","flexWrap","scrambleInput","case_","solver","action","endIcon","alignSelf","justifyContent","fontFamily","root","textAlign","gridList","VisualCube","stage","sch","template","alt","PanoramaTable","GridList","cellHeight","cols","GridListTile","PanoramaView","PrunerPiece","S","I","prunerFactory","def","corner","edge","center","O","def_to_idx","count_all","curr_idx","idx_arr","eosize","epsize","eisize","esize","pow","ep_idx","e_idx","cosize","cpsize","cisize","csize","cp_idx","c_idx","tosize","tpsize","tisize","tsize","tp_idx","solved_states","moveset","encode","t","to","max_depth","fbdrPrunerConfig","c1","c2","enc_c","e1","e2","e3","e4","htm_rwm","fbPrunerConfig","fbPrunerConfig_old","enc_ce","t1","sbPrunerConfig","lsePrunerConfig","edge_encode","enc","edge_enc","solve","min2phaseSolve","toMin2Phase","Solver","accum","min_depth","SState","pruners","state_count","prune_count","solve_depth","min_depth_","max_depth_","accum_","Moveable","depth","solution","STOP","CONTINUE","solutions","capacity","flag","sol","try_push","query","availableMoves","seen_encodings","new_cube","st","expand","getAvailableMove","k","base","prepareNextMoveable","depth_l","depth_r","log","getPruner","solverFactory","prunerConfig","pruner","dist","initialized","init","Uint8Array","frontier","total_expanded","new_frontier","newState","equal","cube2","Pruner","SsSolver","is_front","v","ssPrunerConfig","FsSolver","fsPrunerConfig","EOLRSolver","center_flag","barbie_mode","edge_idx","moves_ac","moves_mc","barb_moves","eolrPrunerConfig","all_solvers","CachedSolver","cache","useOld","min2phase_init","transformed_cube","to_cstimer_cube","is_solveable","min2phase_solve","table","FavListView","favList","dialogID","setDialogID","dialogDelete","autoFocus","addDialogOpen","setAddDialogOpen","addString","setAddString","handleAddClose","dialogAdd","aria-labelledby","DialogContentText","allSolvers","parseAddString","Table","TableHead","TableRow","TableCell","align","rowSpan","IconButton","TableBody","play","is_bright","main","page","icon","bar","description","TopBarView","toggleFav","toggleBright","handleInfoOpen","value_str","boxShadow","Toolbar","Select","MenuItem","Evaluator","SeqEvaluator","moveCost","moveCost_gen","QTMEvaluator","DefaultEvaluator","TwoGramEvaluator","moves_input","score","two_gram","curr_score","Number","parseFloat","meter","isNaN","getEvaluator","two_gram_meter","initialState","scramble","post_scramble","full_solution","orientation","pre_orientation","num_solution","show_mode","is_fb_solved","oris","changeBasis","get_oris","preori","paper2","title1","marginTop","border","stageText","textTransform","formControl","resetState","postScramble","ScrambleView","setState","ConfigView","fb_ori_str","display_mode_str","InputLabel","labelId","FormHelperText","parseInt","SolutionInputView","Date","now","defaultSolution","stages","current_moves","stage_idx","getMasksForStage","some","analyze_roux_solve","maxWidth","StageSolutionView","tags","Chip","StageSolutionListView","FullSolutionView","setStage","show","setShow","onMouseLeave","onMouseEnter","stageView","worker_raw","Worker","worker","Comlink","AnalyzerView","appState","setSolutions","cubieCube","solutions_to_display","sort","analyze","curr_solutions","effect","TabPanel","children","index","other","role","hidden","modes","_getInitialHashLocation","location","hash","AppView","useCallback","newValue","handleInfoClose","showFav","dividers","gutterBottom","theme_flag","paddingY","Container","initialFavList","initialConfig","arr_ori_flag","evaluator","fbdrPosSelector2","ssEOSelector","favListManager","getFavList","setFavList","item1","configManager","getConfig","vers","undefined","keys","item2","setConfig","partial","newConfig","assign","AbstractStateM","StateFactory","createAlg","empty_alg","cmll_algs","trigger_algs","u_auf_algs","ori_algs","alg_generator","selector","algSet","lookup_algset","lookup","get_active_names","prefix","BlockTrainerStateM","solverL","solverR","scrambleMargin","scrambleCount","algDescWithMoveCount","expansionFactor","premoves","orientations","evalName","solverNames","totalSolutionCap","selectedSolutionCap","solverName","pm","pre","evaluate","algDescs","_solve_with_solvers","updateSolutionOnly","scrambleSolver","solutionLength","max","algDesc","getRandom","inputScramble","_solve","state1","_updateCase","movestr","conf","_updateCap","FbdrStateM","edgePositionMap","allowed_pedge","allowed_dr","pattern","dr_ep","dr_eo","find","_edge_piece_in_pattern","fbOnly","pairSolved","startsWith","active","_get_pair_solved_front","_get_random_fs_back","_get_random_fs_front","SsStateM","allowed_dr_eo_ep","ep_","drPositionMap","allowed_dr_eo_ep_patterns","_get_random_fb","FbStateM","is_l_only","centers","includes","pairs","cc_edges","_find_center_connected_edges","_get_random","FsStateM","LSEStateM","bars","lse_premove","lseEODef","lseEODefLookup","EOLRStateM","eo_arr","targetEO","eolrMCMode","compare","useBarbie","useFullScramble","_getEOType","acSolver","mcSolver","acLength","mcLength","CmllStateM","m2_away","lse_cube","generator","trig_generator","u_auf_generator","ori_generator","trigger_alg","cmll_alg","u_auf_alg","alg_str","_get2PhaseSolution","history","_generateCase","SolvingStateM","SolvedStateM","defaultKeyMapping","lseKeyMapping","DefaultKeyMapping","altKey","ctrlKey","metaKey","toUpperCase","LSEKeyMapping","getInitialState","initialStateName","reducer","code","stateM","onControl","onMove","reduceByKey","onConfig","reduceByConfig","rem","onReplay","reduceByFavlist","createMuiTheme","error","red","A400","themeDark","overrides","MuiDivider","keyCode","document","body","preventDefault","App","useReducer","appTheme","ThemeProvider","CssBaseline","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","createArray","bitCount","get8Parity","get12Parity","binarySearch","mid","val","fact","perm3","ud2std","std2ud","Cnk","length1","length2","createArrays","move2str","urfMove","ckmv","ckmv2","getFlip","getFlipSym","FlipR2S","EdgeConjugate","SymInv","temps","FlipS2R","setFlip","bitOdd","getTwist","getTwistSym","TwistR2S","CornConjugate","TwistS2R","setTwist","twst","getUDSlice","setUDSlice","getMPerm","setMPerm","getMid3","idxA","idxB","setMid3","getURtoUL","getDRtoDL","setEdgePerm","getEdgePerm","getCPermSym","EPermR2S","get8Perm","e2c","CPermS2R","getEPermSym","EPermS2R","URFConjugate","CornMult","urf2","urf1","EdgeMult","invCubieCube","corn","cperm","twist","eperm","flip","set8Perm","cctemp","prod","oriA","oriB","ed","CubeSym","moveCube","SymMult","SymMove","Sym8Mult","Sym8Move","Sym8MultInv","SymMoveUD","MtoEPerm","merge","UDSliceMove","TwistMove","FlipMove","UDSliceConj","UDSliceTwistPrun","UDSliceFlipPrun","TwistFlipPrun","Mid3Move","Mid32MPerm","CParity","CPermMove","EPermMove","MPermMove","MPermConj","MCPermPrun","MEPermPrun","urfidx","csym","mid3","tsym","fsym","corn0","csym0","mid30","e10","e20","prun","maxlength2","valid1","valid2","phase1","maxl","lm","cornx","ex","get4Parity","esym","phase2","sb","urf","init2","slicex","twistx","tsymx","flipx","fsymx","midx","edgex","esymx","csymx","initialize","mc","temp","f2","u4","lr2","found","occ","CubieInit","SymState","SymStateF","check","done","sym","symF","fsymxx","idxx","symx","CoordInit","module","exports","cc","Solve","randomCube"],"mappings":"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","file":"static/js/main.d2dc1883.chunk.js","sourcesContent":["export enum Face {\n    U = 0, D, F, B, L, R, X\n}\n\nconst U = Face.U;\nconst D = Face.D;\nconst F = Face.F;\nconst B = Face.B;\nconst L = Face.L;\nconst R = Face.R;\nexport {U, D, F, B, L, R};\n\nexport enum Typ {\n    C = 0, E, T\n}\nconst C = Typ.C;\nconst E = Typ.E;\nconst T = Typ.T;\nexport {C, E, T}\n\nexport type CubieT = {\n    co: Array<number>,\n    cp: Array<number>,\n    eo: Array<number>,\n    ep: Array<number>,\n    tp: Array<number>\n}\n\nexport type FaceletCube = Array<string>\n\nexport type CornerCoord = [Face, Face, Face]\nlet corners_coord : Array<CornerCoord> = [\n    [U,F,L], [U,L,B], [U,B,R], [U,R,F],\n    [D,L,F], [D,B,L], [D,R,B], [D,F,R]\n]\n\nexport type EdgeCoord = [Face, Face]\nlet edges_coord : Array<EdgeCoord> = [\n    [U,F], [U,L], [U,B], [U,R],\n    [D,F], [D,L], [D,B], [D,R],\n    [F,L], [B,L], [B,R], [F,R],\n]\nexport type CenterCoord = [Face]\nlet centers_coord : Array<CenterCoord> = [\n    [U], [D], [F], [B], [L], [R]\n]\n\nlet cstimer_corners_coord : Array<CornerCoord> = [\n    [U,R,F],[U,F,L], [U,L,B], [U,B,R],\n    [D,F,R],[D,L,F], [D,B,L], [D,R,B]\n]\n\nlet cstimer_edges_coord : Array<EdgeCoord> = [\n    [U, R], [U,F], [U,L], [U,B],\n    [D, R], [D,F], [D,L], [D,B],\n    [F, R], [F,L], [B,L], [B,R]\n]\n\nexport {corners_coord, edges_coord, centers_coord, cstimer_corners_coord, cstimer_edges_coord }\n\nexport type FaceletMapping = [Face[], Face[]][]\n\nexport type PermChg = [number, number]\nexport type OriChg = number\n\nexport type MoveT = {\n    cpc: Array<PermChg>,\n    coc: Array<OriChg>,\n    epc: Array<PermChg>,\n    eoc: Array<OriChg>,\n    tpc: Array<PermChg>,\n    name: string\n}\n\nlet u : MoveT = {\n    cpc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    coc: [0, 0, 0, 0],\n    epc: [[0, 1], [1, 2], [2, 3], [3, 0]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"U\"\n}\n\nlet f : MoveT = {\n    cpc: [[0, 3], [3, 7], [7, 4], [4, 0]],\n    coc: [1, 2, 1, 2],\n    epc: [[0, 11], [11, 4], [4, 8], [8, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"F\",\n}\n\nlet r : MoveT = {\n    cpc: [[3, 2], [2, 6], [6, 7], [7, 3]],\n    coc: [1, 2, 1, 2],\n    epc: [[3, 10], [10, 7], [7, 11], [11, 3]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"R\",\n}\n\nlet l : MoveT = {\n    cpc: [[0, 4], [4, 5], [5, 1], [1, 0]],\n    coc: [2, 1, 2, 1],\n    epc: [[1, 8], [8, 5], [5, 9], [9, 1]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"L\",\n}\n\nlet d : MoveT = {\n    cpc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    coc: [0, 0, 0, 0],\n    epc: [[4, 7], [7, 6], [6, 5], [5, 4]],\n    eoc: [0, 0, 0, 0],\n    tpc: [],\n    name: \"D\",\n}\n\nlet b : MoveT = {\n    cpc: [[1, 5], [5, 6], [6, 2], [2, 1]],\n    coc: [2, 1, 2, 1],\n    epc: [[2, 9], [9, 6], [6, 10], [10, 2]],\n    eoc: [1, 1, 1, 1],\n    tpc: [],\n    name: \"B\",\n}\n\nlet m : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[0, 4], [4, 6], [6, 2], [2, 0]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 2], [2, 1], [1, 3], [3, 0]],\n    name: \"M\",\n}\n\nlet e : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[8, 9], [9, 10], [10, 11], [11, 8]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[2, 4], [4, 3], [3, 5], [5, 2]],\n    name: \"E\",\n}\n\nlet s : MoveT = {\n    cpc: [],\n    coc: [],\n    epc: [[1, 3], [3, 7], [7, 5], [5, 1]],\n    eoc: [1, 1, 1, 1],\n    tpc: [[0, 5], [5, 1], [1, 4], [4, 0] ],\n    name: \"S\",\n}\n\nexport {u, d, f, b, l, r, m, e, s}\n\nexport type StickerT = [number, number, Typ]\nexport type StickerExtT = [number, number, Typ, Face]\nexport type FaceletT = Array<StickerT>\n\nlet u_face : FaceletT = [\n    [1, 0, C], [2, 0, E], [2, 0, C],\n    [1, 0, E], [0, 0, T], [3, 0, E],\n    [0, 0, C], [0, 0, E], [3, 0, C]\n  ]\n\nlet f_face : FaceletT = [\n    [0, 1, C], [0, 1, E], [3, 2, C],\n    [8, 0, E], [2, 0, T], [11,0, E],\n    [4, 2, C], [4, 1, E], [7, 1, C]\n]\n\nexport {u_face, f_face}\n\nconst FBpairPos : [number, number, number, number][] = [\n    [0, 0, 8, 1], [0, 1, 1, 0], [ 0, 2 , 0, 1],\n    [1, 1, 2, 0], [1, 2, 1, 1],\n    [2, 0, 10, 1], [2, 1, 3, 0], [2, 2, 2, 1],\n    [3, 0, 11, 0], [3, 1, 0, 0], [3, 2, 3, 1],\n    [4, 0, 8, 0], [4, 1, 4, 0],\n    [6, 0, 10, 0], [6, 1, 6, 0], [6, 2, 7, 1],\n    [7, 0, 11, 1], [7, 1, 7, 0], [7, 2, 4, 1]\n]\n\nexport {FBpairPos}\n\nexport type FaceletCubeT = Array<Array<Face>>\n\n// A Cube can be in two representations: cubieCube or faceletCube\n\nlet color_map =`\\\n   UUU\n   UUU\n   UUU\nLLLFFFRRRBBB\nLLLFFFRRRBBB\nLLLFFFRRRBBB\n   DDD\n   DDD\n   DDD`\n\nexport {color_map}\n","let rand_int = (r: number) => {\n    return Math.floor(Math.random() * r)\n}\n\nlet rand_incl = (l: number, r: number) => {\n    return rand_int(r - l + 1) + l;\n}\nlet rand_choice = function<T>(arr: T[]) {\n    return arr[rand_int(arr.length)]\n}\n\nlet rand_shuffle = function<T>(arr: T[]) {\n    for (let i = 0, l = arr.length; i < l - 1; i++) {\n        let j = rand_incl(i, l - 1)\n        let tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp\n    }\n    return arr\n}\n\nfunction cartesianProduct<T>(...allEntries: T[][]): T[][] {\n    return allEntries.reduce<T[][]>(\n      (results, entries) =>\n        results\n          .map(result => entries.map(entry => result.concat([entry])))\n          .reduce((subResults, result) => subResults.concat(result), []),\n      [[]]\n    )\n  }\n\nlet getParity = (perm: number[]) => {\n    let visited = Array(perm.length).fill(false)\n    let follow = (i: number, cnt: number) : number => {\n        if (visited[i]) {\n            return 0\n        } else {\n            visited[i] = 1\n            if (visited[perm[i]]) {\n                return cnt;\n            } else\n                return follow(perm[i], cnt + 1)\n        }\n    }\n    let res = 0\n    for (let x of perm) {\n        res += follow(x, 0)\n    }\n    return res\n}\n\nlet arrayEqual = function<T>(arr1: T[], arr2: T[]) {\n    if (arr1.length !== arr2.length) return false;\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) return false;\n    }\n    return true;\n}\n\nlet encodeArr = function(base: number, rarr: number[]) {\n    let int = 0\n    for (let i = rarr.length - 1; i >= 0; i--)\n        int = rarr[i] + int * base\n    return int\n}\n\nexport {rand_int, rand_choice, rand_shuffle, getParity, arrayEqual, encodeArr, cartesianProduct}","import React, { useEffect } from 'react'\n\nimport { FaceletCubeT, Face } from \"../lib/Defs\";\nimport * as THREE from 'three';\nimport { arrayEqual } from '../lib/Math';\n\ntype Config = {\n    cube: FaceletCubeT, width: number, height: number, colorScheme: Array<string>, facesToReveal: Face[],\n    bgColor?: string,\n    hintDistance?: number\n}\n\n/*\nHow to propagate control of keypress ..? maybe not here, in the app.\n\nLet's look at click analogy: if a user click on sub-component,\nthat message should be propagated upwards to the parent.\n\nThat is, \"keydown\" should transform to some kind of message, e.g. the resulting cube state\nto be passed to the App, which then decides whether to trigger state change or let the cube keep being solved\n\n*/\n\n\ntype AxesInfo = [THREE.Vector3, THREE.Euler]\nconst TAU = Math.PI * 2;\nconst axesInfo: [THREE.Vector3, THREE.Euler][] = [\n    [new THREE.Vector3(0, 1, 0), new THREE.Euler(-TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, -1, 0), new THREE.Euler(TAU / 4, 0, 0)],\n    [new THREE.Vector3(0, 0, 1), new THREE.Euler(0, 0, 0)],\n    [new THREE.Vector3(0, 0, -1), new THREE.Euler(0, TAU / 2, 0)],\n    [new THREE.Vector3(-1, 0, 0), new THREE.Euler(0, -TAU / 4, 0)],\n    [new THREE.Vector3(1, 0, 0), new THREE.Euler(0, TAU / 4, 0)],\n];\n\n\ntype ConfigT = {width: number, height: number, colorScheme: Array<string>, mode?: string,\n    faces?: Face[], bgColor?: string, hintDistance?: number}\n\nconst redraw_cube = function (cube: FaceletCubeT, config: ConfigT ) {\n    let { width, height, colorScheme, mode, faces, bgColor,} = config\n    let hintDistance = config.hintDistance || 7\n    bgColor = bgColor || '#eeeeef';\n    mode = mode || \"FRU\"\n    let facesToReveal = faces || [Face.L, Face.B, Face.D]\n\n    const scene = new THREE.Scene()\n    const camera = new THREE.PerspectiveCamera(70, width / height, 0.1, 1000)\n    const mag = 1.0\n    const alpha = 0.5\n    const enableBorder = true\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\n    renderer.setSize(width, height, true);\n    //renderer.setViewport( 0, 0, width * window.devicePixelRatio, height * window.devicePixelRatio);\n    renderer.setClearColor(bgColor) // #70788a') //#5a606e') // '#373B43') // '#eeeeee')\n    renderer.setPixelRatio(window.devicePixelRatio)\n\n    const cameraPosition = (mode === \"FRU\") ? new THREE.Vector3(2.6 / 1.1, 3 / 1.1, 3 / 1.1) : new THREE.Vector3(0 / 1.1, 3 / 1.1, 3 / 1.1)\n    camera.position.copy(cameraPosition)\n    camera.aspect = width / height;\n    camera.lookAt(new THREE.Vector3(0, 0, 0))\n\n    let stickers_tmpl: THREE.Mesh[], stickerwrap_tmpl: THREE.Mesh\n\n    const geo = new THREE.PlaneGeometry(0.89 * mag * 2, 0.89 * mag * 2)\n    const geo_border = new THREE.PlaneGeometry(1.0 * mag * 2, 1.0 * mag * 2)\n\n    let materials_border = new THREE.MeshBasicMaterial({ color: 0x000000, side: THREE.FrontSide })\n    stickerwrap_tmpl = (() => {\n        let mesh = new THREE.Mesh(geo_border, materials_border)\n        mesh.setRotationFromEuler(axesInfo[0][1])\n        return mesh\n    })()\n\n    function drawCube(faces: FaceletCubeT, colorScheme: Array<string>): THREE.Group {\n        //console.log(\"update color scheme \", colorScheme_)\n        let materials = Array(7).fill(0).map((_, i) => {\n            let mat = new THREE.MeshBasicMaterial({ color: colorScheme[i], side: THREE.DoubleSide });\n            mat.alphaTest = alpha;\n            return mat\n        })\n\n        stickers_tmpl = materials.map((mat) => {\n            let mesh = new THREE.Mesh(geo, mat)\n            mesh.setRotationFromEuler(axesInfo[0][1])\n            return mesh\n        })\n        const cube = new THREE.Group();\n        for (let i = 0; i < 6; i++) {\n            const cubie = new THREE.Group();\n            const rot = new THREE.Matrix4().makeRotationFromEuler(axesInfo[i][1]);\n            const rot1 = new THREE.Matrix4().makeRotationFromEuler(axesInfo[1][1]);\n            cubie.setRotationFromMatrix(rot.multiply(rot1))\n            for (let z = -1; z <= 1; z++) {\n                for (let x = -1; x <= 1; x++) {\n                    let idx = (z + 1) * 3 + (x + 1)\n\n                    const curr_tmpl = stickers_tmpl[faces[i][idx]]\n                    const sticker = curr_tmpl.clone()\n                    const stickerwrap = stickerwrap_tmpl.clone()\n\n                    const eps = 0.05\n                    sticker.position.copy(new THREE.Vector3(x * 2, 3, z * 2))\n                    stickerwrap.position.copy(new THREE.Vector3(x * 2, 3 - eps, z * 2))\n\n                    if (facesToReveal.indexOf(i) > -1) { // (i === 5 && mode === \"UF\")) {\n                        const stickerhint = curr_tmpl.clone()\n                        stickerhint.position.copy(new THREE.Vector3(x * 2, 3 + hintDistance + 3, z * 2))\n                        cubie.add(stickerhint)\n\n                    }\n                    if (enableBorder)\n                        cubie.add(stickerwrap)\n\n                    cubie.add(sticker)\n                }\n\n            }\n            cube.add(cubie)\n        }\n        cube.scale.set(1 / 3, 1 / 3, 1 / 3)\n        return cube\n    }\n\n    let cubeG = drawCube(cube, colorScheme)\n    scene.add(cubeG)\n    renderer.render(scene, camera)\n\n    const updateCubeAndColor = (cube: FaceletCubeT, colorScheme: Array<string>) => {\n        scene.remove(cubeG)\n        cubeG = drawCube(cube, colorScheme)\n        scene.add(cubeG)\n        renderer.render(scene, camera)\n        return renderer\n    }\n\n    const cleanup = () => {\n        geo.dispose()\n        materials_border.dispose()\n        geo.dispose()\n        geo_border.dispose()\n        scene.remove(cubeG)\n    }\n    return {\n        updateCubeAndColor,\n        getRenderer: () => renderer,\n        cleanupFunc: cleanup\n    }\n    //let defaultColorScheme = [ 0x00ff00, 0x0000ff, 0xff0000,0xff8800,0xffff00, 0xffffff]\n}\n\nlet drawCube = (function(){\n    let config_cache : ConfigT | null = null\n    let painter : Painter | null = null\n    let func = (cube: FaceletCubeT, config: ConfigT) => {\n        if (config_cache === null) {\n            painter?.cleanupFunc()\n\n            painter = redraw_cube(cube, config)\n            config_cache = config\n            return painter\n        }\n        else if (config.width === config_cache.width && config.height === config_cache.height &&\n            arrayEqual(config.faces || [], config_cache.faces || []) && config.bgColor === config_cache.bgColor &&\n            config.hintDistance === config_cache.hintDistance) {\n\n            painter?.updateCubeAndColor(cube, config.colorScheme)\n            config_cache = config\n            return painter!\n        } else {\n            painter?.cleanupFunc()\n            painter = redraw_cube(cube, config)\n            config_cache = config\n            return painter!\n        }\n    }\n    return func\n})\n\ntype Painter = {\n    updateCubeAndColor: (cube: FaceletCubeT, scheme: Array<string>) => THREE.WebGLRenderer,\n    getRenderer: () => THREE.WebGLRenderer,\n    cleanupFunc: () => void\n}\nfunction CubeSim(props: Config) {\n    const mount = React.useRef<HTMLDivElement | null>(null)\n    let { width, height, colorScheme, facesToReveal, bgColor, hintDistance} = props\n    let cubePainter = React.useMemo(drawCube, [])\n    let painter = cubePainter(props.cube, {\n            width, height, colorScheme, faces: facesToReveal, bgColor, hintDistance })\n\n    useEffect( () => {\n        let dom = mount.current!\n        dom.appendChild(painter.getRenderer().domElement) //renderer.domElement)\n        return () => {\n            dom.removeChild(painter.getRenderer().domElement)\n        }\n    })\n\n    return <div\n        ref={mount}\n        style={{ width: props.width, height: props.height, zIndex: 1 }}\n    />;\n}\n\nexport default CubeSim","import { MoveT, OriChg, PermChg, StickerT, StickerExtT, CornerCoord, EdgeCoord, cstimer_corners_coord, cstimer_edges_coord, CenterCoord, centers_coord } from \"./Defs\";\nimport { u, d, f, b, l, r, m, e, s} from \"./Defs\";\nimport { FaceletT, FaceletCubeT, corners_coord, edges_coord, u_face, f_face, color_map } from \"./Defs\";\nimport { Typ, Face, C, E, T, U, D, F, B, L, R } from \"./Defs\";\nimport { rand_int, rand_shuffle, getParity, rand_choice, arrayEqual } from \"./Math\";\n\nconst C_MOD = 3;\nconst E_MOD = 2;\nconst T_MOD = 1;\n\nexport class CubieCube {\n    cp: number[] = [];\n    co: number[] = [];\n    ep: number[] = [];\n    eo: number[] = [];\n    tp: number[] = [];\n    // The addition of tp is not necessary, but helps us deal with slice moves in Roux during search and simcube.\n    deserialize(s: string) {\n        let obj = JSON.parse(s)\n        this.set(obj);\n        return this\n    }\n    serialize() {\n        let {cp, co, ep, eo, tp} = this\n        return JSON.stringify({cp, co, ep, eo, tp});\n    }\n\n    Id() : CubieCube {\n        this.set({\n            cp: [0, 1, 2, 3, 4, 5, 6, 7],\n            co: [0, 0, 0, 0, 0, 0, 0, 0],\n            ep: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n            eo: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            tp: [0, 1, 2, 3, 4, 5]\n        })\n        return this\n    }\n    clone() : CubieCube {\n        return new CubieCube({\n            cp: [...this.cp],\n            co: [...this.co],\n            ep: [...this.ep],\n            eo: [...this.eo],\n            tp: [...this.tp]\n        })\n    }\n    constructor(value?: {cp: number[], co: number[], ep: number[], eo: number[], tp?: number[]} | CubieCube) {\n        if (value instanceof CubieCube) {\n            this.set({\n                cp: value.cp, co: value.co, ep: value.ep, eo: value.eo, tp: value.tp\n            })\n        }\n        else if (value) {\n            this.cp = value.cp\n            this.co = value.co\n            this.ep = value.ep\n            this.eo = value.eo\n            this.tp = value.tp || [0, 1, 2, 3, 4, 5] // UD FB LR\n        } else {\n            this.Id()\n        }\n    }\n    set(value: {cp?: number[], co?: number[], ep?: number[], eo?: number[], tp?: number[]} | CubieCube) {\n        this.cp = value.cp || this.cp\n        this.co = value.co || this.co\n        this.ep = value.ep || this.ep\n        this.eo = value.eo || this.eo\n        this.tp = value.tp || this.tp\n    }\n    _apply_partial(o: Array<number>, p: Array<number>, oc: Array<OriChg>, pc: Array<PermChg>, mod: number) {\n        let o_new = [...o];\n        let p_new = [...p];\n        console.assert(oc.length === pc.length)\n\n        for (let i = 0; i < oc.length; i++) {\n            //let [src, dst] = pc[i];\n            let src = pc[i][0], dst = pc[i][1];\n            p_new[dst] = p[src];\n            o_new[dst] = (o[src] + oc[i]) % mod;\n        }\n        return [o_new, p_new]\n    }\n\n    // all side-effect-less\n    apply_one(move: Move) {\n        let [co, cp] = this._apply_partial(this.co, this.cp, move.coc, move.cpc, C_MOD)\n        let [eo, ep] = this._apply_partial(this.eo, this.ep, move.eoc, move.epc, E_MOD)\n        let toc = Array(move.tpc.length).fill(0)\n        let [, tp] = this._apply_partial([0, 0, 0, 0, 0, 0], this.tp, toc, move.tpc, T_MOD)\n        return new CubieCube({ co, cp, eo, ep, tp })\n    }\n\n    apply(move: Move | Array<Move> | MoveSeq | string): CubieCube {\n        if (Array.isArray(move) || move instanceof MoveSeq) {\n            let moves = Array.isArray(move) ? move : move.moves\n            let cube = this.clone()\n            for (let i = 0; i < moves.length; i++) {\n                cube = cube.apply_one(moves[i])\n            }\n            return cube\n        } else if (typeof move === \"string\") {\n            return this.apply(new MoveSeq(move))\n        }\n        else {\n            return this.apply_one(move)\n        }\n    }\n\n    static _rotate_coord(fs: Face[]) {\n        let faces = [...fs] as Face[]\n        let last_face = faces[faces.length - 1];\n        for (let i = faces.length - 1; i > 0; i--) {\n            faces[i] = faces[i - 1];\n        }\n        faces[0] = last_face\n        return faces\n    }\n    static _backward_rotate_coord(fs: Face[]){\n        let faces = [...fs] as Face[]\n        let first_face = faces[0]\n        for (let i = 0; i < faces.length - 1; i++) {\n            faces[i] = faces[i + 1];\n        }\n        faces[faces.length - 1] = first_face\n        return faces\n    }\n\n    // facelet mapping: from position to piece\n    _to_facelet_mapping(corners_coord: CornerCoord[], edges_coord: EdgeCoord[], centers_coord: CenterCoord[]) {\n        let facelet_mapping : [Face[], Face[]][]= []\n\n        for (let i = 0; i < 8; i++) {\n            let pos = corners_coord[i] as Face[]\n            let piece = corners_coord[this.cp[i]] as Face[]\n\n            for (let j = 0; j < this.co[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i < 12; i++) {\n            let pos = edges_coord[i] as Face[]\n            let piece = edges_coord[this.ep[i]] as Face[]\n            for (let j = 0; j < this.eo[i];j++) {\n                piece = CubieCube._rotate_coord(piece)\n            }\n            facelet_mapping.push([pos, piece])\n        }\n        for (let i = 0; i<6;i++) {\n            let pos = centers_coord[i]\n            let piece = centers_coord[this.tp[i]] as Face[]\n            facelet_mapping.push([ pos, piece])\n        }\n        return facelet_mapping\n    }\n\n    _from_facelet_mapping (fm: [Face[], Face[]][], custom_corners_coord: CornerCoord[], custom_edges_coord: EdgeCoord[], custom_centers_coord: CenterCoord[] ) {\n        let cube = new CubieCube()\n\n        let match_pos_piece = (pos: Face[], piece: Face[], coord: Face[][], parity: number) : [number, number, number]=> {\n            let expected = new Map(coord.map( (x, i) => [x.toString(), i]))\n            let ori = 0\n            while (!expected.has(pos.toString())) {\n                pos = CubieCube._backward_rotate_coord(pos)\n                ori--;\n                if (ori <= -parity) break;\n            }\n            while (!expected.has(piece.toString())) {\n                piece = CubieCube._backward_rotate_coord(piece)\n     \n                ori++;\n                if (ori >= 10) {\n                    console.warn(\"can't match piece\", piece, expected)\n                    break\n                }\n            }\n\n            ori = (ori + parity) % parity;\n            return [ori, expected.get(pos.toString())!, expected.get(piece.toString())! ]\n        }\n\n        for (let coord_pair of fm) {\n            let pos = coord_pair[0], piece = coord_pair[1]\n            let coord : Face[][] = (pos.length === 2) ? custom_edges_coord : \n                        (pos.length === 3) ? custom_corners_coord :\n                         custom_centers_coord ;\n            let [newOri,newpos,newPerm] = match_pos_piece(pos, piece, coord, pos.length);\n\n            //console.log( pp([pos, piece]), [newOri, newpos,newPerm])\n            if (pos.length === 2) {\n                cube.eo[newpos] = newOri;\n                cube.ep[newpos] = newPerm;\n            } else if (pos.length === 3){\n                cube.co[newpos] = newOri;\n                cube.cp[newpos] = newPerm;\n            } else {\n                cube.tp[newpos] = newPerm;\n            }\n        }\n        return cube\n    }\n\n    to_cstimer_cube() {\n        let facelet_mapping = this._to_facelet_mapping(corners_coord, edges_coord, centers_coord)\n        let cube = this._from_facelet_mapping(facelet_mapping, cstimer_corners_coord, cstimer_edges_coord, centers_coord)\n        return cube\n    }\n\n    is_solveable() {\n        if (this.tp[0] !== 0) {\n            this.apply(new MoveSeq(\"M2\")) // assuming lse\n        }\n        let perm_correct = (getParity(this.cp) + getParity(this.ep)) % 2 === 0\n        let ori_correct = (this.co.reduce((x, y) => x + y, 0) % 3 === 0) && (this.eo.reduce((x, y) => x + y, 0) % 2 === 0)\n        return perm_correct && ori_correct\n    }\n\n    changeBasis(s: MoveSeq) {\n        // only take x and y for now\n        let facelet_mapping = this._to_facelet_mapping(corners_coord, edges_coord, centers_coord)\n\n        let transformed_mapping = s.moves.reduce( (mapping, move) : [Face[], Face[]][] => {\n            let face_mapping = Object.fromEntries(move.tpc)\n            //console.log(\"applying face mapping for \", move.name, face_mapping)\n            //console.log(\"before\", pp(mapping))\n            let result = mapping.map( ([face_pos, face_target]) => \n                [face_pos.map(f => face_mapping[f] ?? f ),\n                 face_target.map(f => face_mapping[f] ?? f) ]\n            )\n            //console.log('after', pp(result))\n            return result as any \n        } , facelet_mapping)\n        //console.log(s.toString(), facelet_mapping, transformed_mapping)\n        let cube = this._from_facelet_mapping(transformed_mapping, corners_coord, edges_coord, centers_coord)\n        return cube\n        //let cube = this._from_facelet_mapping(facelet_mapping, corners_coord, edges_coord, centers_coord)\n    }\n}\n\n\n/* Moves */\n/* We will generate all the moves based on the base moves and rotations, and return them in an array */\nexport class Move {\n    cpc: Array<PermChg> = [];\n    coc: Array<OriChg> = [];\n    epc: Array<PermChg> = [];\n    eoc: Array<OriChg> = [];\n    tpc: Array<PermChg> = [];\n    name: string = \"\";\n    constructor(arg?: Array<Move> | CubieCube | Move | MoveT, name?: string) {\n        if (Array.isArray(arg)) {\n            this.from_moves(arg, name!)\n        } else if (arg instanceof Move){\n            this.cpc = [...arg.cpc]\n            this.coc = [...arg.coc]\n            this.epc = [...arg.epc]\n            this.eoc = [...arg.eoc]\n            this.tpc = [...arg.tpc]\n            this.name = name!\n        } else if (arg instanceof CubieCube) {\n            this.from_cube(arg, name!)\n        } else if (arg) {\n            this.set(arg)\n        }\n    }\n    set(move: Move | MoveT) {\n        this.cpc = move.cpc\n        this.coc = move.coc\n        this.epc = move.epc\n        this.eoc = move.eoc\n        this.tpc = move.tpc\n        this.name = move.name\n    }\n    from_cube(cube: CubieCube, name: string) {\n        let get_change = (p: Array<number>, o: Array<number>, acc_p: Array<PermChg>, acc_o: Array<OriChg>) => {\n            for (let i = 0; i < p.length; i++) {\n                if (i === p[i] && o[i] === 0) {\n                } else {\n                    acc_p.push([p[i], i]);\n                    acc_o.push(o[i]);\n                }\n            }\n        }\n        get_change(cube.cp, cube.co, this.cpc, this.coc);\n        get_change(cube.ep, cube.eo, this.epc, this.eoc);\n        get_change(cube.tp, [0, 0, 0, 0, 0, 0], this.tpc, []);\n        this.name = name\n        return this\n    }\n    from_moves (moves: Move[], name: string) {\n        this.from_cube(new CubieCube().apply(moves), name)\n        return this\n    }\n    clone() {\n        return new Move(this, this.name)\n    }\n    static make_rot_set(move: Move): Array<Move> {\n        return [move,\n            new Move().from_moves([move, move], move.name + \"2\"),\n            new Move().from_moves([move, move, move], move.name + \"'\"),\n        ]\n    }\n\n    static generate_base_moves = () => {\n        let make_rot_set = Move.make_rot_set\n        let us = make_rot_set(new Move(u));\n        let fs = make_rot_set(new Move(f));\n        let rs = make_rot_set(new Move(r));\n        let ls = make_rot_set(new Move(l));\n        let ds = make_rot_set(new Move(d));\n        let bs = make_rot_set(new Move(b));\n        let ms = make_rot_set(new Move(m));\n        let es = make_rot_set(new Move(e));\n        let ss = make_rot_set(new Move(s));\n\n        let rw = new Move([new Move(r), ms[2]], \"r\")\n        let rws = make_rot_set(rw)\n        let lw = new Move([new Move(l), new Move(m)], \"l\")\n        let lws = make_rot_set(lw)\n        let uw = new Move([new Move(u), new Move(e)], \"u\")\n        let uws = make_rot_set(uw)\n\n        let x = new Move([new Move(r), ls[2], ms[2]], \"x\")\n        let xs = make_rot_set(x)\n        let y = new Move([new Move(u), new Move(e), ds[2]], \"y\")\n        let ys = make_rot_set(y)\n        let z = new Move([x, y, x, x, x], \"z\")\n        let zs = make_rot_set(z)\n\n        let id = new Move(new CubieCube(), \"id\")\n        let moves = [\n            id,\n            us, fs, rs, ls, ds, bs, ms, es, ss,\n            xs, ys, zs,\n            rws, lws, uws\n        ].flat()\n        let moves_dict: { [key: string]: Move } = Object.create({})\n        moves.forEach(m => moves_dict[m.name] = m)\n        return moves_dict\n    }\n    static all: {[key: string]: Move} = Move.generate_base_moves();\n\n    inv(): Move {\n        let name: string\n        switch (this.name[this.name.length - 1]) {\n            case \"'\": name = this.name.slice(0, this.name.length - 1); break\n            case \"2\": name = this.name; break\n            default: name = this.name + \"'\"\n        }\n        return Move.all[name]\n    }\n\n    toString() {\n        return this.name\n    }\n}\n\n\nexport class MoveSeq {\n    moves: Move[] = [];\n\n    constructor(moves: Move[] | string) {\n        if (typeof moves === \"string\") {\n            this.parse(moves);\n        } else {\n            this.moves = moves\n        }\n    }\n\n    static _combine(move1: Move, move2: Move) : MoveSeq {\n        const getCnt = (name : string) => {\n            if (name.length === 1) return 1\n            return name[1] === \"2\" ? 2 : 3\n        }\n        const getStr = (cnt : number) => {\n            return (cnt === 1) ? \"\" : (cnt === 2 ? \"2\" : \"'\")\n        }\n        if (move1.name[0] === move2.name[0]) {\n            let cnt = (getCnt(move1.name) + getCnt(move2.name)) % 4\n            if (cnt === 0) return new MoveSeq([])\n            else return new MoveSeq([ Move.all[move1.name[0] + getStr(cnt)] ])\n        } else {\n            return new MoveSeq([move1, move2])\n        }\n    }\n\n    remove_setup() {\n        let rotset = new Set([\"x\", \"x'\", \"x2\", \"y\", \"y'\", \"y2\", \"z\", \"z'\", \"z2\"]);\n        while (this.moves.length > 0 && rotset.has(this.moves[0].name)) {\n            this.moves.shift()\n        }\n        return this\n    }\n\n    parse_line(str: string) {\n        let tokens = []\n        let token = \"\"\n        let comment_idx = str.search(/\\/\\//)\n        if (comment_idx > -1) str = str.slice(0, comment_idx)\n        for (let i = 0; i < str.length; i++) {\n            let ch = str[i]\n            if (ch === '2' || ch === '\\'') {\n                if (token.length === 1) {\n                    token += str[i];\n                    tokens.push(token)\n                    token = \"\"\n                }\n            } else if (ch === ' ') {\n                if (token.length > 0) {\n                    tokens.push(token); token = \"\";\n                }\n            } else {\n                const ord = ch.charCodeAt(0)\n                if ( (65 <= ord && ord < 65 + 26) || (97 <= ord && ord < 97 + 26)) {\n                    if (token.length > 0) {\n                        tokens.push(token)\n                        token = \"\"\n                    }\n                    token += str[i]\n                }\n            }\n        }\n        let moves = []\n        if (token.length > 0) tokens.push(token);\n        for (let token of tokens) {\n            let move = Move.all[token]\n            if (move) {\n                moves.push(move)\n            }\n        }\n        return moves\n    }\n    parse(str: string) {\n        this.moves = str.split(\"\\n\").map(x => this.parse_line(x)).flat()\n        return this\n    }\n\n    collapse() : MoveSeq {\n        let newMoves : Move[] = []\n        let moves = this.moves\n        while (moves.length > 0) {\n            const nextMove = moves.shift()!\n            if (newMoves.length === 0) {\n                newMoves.push(nextMove)\n            } else {\n                const move = newMoves.pop()!\n                const combined = MoveSeq._combine(move, nextMove)\n                for (let m of combined.moves)\n                    newMoves.push(m)\n            }\n        }\n        return new MoveSeq(newMoves);\n    }\n\n    inv() {\n        let moves: Move[] = this.moves.slice(0).reverse().map(x => x.inv()).flat()\n        return new MoveSeq(moves)\n    }\n\n    static add_auf(moves: Array<Move>, auf_moves?: Array<Move | MoveSeq>) {\n        auf_moves = auf_moves || [ Move.all[\"id\"], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n        let auf_move = rand_choice(auf_moves)\n        if (auf_move instanceof MoveSeq) {\n            moves.concat(auf_move.moves)\n        } else {\n            moves.push(auf_move)\n        }\n    }\n\n    toString(useMetric?: string) {\n        return this.moves.map(m => m.toString()).join(\" \") + \" \" + (useMetric ? \"(\" + this.moves.length + \")\" : \"\")\n    }\n}\n\n/* Faces */\nlet FaceletCube = function () {\n    let mult_move = (face: FaceletT, move: Move): FaceletT => {\n        let face_new: FaceletT = [...face]\n        let mod_for_typ = (typ: Typ) => {\n            switch (typ) {\n                case C: return 3;\n                case E: return 2;\n                case T: return 1\n            }\n        }\n        let work = (p: PermChg, o: number, typ: Typ) => {\n            let mod = mod_for_typ(typ)\n            let [p1, p2] = p\n            for (let i = 0; i < face.length; i++) {\n                let [p_curr, o_curr, typ_curr] = face[i];\n                if (typ_curr === typ && p_curr === p1) {\n                    face_new[i] = [p2, (o_curr + o) % mod, typ]\n                }\n            }\n        }\n        for (let i = 0; i < move.cpc.length; i++) {\n            work(move.cpc[i], move.coc[i], C)\n        }\n        for (let i = 0; i < move.epc.length; i++) {\n            work(move.epc[i], move.eoc[i], E)\n        }\n        for (let i = 0; i < move.tpc.length; i++) {\n            work(move.tpc[i], 0, T)\n        }\n        return face_new\n    }\n    let color_of_c = (p: number, o1: number, o2: number) =>\n    corners_coord[p][(3 - o1 + o2) % 3];\n    let color_of_e = (p: number, o1: number, o2: number) =>\n        edges_coord[p][(2 - o1 + o2) % 2];\n    let color_of_t = (p: number) => [U, D, F, B, L, R][p]\n\n    let color_of_sticker = (cube: CubieCube, sticker: StickerT) => {\n        let [p, o, typ] = sticker\n        if (typ === C) {\n            return color_of_c(cube.cp[p], cube.co[p], o)\n        } else if (typ === E) {\n            return color_of_e(cube.ep[p], cube.eo[p], o)\n        } else if (typ === T) {\n            return color_of_t(cube.tp[p])\n        } else {\n            throw Error(\"unidentified type \" + typ)\n        }\n    }\n\n    let from_cubie_partial = (cube: CubieCube, facelet: FaceletT) => {\n        return facelet.map(s => color_of_sticker(cube, s))\n    }\n    let from_cubie_partial_masked = (cube: CubieCube, facelet: FaceletT, mask: Mask) => {\n        return facelet.map(([p, o, typ]) => {\n            if (typ === C) {\n                if (mask.cp[cube.cp[p]] === 1)\n                    return color_of_c(cube.cp[p], cube.co[p], o)\n                else\n                    return Face.X\n            } else if (typ === E) {\n                if (mask.ep[cube.ep[p]] === 1)\n                    return color_of_e(cube.ep[p], cube.eo[p], o)\n                else\n                    return Face.X\n            } else if (typ === T) {\n                if (mask.tp && mask.tp[cube.tp[p]] === 0)\n                    return Face.X\n                else\n                    return color_of_t(cube.tp[p])\n            } else {\n                throw Error(\"unidentified type \" + typ)\n            }\n        })\n    }\n\n    let moves = Move.all\n    let generate_base_facelets = () => {\n        let d_face = mult_move(f_face, moves[\"x'\"])\n        let l_face = mult_move(f_face, moves[\"y\"])\n        let r_face = mult_move(f_face, moves[\"y'\"])\n        let b_face = mult_move(f_face, moves[\"y2\"])\n        return {\n            d_face, l_face, r_face, b_face\n        }\n    }\n    let { d_face, l_face, r_face, b_face } = generate_base_facelets()\n\n    let from_cubie = (cube: CubieCube, mask?: Mask): FaceletCubeT => {\n        //console.log(\"converting from cube\", cube)\n        let faces = [u_face, d_face, f_face, b_face, l_face, r_face]\n        if (mask)\n            return faces.map((facelet) => from_cubie_partial_masked(cube, facelet, mask))\n        else\n            return faces.map((facelet) => from_cubie_partial(cube, facelet))\n    }\n\n    let to_unfolded_cube_str = (faceletCube: FaceletCubeT): String => {\n        let face_count = [0, 0, 0, 0, 0, 0];\n        let str_face_map: { [key: string]: Face } = {\n            \"U\": U, \"D\": D, \"F\": F, \"B\": B, \"L\": L, \"R\": R\n        }\n        let face_str_map = \"UDFBLR\"\n        let color_cube = \"\"\n        for (let i = 0; i < color_map.length; i++) {\n            let face_char = color_map[i];\n            if (str_face_map.hasOwnProperty(face_char)) {\n                let face: number = str_face_map[face_char] as number;\n                let count = face_count[face];\n                let color = faceletCube[face][count]\n                color_cube += face_str_map[color]\n                face_count[face] += 1;\n            } else {\n                color_cube += color_map[i];\n            }\n        }\n        return color_cube;\n    }\n\n    return {\n        from_cubie,\n        to_unfolded_cube_str,\n        color_of_sticker,\n        faces: {\n            u_face, d_face, l_face, r_face, f_face, b_face\n        }\n    }\n}()\n\ntype Mask = {\n    co?: number[],\n    eo?: number[],\n    tp?: number[],\n    cp: number[],\n    ep: number[],\n}\nfunction mask_copy (m: Mask) {\n    return {\n        co: m.co && [...m.co],\n        eo: m.eo && [...m.eo],\n        tp: m.tp && [...m.tp],\n        cp: [...m.cp],\n        ep: [...m.ep]\n    }\n}\n\nconst lse_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n}\n\nconst lse_4c_mask: Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1],\n    eo: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n}\n\nconst solved_mask : Mask = {\n    cp: [1, 1, 1, 1,  1, 1, 1, 1],\n    ep:[1, 1, 1, 1,  1, 1, 1, 1, 1, 1, 1, 1],\n}\nconst empty_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n}\nconst dl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]\n}\nconst bl_solved_mask : Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]\n}\nconst fs_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst fs_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nconst fb_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst zhouheng_mask: Mask = {\n    cp: [0, 0, 0, 0, 0, 0, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst fbdr_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_front_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 0, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst ss_back_mask: Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 0],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst sb_mask : Mask = {\n    cp: [0, 0, 0, 0, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\nconst cmll_mask : Mask = {\n    cp: [1, 1, 1, 1, 1, 1, 1, 1],\n    ep: [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n    tp: [0, 0, 0, 0, 1, 1]\n}\n\nlet CubeUtil = (() => {\n    let is_cube_solved = (cube: CubieCube) => {\n        let id = new CubieCube()\n        return arrayEqual(cube.co, id.co) &&\n               arrayEqual(cube.eo, id.eo) &&\n               arrayEqual(cube.cp, id.cp) &&\n               arrayEqual(cube.ep, id.ep)\n    }\n\n    let is_solved = (cube: CubieCube, mask: Mask) => {\n        let {co: co_, cp, eo: eo_, ep, tp: tp_} = mask\n        let co = co_ || cp\n        let eo = eo_ || ep\n        let tp = tp_ || Array(6).fill(1)\n        let c_true = co.every( (_, i) =>  (cp[i] === 0 || cube.cp[i] === i) \n                        && (co[i] === 0 || cube.co[i] === 0) )\n        if (!c_true) return false\n        let e_true = eo.every( (_, i) =>  (ep[i] === 0 || cube.ep[i] === i) \n        && (eo[i] === 0 || cube.eo[i] === 0) )\n        if (!e_true) return false\n        let t_true = tp.every( (_, i) =>  (tp[i] === 0 || cube.tp[i] === i) )\n        return t_true\n    }\n\n    function ext(stickers: StickerT[], f: Face) : StickerExtT[] {\n        return stickers.map(x => {\n            let [a, b, c] = x;\n            return [a,b,c,f]\n        })\n    }\n\n    let { u_face, d_face, l_face, r_face, f_face, b_face } = FaceletCube.faces\n    let stickers = [ ...ext(u_face, U), ...ext(d_face, D),\n        ...ext(l_face, L), ...ext(r_face, R), ...ext(f_face,F),  ...ext(b_face, B)]\n\n    let find_pairs = function() {\n        // enumerate each sticker\n        let edge_stickers = stickers.filter(s => s[2] === Typ.E)\n        let corner_stickers = stickers.filter(s => s[2] === Typ.C)\n\n        let ep_stickers : StickerExtT[][] = Array(12).fill(0).map(_ => Array(0))\n        edge_stickers.map(s => ep_stickers[s[0]].push(s) )\n\n        let cp_stickers : StickerExtT[][] = Array(8).fill(0).map(_ => Array(0))\n        corner_stickers.map(s => cp_stickers[s[0]].push(s))\n\n        const epcp_pairs : [number, number][] = []\n        for (let e = 0; e < 12; e++) {\n            for (let c = 0; c < 8; c++) {\n                let efs = ep_stickers[e]\n                let cfs = cp_stickers[c]\n\n                let match = 0;\n                efs.forEach( (e) => {\n                    cfs.forEach( (c) => { if (e[3] === c[3]) match++ })\n                })\n                if (match === 2) {\n                    epcp_pairs.push( [e, c] )\n                }\n            }\n        }\n\n\n        let get_color = (cube: CubieCube, s: StickerExtT) => {\n            return FaceletCube.color_of_sticker(cube, [s[0], s[1], s[2]] )\n        }\n        let func = (cube: CubieCube) => {\n            // now we process the cube\n            let connected_pairs : [number, number][]= []\n            //console.log(\"All neighboring pairs \", epcp_pairs)\n            for (let [ep, cp] of epcp_pairs) {\n                let efs = ep_stickers[ep]\n                let cfs = cp_stickers[cp]\n                let cnt = 0;\n                efs.forEach( (e) => {\n                    const c = cfs.filter( (c) => e[3] === c[3])[0]\n                    if (get_color(cube, e) === get_color(cube, c)) cnt++;\n                })\n                if (cnt === 2) {\n                    connected_pairs.push([ep, cp])\n                }\n            }\n            return connected_pairs\n        }\n        return func\n    }()\n\n    let is_mask_solved2 = (cube: CubieCube, { co, eo, cp, ep }: Mask, premove: (Move | Move[])[]) => {\n        //let moves = [ [], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"] ]\n        co = co || cp\n        eo = eo || ep\n        for (let move of premove) {\n            let cube1 = cube.apply(move)\n            let solved = true\n            for (let i = 0; i < 8 && solved; i++) {\n                if ((co[i] && cube1.co[i] !== 0)\n                    || (cp[i] && cube1.cp[i] !== i)) {\n                    solved = false;\n                }\n            }\n            for (let i = 0; i < 12 && solved; i++) {\n                if ((eo[i] && cube1.eo[i] !== 0)\n                    || (ep[i] && cube1.ep[i] !== i)) {\n                    solved = false;\n                }\n            }\n            if (solved) return true;\n        }\n        return false;\n    }\n\n    const u_premove = [[], Move.all[\"U\"], Move.all[\"U'\"], Move.all[\"U2\"]]\n    const m2_premove = [[], Move.all[\"M2\"]]\n\n    let is_cmll_solved = (cube: CubieCube) => {\n        return is_mask_solved2(cube, lse_mask, u_premove)\n    }\n\n    let get_random_with_mask = ({ co, eo, cp, ep }: Mask): CubieCube => {\n        co = co || cp\n        eo = eo || ep\n        // get_random -- figure out which masks are 0, and assign random to these\n        let random_ori = (ori_mask: number[], typ: Typ) => {\n            let ori = Array(ori_mask.length).fill(0)\n            let mod = (typ === C) ? 3 : 2\n            let sum: number\n            do {\n                sum = 0\n                for (let i in ori_mask) {\n                    if (ori_mask[i] === 0) {\n                        ori[i] = rand_int(mod)\n                        sum += ori[i]\n                    }\n                }\n            } while (sum % mod > 0)\n            return ori\n        }\n        let random_perm = (perm_mask: number[]) => {\n            let perm: number[] = Array(perm_mask.length).fill(0)\n            let undecided: number[] = []\n            for (let i = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    undecided.push(i)\n                } else {\n                    perm[i] = i\n                }\n            }\n            rand_shuffle(undecided)\n            for (let i = 0, cnt = 0; i < perm_mask.length; i++) {\n                if (perm_mask[i] === 0) {\n                    perm[i] = undecided[cnt]\n                    cnt += 1\n                }\n            }\n            return perm\n        }\n        let cp_rand, ep_rand, par\n        do {\n            [cp_rand, ep_rand] = [random_perm(cp), random_perm(ep)]\n            par = (getParity(cp_rand) + getParity(ep_rand)) & 1\n        } while (par > 0)\n\n        return new CubieCube({\n            co: random_ori(co, C),\n            cp: cp_rand,\n            eo: random_ori(eo, E),\n            ep: ep_rand,\n        })\n    }\n\n    let get_random_lse = (): CubieCube => {\n        let cube = get_random_with_mask(lse_mask)\n        return cube.apply(rand_choice(m2_premove))\n    }\n\n \n\n    return {\n        is_cmll_solved,\n        is_solved,\n        get_random_lse,\n        get_random_with_mask,\n        is_cube_solved,\n        find_pairs,\n        stickers\n    }\n})()\n\nexport abstract class Storage {\n    abstract name: string;\n    abstract serialize(): string;\n    abstract deserialize(x: string): void;\n    abstract _setDefault(): void;\n    save() {\n        window.localStorage.setItem(this.name, this.serialize());\n    }\n    load() {\n        const item = window.localStorage.getItem(this.name)\n        if (item) this.deserialize(item);\n        else this._setDefault();\n    }\n}\n\nexport class ColorScheme extends Storage {\n    // UDFBLR\n    // specify the colors for uf\n    // how to do this?\n    static default_colors = {\n        \"G\": \"#00b500\",\n        \"B\": \"#0000ff\",\n        \"R\": \"#ff0000\",\n        \"O\": \"#ff8800\",\n        \"Y\": \"#ffff00\",\n        \"W\": \"#ffffff\",\n        \"X\": \"#cccccc\"\n    }\n    name = \"colorscheme\";\n    colors: {[key:string]:string} = {};\n    // UDFBLR from UF\n    // INFERR UFR from UF?\n    static valid_schemes = [\n        \"WYGBOR\",\n        \"WYBGRO\",\n        \"WYROGB\",\n        \"WYORBG\",\n        \"YWGBRO\",\n        \"YWBGOR\",\n        \"YWROBG\",\n        \"YWORGB\",\n\n        \"GBWYRO\",\n        \"GBYWOR\",\n        \"GBROYW\",\n        \"GBORWY\",\n        \"BGWYOR\",\n        \"BGYWRO\",\n        \"BGROWY\",\n        \"BGORYW\",\n\n        \"ORWYGB\",\n        \"ORYWBG\",\n        \"ORGBYW\",\n        \"ORBGWY\",\n        \"ROWYBG\",\n        \"ROYWGB\",\n        \"ROGBWY\",\n        \"ROBGYW\",\n    ]\n    static valid_schemes_map = function() {\n        return new Map(ColorScheme.valid_schemes.map(x => [ x[0] + x[2], x]))\n    }();\n    constructor(suppressLoad?: boolean) {\n        super();\n        if (!suppressLoad) {\n            this.load();\n        }\n    }\n    toUserInput() {\n        return \"GBROYWX\".split('').map(x => this.colors[x])\n    }\n    set( colors:{[key:string]:string} | string[]) {\n        let newScheme = new ColorScheme(true);\n        if (Array.isArray(colors)) {\n            colors.forEach( (color, i) => newScheme.colors[\"GBROYWX\"[i]] = color )\n        } else {\n            newScheme.colors = {...this.colors, ...colors};\n        }\n        newScheme.save();\n        return newScheme\n    }\n    setWithDefault() {\n        let newScheme = new ColorScheme(true);\n        newScheme._setDefault();\n        newScheme.save();\n        return newScheme\n    }\n    _setDefault() { this.colors = ColorScheme.default_colors; };\n    serialize() {\n        return JSON.stringify(this.colors)\n    }\n    deserialize(s: string) {\n        this.colors = JSON.parse(s)\n    }\n    getColorsForOri(s: string) {\n        let faces = (ColorScheme.valid_schemes_map.get(s) || ColorScheme.valid_schemes_map.get(\"WG\")) + \"X\";\n        let arr : string[] = []\n        for (let i = 0; i < faces.length; i++) {\n            arr.push(this.colors[faces[i]]!)\n        }\n        return arr\n    }\n}\n\nlet Mask = {\n    lse_mask, fs_back_mask, fs_front_mask, fbdr_mask, fb_mask, sb_mask, cmll_mask, ss_front_mask, ss_back_mask,\n    empty_mask, dl_solved_mask, bl_solved_mask, solved_mask, zhouheng_mask, lse_4c_mask,\n    copy: mask_copy\n}\n\nexport { FaceletCube, CubeUtil, Mask }\n","export type Selector = {\n    names: string[],\n    flags: number[],\n    kind: string,\n    label?: string\n}\n\nfunction getActiveNames(s : Selector) {\n    let ans = []\n    for (let i = 0; i < s.flags.length; i++) {\n        if (s.flags[i] === 1) {\n            ans.push(s.names[i])\n        }\n    }\n    return ans\n}\n\nfunction getActiveName(s : Selector) {\n    for (let i = 0; i < s.flags.length; i++) {\n        if (s.flags[i] === 1) {\n            return (s.names[i])\n        }\n    }\n    return \"\"\n}\n\nexport {getActiveNames, getActiveName}\n","import React from 'react'\n\nimport {\n    FormControlLabel, FormGroup, Button, makeStyles, Box,\n    FormControl, FormLabel, RadioGroup, Checkbox, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport Radio from '@material-ui/core/Radio';\n\nimport { AppState, Config, Action } from '../Types';\nimport { Selector } from '../lib/Selector';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        flexGrow: 1,\n    },\n    select: {\n      color: theme.palette.text.primary\n    },\n    selectLabel: {\n      color: theme.palette.text.secondary\n    }\n\n}))\n\nfunction SingleSelect(props: {state: AppState, dispatch: React.Dispatch<Action>,\n    select: (c: Config) => Selector, label?: string}) {\n    let { state, dispatch, select } = props\n    let { config } = state\n    let sel = select(config)\n    let classes = useStyles()\n\n    const handleChange = (evt: { target: { value: string; }; }) => {\n      let { names } = sel\n      let n = names.length\n      let new_flags = Array(n).fill(0)\n\n      for (let i = 0; i < names.length; i++) {\n        if (names[i] === evt.target.value) {\n          new_flags[i] = 1\n        }\n      }\n      let new_config = JSON.parse(JSON.stringify(config))\n      select(new_config).flags = new_flags\n      if (new_config.fbPairSolvedSelector.flags[1] === 1) {\n        new_config.fbdrSelector.flags = [1, 0, 0]\n      }\n      dispatch( { type: \"config\", content: new_config })\n    }\n\n    let radioValue = function() {\n      let { names, flags } = sel\n      for (let i = 0; i < flags.length; i++) {\n        if (flags[i] === 1) return names[i]\n      }\n      return \"\"\n    }()\n\n    let label = sel.label || props.label || \"\"\n    return (\n      <FormControl component=\"fieldset\" className={classes.select}>\n      <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n      <RadioGroup aria-label=\"position\" name=\"position\" value={radioValue} onChange={handleChange} row>\n        {\n          sel.names.map(name => (\n            <FormControlLabel\n              key={name}\n              value={name}\n              control={<Radio color=\"primary\" />}\n              label={name}\n              labelPlacement=\"end\"\n            />\n          ))\n        }\n      </RadioGroup>\n    </FormControl>)\n  }\n\n\n\n  type MultiOptions = {\n    label?: string, noDialog?: boolean,\n    manipulators?: {name: string, enableIdx: number[]}[]\n  }\n\n\n  function MultiSelectContent(props: {state: AppState, dispatch: React.Dispatch<Action>, select: (c: Config) => Selector, options?: MultiOptions }) {\n    let { state, dispatch, select, options } = props\n    options = options || {}\n    let { config } = state\n\n    let sel = select(config)\n    const handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n      let { names, flags } = sel\n      let new_flags = [...flags]\n\n      for (let i = 0; i < names.length; i++) {\n        if (names[i] === evt.target.value) {\n          new_flags[i] = (evt.target.checked)? 1 : 0\n        }\n      }\n      let new_config = JSON.parse(JSON.stringify(config))\n      select(new_config).flags = new_flags\n      dispatch( { type: \"config\", content: new_config })\n    }\n\n    let makeBox = (name: string, checked: boolean) => {\n      return (\n      <FormControlLabel\n          control={\n          <Checkbox color=\"primary\" checked={checked} onChange={handleChange} />\n          }\n          label={name}\n          key={name}\n          value={name}\n      />)\n    }\n\n    const [manipChecked, setManipChecked] = React.useState< { [ name: string ]: boolean } >({})\n    let label = sel.label || options.label || \"\"\n    let makeManipulator = (manip: {name: string, enableIdx: number[]}) => {\n      let {name, enableIdx} = manip\n      let handleChange = (evt: { target: { value: string; checked: boolean }; }) => {\n        setManipChecked( {...manipChecked, [name] : evt.target.checked } )\n        let fillValue = (evt.target.checked);\n        let { flags } = sel\n        let new_flags = [...flags]\n        for (let i of enableIdx) {\n          new_flags[i] = fillValue ? 1 : 0;\n        }\n        let new_config = JSON.parse(JSON.stringify(config))\n        select(new_config).flags = new_flags;\n        dispatch( { type: \"config\", content: new_config } )\n      }\n      return (\n        <FormControlLabel\n        control={\n        <Checkbox color=\"primary\" checked={manipChecked[name]} onChange={handleChange} />\n        }\n        label={name}\n        key={name}\n        value={name}\n        />)\n    }\n    let manipulator_row = options.manipulators ?\n      (<FormGroup row>\n      {options.manipulators.map(x => makeManipulator(x)) }\n      </FormGroup>) : null;\n    const content = (\n      <React.Fragment>\n        {manipulator_row}\n        <FormGroup row>\n        {sel.names.map( (name, i) => makeBox(name, !!sel.flags[i]))}\n        </FormGroup>\n      </React.Fragment>\n    )\n    return {label, content}\n  }\n\n  function MultiSelect(props: {state: AppState, dispatch: React.Dispatch<Action>, select: (c: Config) => Selector, options?: MultiOptions }) {\n    let { state, dispatch, select, options } = props\n    let {label, content} = MultiSelectContent({state, dispatch, select, options})\n    options = options || {}\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    }\n    let classes = useStyles()\n\n    if (options.noDialog)\n    return (\n      <FormControl component=\"fieldset\" className={classes.select}>\n        <FormLabel component=\"legend\"className={classes.selectLabel} >{label}</FormLabel>\n        {content}\n      </FormControl>\n    )\n\n    return (\n    <div>\n      <FormLabel component=\"legend\">{label}</FormLabel>\n      <Box height={8}/>\n      <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n      <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n        Edit\n      </Button>\n      <Box height={8}/>\n      <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n        <DialogTitle> {label} </DialogTitle>\n        <DialogContent>\n          {content}\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Ok\n            </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n    )\n  }\n\n  export { SingleSelect, MultiSelectContent, MultiSelect }","import React, { Fragment } from 'react'\n\nimport {\n    TextField,\n    Divider,\n    Button, Box,\n    FormLabel, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport { AppState, Config, Action } from '../Types';\nimport { ColorScheme } from '../lib/CubeLib';\n\nimport { MultiSelectContent } from './Select';\n\nexport function ColorSetter(props: {state: AppState, dispatch: React.Dispatch<Action>}) {\n    const [text, setText] = React.useState(props.state.colorScheme.toUserInput().join(\",\"))\n    const handleChange = (event: any) => setText(event.target.value);\n    const handleClick = () => {\n        let arr = text.split(\",\")\n        props.dispatch({\n            type: \"colorScheme\",\n            content: arr.length === 7? arr : ColorScheme.default_colors\n        })\n    }\n    return (\n        <Fragment>\n        <Box>\n        <TextField\n            label=\"Color\"\n            defaultValue=\"Default Value\"\n            helperText=\"G,B,R,O,Y,W,Gray\"\n            onChange={handleChange}\n            fullWidth\n            value={text}\n        /></Box>\n\n        <Box>\n        <Button variant=\"outlined\" size=\"medium\" color=\"primary\" onClick={handleClick} >\n            Set color\n        </Button>\n        </Box>\n        </Fragment>\n    )\n}\n\nexport function ColorPanel(props: {state: AppState, dispatch: React.Dispatch<Action>}) {\n    let { state, dispatch } = props\n    let select = (config: Config) => { return config.orientationSelector }\n    let {content} = MultiSelectContent({state, dispatch, select})\n\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    }\n    return (\n        <div>\n        <FormLabel component=\"legend\">Orientation and Color Scheme</FormLabel>\n        <Box height={8}/>\n        <Button color=\"primary\" variant=\"outlined\" style={{borderWidth: 2}} onClick={handleClickOpen}>\n        <SettingsIcon fontSize=\"small\" color=\"primary\" style={{marginLeft: -6, marginRight: 3}}></SettingsIcon>\n          Edit\n        </Button>\n        <Box height={8}/>\n        <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n          <DialogTitle> Set Orientation (U-F) and Color Scheme  </DialogTitle>\n          <DialogContent>\n            {content}\n            <Box height={20}/>\n                <Divider />\n            <Box height={20}/>\n            <ColorSetter {...{state, dispatch}}/>\n\n          </DialogContent>\n          <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                  Close\n              </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n}","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { makeStyles, useTheme, FormControl, FormLabel, Typography, Button} from '@material-ui/core';\n\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport { FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState, Action, Config } from \"../Types\";\nimport clsx from 'clsx';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\nimport { MultiSelect, SingleSelect } from './Select';\nimport { ColorPanel } from './Input';\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 300,\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        fontSize: 18,\n        borderBottom: \"2px solid\",\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    button: {\n      width: \"100%\"\n    },\n}))\n\n\n\nfunction _getMask(name: string) {\n  switch (name) {\n    case \"Show\": return Mask.solved_mask;\n    case \"Hide\": return Mask.empty_mask;\n    case \"Hide LSE\": return Mask.lse_mask;\n    default: return Mask.solved_mask\n  }\n}\nfunction CmllTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n    const canvasPaper = clsx(classes.canvasPaper, classes.fixedHeight);\n    let facelet = FaceletCube.from_cubie(cube,\n      _getMask(getActiveName( state.config.cmllCubeMaskSelector) || \"Show\"))\n\n    const theme = useTheme()\n    const simBackground = getActiveName(state.config.theme) === \"bright\" ? \"#eeeeef\" : theme.palette.background.paper\n\n    const cmll = (c: Config) => c.cmllSelector;\n    const cmllcubemask = (c : Config) => c.cmllCubeMaskSelector;\n    const cmllauf = (c: Config) => c.cmllAufSelector;\n    const trigger = (c: Config) => c.triggerSelector;\n\n    const panel = (\n      <Fragment>\n        <SingleSelect {...{state, dispatch, select: cmllcubemask, label: \"Virtual Cube\"}} />\n        <MultiSelect {...{state, dispatch, select: cmll, options: { label: \"CMLL Case\", noDialog: true} }} />\n        <MultiSelect {...{state, dispatch, select: cmllauf, options: { label: \"CMLL Auf\", noDialog: true} }} />\n        <MultiSelect {...{state, dispatch, select: trigger, options: { label: \"SB Last Pair Trigger (Uncheck all for pure CMLL)\", noDialog: true} } } />\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n\n    React.useEffect( () =>  {\n      setReveal(false)\n    }, [ state ])\n    const [reveal, setReveal] = React.useState(false)\n    const handleClick = () => {\n      setReveal(true)\n    }\n    const handleNext = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n    }\n\n    React.useEffect(() => {\n      function downHandler(event: KeyboardEvent) {\n        state.keyMapping.handle(event, dispatch);\n      }\n      window.addEventListener('keydown', downHandler);\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n      };\n    });\n\n    let alg = \"\"\n    let setup = \"\"\n    if (state.case.desc.length === 4) {\n      setup = state.case.desc[3].algs[0]\n    }\n    if (reveal && state.case.desc.length >= 3) {\n      const moves = new MoveSeq(state.case.desc[1].algs[0] + state.case.desc[2].algs[0] )\n      let moves_c = moves.collapse()\n      if (moves_c.moves.length > 0) {\n        if (moves_c.moves[0].name[0] === \"U\") {\n          alg += \"(\" + moves_c.moves[0].name + \") \";\n          moves_c.moves = moves_c.moves.slice(1)\n        }\n        alg += moves_c.toString()\n      }\n    }\n    return (\n    <Box className={classes.container}>\n    <Grid container >\n      <Grid item xs={12} >\n            <Paper className={canvasPaper}>\n              <Box margin=\"auto\">\n              <CubeSim\n                width={300}\n                height={300}\n                cube={facelet}\n                colorScheme={state.colorScheme.getColorsForOri(state.cube.ori)}\n                bgColor={simBackground}\n                facesToReveal={[Face.L]}\n              />\n              </Box>\n            </Paper>\n      </Grid>\n    </Grid>\n\n    <Box height = {5}/>\n\n    <Paper className={classes.paper} elevation={2}>\n    <Grid container spacing={2}>\n\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Scramble\n              </Box> </Box>\n      </Box>\n      </Grid>\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { setup }\n          </Typography>\n        </Box>\n\n      </Grid>\n      <Grid item xs={3}>\n\n      <Box display=\"flex\">\n              <Box>\n              <Box className={classes.title} >\n                Case\n              </Box> </Box>\n      </Box>\n      </Grid>\n      { (!reveal) ?\n      <Grid item xs={3}>\n      <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n      size=\"medium\" variant=\"outlined\" color=\"primary\" onClick={handleClick}> { /* className={classes.margin}>  */ }\n          Show\n      </Button>\n      </Grid>\n      :\n      <Grid item xs={9}>\n        <Box paddingBottom={1} lineHeight={1} >\n          <Typography style={{whiteSpace: 'pre-line', fontSize: 18, fontWeight: 500}}>\n            { alg }\n          </Typography>\n        </Box>\n\n      </Grid>\n      }\n    </Grid>\n    <Box height={30}/>\n\n    <Grid container spacing={0}>\n        <Grid item xs={4} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button}\n          size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleNext}>\n              Next\n          </Button>\n        </Grid>\n    </Grid>\n    </Paper>\n\n\n    <Box height={20}/>\n      <Divider />\n    <Box height={20}/>\n    { panel }\n\n    <Box height={20}/>\n      <Divider />\n    <Box height={15}/>\n\n    <Box>\n    <FormControl component=\"fieldset\" className={classes.prompt}>\n      <FormLabel component=\"legend\">\n         Usage: Press space for next case. Enter to redo.\n      </FormLabel>\n      </FormControl>\n    </Box>\n\n    </Box>\n    );\n}\n\nexport default CmllTrainerView\n\n\n","import React, { Fragment } from 'react'\n\nimport {\n    TextField,\n    Divider,\n    Button, Box,\n    makeStyles,\n    Typography,\n    FormLabel, Dialog, DialogTitle, DialogContent, DialogActions\n} from '@material-ui/core';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport RootRef from '@material-ui/core/RootRef';\n\n\n\nimport { AppState, Config, Action } from '../Types'\nconst useStyles = makeStyles(theme => ({\n\n    setupEdit: {\n        whiteSpace: 'pre-line',\n        fontSize: \"1.2rem\",\n        fontWeight:500,\n        [theme.breakpoints.down('xs')]: {\n        fontSize: \"1.0rem\",\n        fontWeight: 500\n        },\n    },\n    button: {\n        marginRight: theme.spacing(1)\n        //margin: theme.spacing(1)\n    }\n}))\n\nexport function ScrambleInputView(props: { display: string, scrambles: string[], dispatch: React.Dispatch<Action>}) {\n    let classes = useStyles()\n    let [editing, setEditing] = React.useState(false)\n    let [value, setValue] = React.useState(props.scrambles.join(\"\\n\"))\n    let textField = React.useRef<HTMLInputElement | null>(null)\n    let container = React.useRef<HTMLInputElement | null>(null)\n    let editButton = React.useRef<HTMLElement | null>(null)\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value)\n        event.stopPropagation()\n    }\n    const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        event.stopPropagation()\n    }\n    const toggleEdit = () => {\n        setEditing(!editing)\n    }\n    const handleClose = () => {\n        setEditing(false)\n        props.dispatch({type: \"scrambleInput\", content: value.split(\"\\n\").filter(s => s.trim())})\n    }\n    React.useEffect(  () => {\n        setValue(props.scrambles.join(\"\\n\"))\n    }, [props.scrambles])\n\n    /*\n    React.useEffect( ()=> {\n        if (editing) {\n            textField.current && textField.current.focus()\n        } else {\n            textField.current && textField.current.blur()\n            editButton.current && editButton.current.blur()\n        }\n    }, [editing]*/\n\n    const onEntered = () => {\n        textField.current && textField.current.focus()\n    }\n    return <>\n    <Box>\n            <Button variant={editing ? \"contained\" : \"outlined\"}\n                color=\"primary\"\n                size=\"small\"\n                onClick={toggleEdit}\n                className={classes.button}\n                startIcon={<EditIcon />}\n            >\n                {\"INPUT\"}\n            </Button>\n\n    </Box>\n\n    <Dialog open={editing} \n            onClose={handleClose}  \n            onKeyPress={onKeyPress} \n            onKeyDown={onKeyPress} \n            onKeyUp={onKeyPress}\n            onEntered={onEntered}\n            >\n          <DialogTitle> Input your own scrambles (one per line) </DialogTitle>\n          <DialogContent>\n                <TextField\n                    inputRef={textField}\n                    multiline\n                    size=\"medium\"\n                    fullWidth\n                    rowsMax={10}\n                    rows={3}\n                    InputProps={{\n                        className:classes.setupEdit\n                    }}\n                \n                    value={value}\n                    onChange={onChange}\n                    variant=\"outlined\">\n                </TextField>\n          </DialogContent>\n          <DialogActions>\n              <Box padding={1}>\n              <Button onClick={handleClose} color=\"primary\" variant=\"outlined\" fullWidth >\n                  Confirm\n              </Button>\n              </Box>\n          </DialogActions>\n    </Dialog>\n    </>\n    /*\n    return <Dialog open={props.open} onClose={handleClose}>\n          <DialogTitle> Input your own scrambles  </DialogTitle>\n          <DialogContent>\n              Hello\n          </DialogContent>\n          <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                  Confirm\n              </Button>\n          </DialogActions>\n        </Dialog>\n        */\n}","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, makeStyles, Typography, useTheme, FormControl, FormLabel, } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState,  Action, Config, FavCase, Mode} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\n\nimport { SingleSelect, MultiSelect } from './Select';\nimport { ColorPanel } from './Input';\nimport { AlgDesc } from '../lib/Algs';\nimport { ScrambleInputView } from './ScrambleInputView';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default,\n      transition: \"all .5s ease-in-out\"\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    setup: {\n      whiteSpace: 'pre-line',\n      fontSize: \"1.4rem\",\n      fontWeight:500,\n      [theme.breakpoints.down('xs')]: {\n      fontSize: \"1.0rem\",\n      fontWeight: 500\n      },\n  },\n    condGap: {\n    },\n    fgap: {\n      flexShrink: 100, flexBasis: \"2.5rem\", minWidth: \"1.5em\",\n      [theme.breakpoints.down('xs')]: {\n        flexBasis: \"1.0rem\", \n        minWidth: \"0.4rem\"\n      }\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    sourceIcon : {\n        color: theme.palette.text.hint,\n        fontSize: 15,\n        padding: 0\n    },\n    sourceIconWrap : {\n        //border: \"1px solid \" + theme.palette.text.hint,\n        //borderRadius: 3\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n  }))\n\n\nfunction getMask(state: AppState) : Mask {\n    if (state.mode === \"fbdr\") {\n      const fbOnly = (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\")\n      //   getActiveName(state.config.fbOnlySelector) === \"FB Last Pair\"\n      return fbOnly ? Mask.fb_mask : Mask.fbdr_mask\n    }\n    else if (state.mode === \"fs\") {\n      let name = getActiveName(state.config.fsSelector)\n      return ({\n        \"Front FS\": Mask.fs_front_mask,\n        \"Back FS\": Mask.fs_back_mask,\n        \"Both\": Mask.fb_mask\n      } as any)[name]\n    }\n    else if (state.mode === \"ss\") {\n      if (state.case.desc.length === 0) return Mask.sb_mask\n      if (state.case.desc[0].kind === \"ss-front\")\n        return Mask.ss_front_mask\n      else\n        return Mask.ss_back_mask\n    }\n    else if (state.mode === \"fb\") {\n      if (state.case.desc.length === 0 || state.case.desc[0].kind === \"fb\") {\n        return Mask.fb_mask\n      }\n      else if (state.case.desc[0].kind === \"fbdr\") {\n        return Mask.fbdr_mask\n      } else {\n        return Mask.solved_mask\n      }\n    }\n    else if (state.mode === \"4c\" || state.mode === \"eopair\") {\n      return Mask.solved_mask\n    }\n    else return Mask.sb_mask\n}\n\nfunction getHelperTextForMode(mode: Mode) {\n  if (mode === \"4c\" || mode === \"eopair\") {\n    return (\"Usage: Press space for next case. Enter to redo.\"\n      + \"\\n\\nVirtual Cube: I/K (E/D) for M'/M, J/F for U/U'\")\n  } else {\n    return null\n  }\n}\n\n\nfunction BlockTrainerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state, dispatch } = props\n    let cube = state.cube.state\n    let classes = useStyles()\n\n    let facelet = FaceletCube.from_cubie(cube, getMask(state))\n\n    let desc : AlgDesc[] = state.case.desc.length ? state.case.desc :\n       [ { algs: [\"\"], setup:\"Press next for new case\", id: \"\", kind: \"\"} ]\n\n    let spaceButtonText = (state.name === \"hiding\") ? \"Reveal\" : \"Next\"\n\n\n    let describe_reveal = function(algs: AlgDesc[]) {\n      let get_algs = (d: AlgDesc) => d.algs;\n      if (algs.length === 1) {\n        return get_algs(algs[0]).join(\"\\n\")\n      } else {\n        return algs.map( alg =>\n          `[${alg.kind}]:\\n` + get_algs(alg).join(\"\\n\") + \"\\n\"\n        )\n      }\n    }\n\n    let describe_hide = (desc: AlgDesc[]) => {\n      let minMove = desc.map( d =>\n        d.algs.map(a => new MoveSeq(a).remove_setup().moves.length))\n        .flat()\n        .reduce( (a, b) => Math.min(a, b), 100 )\n      return `(Min = ${minMove} STM)`\n    }\n    let algText = (state.name === \"hiding\") ? describe_hide(desc)\n      : (state.name === \"revealed\") ? describe_reveal(desc) : \"\"\n\n    const handleSpace = () => {\n      dispatch({type: \"key\", content: \"#space\"})\n      if (spaceButtonText === \"Next\") {\n        setFav(false)\n      }\n    }\n\n\n    const [inputActive, setInputActive] = React.useState(false)\n    const handleInput = () => {\n      setInputActive(true)\n    }\n    const setup = desc.length ? desc[0].setup! : \"\"\n\n\n    const theme = useTheme()\n    const simBackground = getActiveName(state.config.theme) === \"bright\" ? \"#eeeeef\" : theme.palette.background.paper\n\n    // source\n    // Add event listeners\n    React.useEffect(() => {\n      function downHandler(event: KeyboardEvent) {\n        if (event.key === \" \" && spaceButtonText === \"Next\") {\n          setFav(false)\n        }\n        state.keyMapping.handle(event, dispatch);\n      }\n      window.addEventListener('keydown', downHandler);\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n      };\n    });\n\n\n    const [favSelected, setFav] = React.useState(false)\n    const handleFav = () => {\n      if (state.case.desc.length === 0) return\n      const case_ : FavCase = {\n        mode: state.mode,\n        solver: state.case.desc.map(x => x.kind),\n        setup: setup || \"\"\n      }\n      if (!favSelected){\n        setFav(true)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"add\"})\n      } else {\n        setFav(false)\n        dispatch({type: \"favList\", content: [ case_ ], action: \"remove\" })\n      }\n    }\n\n    // helper-text\n    let helperText = getHelperTextForMode(state.mode)\n\n                // <Checkbox  className={classes.sourceIconWrap}\n            //       icon={<FavoriteIcon />}\n            //       checked={favSelected}\n            //       onChange = {handleFav}\n            //       checkedIcon={<FavoriteIcon color=\"primary\" />}\n            //       name=\"fav\" />\n\n    return (\n    <Box className={classes.container}>\n      <Paper className={classes.paper} elevation={1}>\n        <Box style={{display: \"flex\"}}>\n          <Box style={{display: \"flex\", alignItems: \"center\"}}> <Box className={classes.title} style={{}}>\n            Scramble\n          </Box> </Box>\n          <Box style={{}} className={classes.fgap} />\n          <Box style={{display: \"flex\", alignItems: \"center\", flexGrow: 1}}>\n          <Typography className={classes.setup} >\n                {setup}\n          </Typography>\n             \n          </Box>\n          <Box style={{}} className={classes.fgap} />\n\n          <Box style={{display: \"flex\", flexWrap: \"wrap\", padding: 0}}>\n            <ScrambleInputView display = {setup}\n                dispatch={dispatch} scrambles={state.scrambleInput}/>\n\n            <Box>\n            <Button variant={favSelected ? \"contained\" : \"outlined\"}\n                color=\"primary\"\n                size=\"small\"\n                name=\"fav\"\n                onClick={handleFav}\n                startIcon={<FavoriteIcon />} \n                endIcon={favSelected ? null : null}\n                >\n                {favSelected ? \"✓\" : \"ADD\"}\n            </Button></Box>\n          </Box>\n          \n        </Box>\n      </Paper>\n\n      <Paper className={ classes.paper}>\n      <Grid container>\n\n        <Grid item md={8} xs={12} sm={6} className={classes.condGap}>\n          <Box style={{display: \"flex\" }}>\n            <Box display=\"flex\" >\n                <Box style={{display: \"flex\", alignSelf: \"flex-start\"}}> <Box className={classes.title} style={{}}>\n                  Solutions\n                </Box> </Box>\n            </Box>\n            <Box style={{}} className={classes.fgap} />\n            <div>\n              <Box paddingBottom={2} lineHeight={1}>\n                <Typography style={{whiteSpace: 'pre-line', fontSize: 16}} >\n                  {algText}\n                </Typography>\n              </Box>\n            </div>\n          </Box>\n        </Grid>\n\n\n        <Grid item md={4} sm={6} xs={12} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box style={{backgroundColor: \"rgba(0, 0, 0, 0)\"}}>\n            <CubeSim\n              width={250}\n              height={250}\n              cube={facelet}\n              colorScheme={state.colorScheme.getColorsForOri(state.cube.ori)}\n              hintDistance={ (state.mode === \"4c\" || state.mode === \"eopair\") ? 1.1 : 7 }\n              bgColor={simBackground}\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            />\n          </Box>\n        </Grid>\n      </Grid>\n      </Paper>\n\n      <Paper className={classes.paper} elevation={2}>\n\n      <Grid container spacing={0}>\n        <Grid item xs={5} sm={4} md={3}>\n          <Button onFocus={(evt) => evt.target.blur() } className={classes.button} size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleSpace}>\n              {spaceButtonText}\n          </Button>\n        </Grid>\n\n      </Grid>\n\n      </Paper>\n\n      <Box height={20}/>\n      <Divider/>\n      <Box height={20}/>\n\n      <ConfigPanelGroup {...{state, dispatch} } />\n\n      {helperText ?\n      <Fragment>\n        <Box height={20}/>\n          <Divider/>\n        <Box height={15}/>\n        <Box>\n        <FormControl component=\"fieldset\" className={classes.prompt}>\n          <FormLabel component=\"legend\">\n            <pre style={{ fontFamily: 'inherit' }}>\n              {helperText}\n            </pre>\n          </FormLabel>\n          </FormControl>\n        </Box>\n      </Fragment> : null }\n    </Box>\n    );\n}\n\n\n\nfunction ConfigPanelGroup(props: {state: AppState, dispatch: React.Dispatch<Action> }) {\n  let { state, dispatch } = props\n  if (state.mode === \"ss\") {\n    let select1 = (config: Config) => { return config.ssSelector }\n    let select2 = (config: Config) => { return config.ssPairOnlySelector }\n    let select3 = (config: Config) => { return config.solutionNumSelector }\n    let select4 = (config: Config) => { return config.ssPosSelector }\n\n    let DRManip = [\n      // names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n      // \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n      { name: \"Toggle Select All\", enableIdx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] },\n      { name: \"Toggle All Oriented\", enableIdx: [0, 2, 4, 6, 8, 10, 12, 14, 16] },\n    ]\n    return (\n      <Fragment>\n\n      <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n      <MultiSelect {...{state, dispatch, select: select4, options: {manipulators: DRManip} }}> </MultiSelect>\n      <ColorPanel {...{state, dispatch}} />\n\n      </Fragment>\n    )\n  } else if (state.mode === \"fbdr\") {\n    let select1 = (config: Config) => { return config.fbdrSelector }\n    let select2 = (config: Config) => { return config.fbOnlySelector }\n    let select3 = (config: Config) => { return config.fbPairSolvedSelector }\n    let select4 = (config: Config) => { return config.fbdrScrambleSelector }\n    let select5 = (config: Config) => { return config.solutionNumSelector }\n\n    let LPEdgeManip = [\n      { name: \"Toggle Select All\", enableIdx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17] },\n    ]\n    let pos1 = (config: Config) => { return config.fbdrPosSelector1 }\n    let pos3 = (config: Config) => { return config.fbdrPosSelector3 }\n\n    return (\n      <Fragment>\n      <SingleSelect {...{state, dispatch, select: select2}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select1}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select3}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select4}}> </SingleSelect>\n      <SingleSelect {...{state, dispatch, select: select5}}> </SingleSelect>\n      <MultiSelect {...{state, dispatch, select: pos1, options: {manipulators: LPEdgeManip} }}> </MultiSelect>\n      <MultiSelect {...{state, dispatch, select: pos3, options: {manipulators: LPEdgeManip} }}> </MultiSelect>\n      <ColorPanel {...{state, dispatch}} />\n\n      </Fragment>\n    )\n  } else if (state.mode === \"fb\") {\n    let select1 = (config: Config) => { return config.fbPieceSolvedSelector }\n    let select2 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <ColorPanel {...{state, dispatch}} />\n\n\n      </Fragment>\n    )\n   } else if (state.mode === \"fs\") {\n    let select1 = (config: Config) => { return config.fsSelector }\n    let select2 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <ColorPanel {...{state, dispatch}} />\n\n\n      </Fragment>\n    )\n   }else if (state.mode === \"4c\"){\n    let select1 = (config: Config) => { return config.lseStageSelector }\n    let select2 = (config: Config) => { return config.lseMCSelector }\n    let select3 = (config: Config) => { return config.lseBarSelector }\n    let select4 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <SingleSelect {...{ state, dispatch, select: select1 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n   } else if (state.mode === \"eopair\"){\n    let select1 = (config: Config) => { return config.lseEOSelector }\n    let select2 = (config: Config) => { return config.lseEOLRMCSelector }\n    let select3 = (config: Config) => { return config.lseBarbieSelector }\n    let select4 = (config: Config) => { return config.lseEOLRScrambleSelector }\n    let select5 = (config: Config) => { return config.solutionNumSelector }\n\n    return (\n      <Fragment>\n        <MultiSelect {...{ state, dispatch, select: select1, options: {noDialog: true}} }> </MultiSelect>\n        <SingleSelect {...{ state, dispatch, select: select2 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select3 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select4 }}> </SingleSelect>\n        <SingleSelect {...{ state, dispatch, select: select5 }}> </SingleSelect>\n        <ColorPanel {...{state, dispatch}} />\n      </Fragment>\n    )\n   }\n   else return <Fragment/>\n}\n\n\n\nexport default BlockTrainerView\n\n\n","import React, { Dispatch } from 'react'\n\nimport { makeStyles } from '@material-ui/core';\nimport { GridList, GridListTile} from '@material-ui/core';\n\nimport { AlgDesc } from \"../lib/Algs\";\nimport { AppState, Action } from '../Types';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n      },\n    container: {\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n      },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      gridList: {\n        width: 600,\n        height: 450,\n      },\n}))\n\ntype VisualCubeConfig = {\n    alg: string;\n    stage: string;\n    sch: string; //yrbwog\n}\nfunction VisualCube(props: VisualCubeConfig) {\n  let { alg, stage, sch } = props\n  const template =\n  `http://localhost:8000/visualcube.php?fmt=svg&r=y30x-24&size=150&co=40&fo=100&cc=ccc`\n    + `&stage=${stage}&sch=${sch}&case=${alg}`\n  return <img src={template} alt=\"\"/>\n}\n\nfunction PanoramaTable(props: {algs: AlgDesc[]}){\n    let classes = useStyles()\n    let { algs } = props\n    return <GridList cellHeight={160} className={classes.gridList} cols={3}>\n            {algs.map((alg) => (\n                <GridListTile key={alg.id} cols={1}>\n                    <VisualCube alg={alg.algs[0]} stage=\"f2b\" sch=\"yrbwog\"/>\n                </GridListTile>\n            ))}\n        </GridList>\n}\n\nexport default function PanoramaView(props: { state: AppState, dispatch: Dispatch<Action> }) {\n    let classes = useStyles()\n    let algs : AlgDesc[] = [\n        \"RUR\", \"RU'R'\"\n    ].map( str => ({\n        id: str,\n        algs: [str],\n        kind: \"sb\"\n    }))\n\n    return <div className={classes.root}>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n        <div>\n        <PanoramaTable algs={algs}/>\n        </div>\n    </div>\n}","import { CubieCube, Move } from './CubeLib';\nimport { cartesianProduct } from './Math';\n\nexport type PrunerConfig = {\n    size: number,\n    encode: (cube : CubieCube) => number,\n    solved_states: CubieCube[],\n    max_depth: number,\n    moveset: Move[]\n}\n\nexport type PrunerT = {\n    init: () => void,\n    query: (c : CubieCube) => number,\n    equal: (c1 : CubieCube, c2: CubieCube) => boolean,\n    encode: (c : CubieCube) => number\n}\n\nenum PrunerPiece {\n    S, O, I, X\n}; // Solved, Oriented, Ignore, Exclude \nconst { S, I } = PrunerPiece\n\nexport type PrunerDef = {\n    corner: PrunerPiece[],\n    edge:   PrunerPiece[],\n    center: PrunerPiece[],\n    solved_states: string[],\n    moveset: string[],\n    max_depth: number\n}\n\nexport function Pruner(config: PrunerConfig) : PrunerT {\n    let dist: Uint8Array;\n    let { size, encode, solved_states, max_depth, moveset} = config\n    let initialized = false\n    function init() {\n        if (initialized) return\n        initialized = true\n        dist = new Uint8Array(size).fill(255)\n        for (let state of solved_states) {\n            dist[encode(state)] = 0\n        }\n        let frontier = [...solved_states]\n        let total_expanded = frontier.length\n        for (let i = 0; i < max_depth; i++) {\n            console.log(\"pruner: expanding depth \", i)\n            let new_frontier = []\n            for (let state of frontier) {\n                for (let move of moveset) {\n                    let newState = state.apply(move) // clone\n                    let idx = encode(newState)\n                    if (dist[idx] === 255) {\n                        dist[idx] = i + 1;\n                        new_frontier.push(newState)\n                    }\n                }\n            }\n            frontier = new_frontier\n            total_expanded += frontier.length\n        }\n        console.log(\"Initialization complete. size = \", total_expanded)\n    }\n    function query(cube: CubieCube) {\n        let d = dist[encode(cube)]\n        if (d === 255) return max_depth + 1;\n        return d\n    }\n    function equal(cube1: CubieCube, cube2: CubieCube) {\n        return encode(cube1) === encode(cube2)\n    }\n    return  {\n        init,\n        query,\n        equal,\n        encode\n    }\n}\n\n\n\nlet prunerFactory = function(def: PrunerDef): PrunerConfig {\n    // edge\n    if (def.corner.length !== 8 || def.edge.length !== 12 || def.center.length !== 6) {\n        throw new Error(\"Invalid pruner def\");\n    }\n    const {S, O, I, X} = PrunerPiece\n    const def_to_idx = (d : PrunerPiece[], count_all?: boolean) => {\n        let curr_idx = 0, idx_arr = []\n        for (let i = 0; i < d.length; i++) {\n            if (d[i] === S || (count_all && (d[i] === O || d[i] === I))) {\n                idx_arr.push(curr_idx++);\n            } else idx_arr.push(-1);\n        }\n        return idx_arr;\n    }\n    let eosize = def.edge.filter(x => x === S || x === O).length\n    let epsize = def.edge.filter(x => x === S).length\n    let eisize = def.edge.filter(x => x !== X).length\n    let esize = Math.pow(2, eosize) * Math.pow(eisize, epsize)\n    let ep_idx = def_to_idx(def.edge, false);\n    let e_idx = def_to_idx(def.edge, true);\n\n    let cosize = def.corner.filter(x => x === S || x === O).length\n    let cpsize = def.corner.filter(x => x === S).length\n    let cisize = def.edge.filter(x => x !== X).length\n    let csize = Math.pow(2, cosize) * Math.pow(cisize, cpsize)\n    let cp_idx = def_to_idx(def.corner, false);\n    let c_idx = def_to_idx(def.corner, true);\n\n    let tosize = def.center.filter(x => x === O).length\n    let tpsize = def.center.filter(x => x === S).length\n    let tisize = def.edge.filter(x => x !== X).length\n    let tsize = Math.pow(2, tosize) * Math.pow(tisize, tpsize)\n    let tp_idx = def_to_idx(def.center, false);\n\n    let size = esize * csize * tsize;\n\n    function encode(cube: CubieCube) {\n        let eo = 0, ep = 0, co = 0, cp = 0, to = 0, tp = 0, e, c, t\n        for (let i = 0; i < 12; i++) {\n            switch (def.edge[cube.ep[i]]) {\n                case S:\n                    eo = eo * 2 + cube.eo[i];\n                    ep = ep + Math.pow(eisize, ep_idx[cube.ep[i]]) * e_idx[i];\n                    break;\n                case O:\n                    eo = eo * 2 + cube.eo[i];\n                    break;\n            }\n        }\n        e = ep * Math.pow(2, eosize) + eo\n        for (let i = 0; i < 8; i++) {\n            switch (def.corner[cube.cp[i]]) {\n                case S:\n                    co = co * 3 + cube.co[i];\n                    cp = cp + Math.pow(cisize, cp_idx[cube.cp[i]]) * c_idx[i];\n                    break;\n                case O:\n                    co = co * 3 + cube.co[i];\n                    break;\n            }\n        }\n        c = cp * Math.pow(3, cosize) + co\n        for (let i = 0; i < 6; i++) {\n            switch (def.center[cube.tp[i]]) {\n                case S:\n                    tp = Math.pow(tisize, tp_idx[cube.tp[i]]) + i;\n                    break;\n                case O:\n                    to = to * 3 + (cube.tp[i] / 2) | 0;\n                    break;\n            }\n        }\n        t = tp * Math.pow(3, tosize) + to\n        return e * csize * tsize + c * tsize + t\n    }\n\n    const solved_states = def.solved_states.map( m => new CubieCube().apply(m))\n    const moveset : Move[] = def.moveset.map(s => Move.all[s])\n    const max_depth = def.max_depth\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\n\n\nlet fbdrPrunerConfig : PrunerConfig = function() {\n    const esize = Math.pow(24, 4)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        if (cube.cp[i] === 4) {\n          c1 = i * 3 + cube.co[i]\n        } else if (cube.cp[i] === 5) {\n          c2 = i * 3 + cube.co[i];\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0, e4 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n              case 7 : e4 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24 * 24) + e2 * (24 * 24) + e3 * 24 + e4\n      return enc_c + 24 * 24 * enc_e\n    }\n\n    const moves = [[]]//, Move.parse(\"L R'\"), Move.parse(\"L' R\"), Move.parse(\"L2 R2\")] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move) )\n\n    const max_depth = 4\n    const moveset : Move[] = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\nlet htm_rwm = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"]\nlet rrwmu = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n    \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\"]\n\nlet fbPrunerConfig = prunerFactory({\n    corner: [I,I,I,I,S,S,I,I],\n    edge:   [I,I,I,I,I,S,I,I,S,S,I,I],\n    center: [I,I,I,I,S,I],\n    solved_states: [\"id\"],\n    moveset: htm_rwm,\n    max_depth: 5\n});\n\nlet fbPrunerConfig_old : PrunerConfig = function() {\n    const esize = Math.pow(24, 3)\n    const csize = Math.pow(24, 2)\n    const size = esize * csize * 6\n\n    function encode(cube:CubieCube) {\n      let c1 = 0, c2 = 0\n      for (let i = 0; i < 8; i++) {\n        if (cube.cp[i] === 4) {\n          c1 = i * 3 + cube.co[i]\n        } else if (cube.cp[i] === 5) {\n          c2 = i * 3 + cube.co[i];\n        }\n      }\n      const enc_c = c1 * 24 + c2\n      let e1 = 0, e2 = 0, e3 = 0\n      for (let i = 0; i < 12; i++) {\n          switch (cube.ep[i]) {\n              case 5 : e1 = i * 2 + cube.eo[i]; break;\n              case 8 : e2 = i * 2 + cube.eo[i]; break;\n              case 9 : e3 = i * 2 + cube.eo[i]; break;\n          }\n      }\n      const enc_e = e1 * (24 * 24 ) + e2 * (24 ) + e3\n      const enc_ce = enc_c + 24 * 24 * enc_e\n\n      let t1 = 0\n      for (let i = 0; i < 5; i++) {\n          if (cube.tp[i] === 4) { t1 = i }\n      }\n      const enc = enc_ce * 6 + t1\n      return enc\n    }\n\n    const moves = [\"id\"]\n    const solved_states = moves.map( move => new CubieCube().apply(move))\n\n    const max_depth = 4\n    const moveset : Move[] = [\"U\", \"U2\", \"U'\", \"F\", \"F2\", \"F'\", \"R\", \"R2\", \"R'\",\n    \"r\", \"r2\", \"r'\", \"D\", \"D2\", \"D'\", \"M\", \"M'\", \"M2\", \"B\", \"B'\", \"B2\"] /* \"E\", \"E'\", \"E2\", \"S\", \"S'\", \"S2\" ]*/\n    .map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\n\n\n\nlet ssPrunerConfig = (is_front: boolean) => {\n    const size = Math.pow(24, 3)\n    const c1 = is_front ? 7 : 6;\n    const e1 = is_front ? 11 : 10\n    const e2 = 7\n    function encode(cube:CubieCube) {\n      let v = [0 ,0, 0]\n      for (let i = 0; i < 8; i++) {\n        if ( cube.cp[i] === c1) v[0] = i * 3 + cube.co[i]\n      }\n      for (let i = 0; i < 12; i++) {\n          if (cube.ep[i] === e1) v[1] = i * 2 + cube.eo[i];\n          else if (cube.ep[i] === e2) v[2] = i * 2 + cube.eo[i]\n      }\n      return v[0] + v[1] * 24 + v[2] * 24 * 24\n    }\n\n    const moves = [[]] \n    const solved_states = moves.map( (move : Move[]) => new CubieCube().apply(move))\n\n    const max_depth = 8\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"R\", \"R'\", \"R2\",\n        \"r\", \"r'\", \"r2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\nlet sbPrunerConfig = prunerFactory({\n    corner: [I,I,I,I,I,I,S,S],\n    edge:   [I,I,I,I,I,I,I,S,I,I,S,S],\n    center: [I,I,I,I,I,I],\n    solved_states: [\"id\"],\n    moveset: rrwmu,\n    max_depth: 6\n});\n\n\nlet fsPrunerConfig = (is_front: boolean) => prunerFactory({\n        corner: is_front ? [I,I,I,I,S,I,I,I] : [I,I,I,I,I,S,I,I] ,\n        edge:   is_front ? [I,I,I,I,I,S,I,I,S,I,I,I] : [I,I,I,I,I,S,I,I,I,S,I,I] ,\n        center: [I,I,I,I,S,I],\n        solved_states: [\"id\"],\n        moveset: htm_rwm,\n        max_depth: 4\n    });\n\n\nlet lsePrunerConfig : PrunerConfig = function() {\n    const size = Math.pow(12, 6) * 4 * 4 // TODO: optimize this plz\n    function encode(cube:CubieCube) {\n      let edge_encode = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n      let enc = [0, 0, 0, 0, 0, 0]\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx > -1) {\n            enc[idx] = edge_encode[i] * 2 + cube.eo[i];\n        }\n      }\n      let edge_enc = 0;\n      for (let i = 0; i < 6; i++) {\n        edge_enc = edge_enc * 12 + enc[i];\n      }\n      return edge_enc * 4 * 4 + cube.tp[0] * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves = [Move.all[\"id\"]]\n    const solved_states = moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 7\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}()\n\nfunction eolrPrunerConfig(center_flag: number, barbie_mode?: string): PrunerConfig {\n    const size = 6 * 6 * Math.pow(2, 6) * 4 * 2 // TODO: optimize this plz\n\n    const edge_encode = [0, 1, 0, 2, 0, -1, 0, -1, -1, -1, -1, -1];\n    const edge_idx = [0, 1, 2, 3, 4, -1, 5, -1, -1, -1, -1, -1];\n    function encode(cube:CubieCube) {\n      let eo = 0, ep = 0\n      for (let i = 0; i < 12; i++) {\n        let idx = edge_encode[cube.ep[i]];\n        if (idx >= 0) {\n            eo = eo * 2 + cube.eo[i]\n        }\n        if (idx > 0) {\n            ep += Math.pow(6, idx - 1) * edge_idx[i]\n        }\n      }\n      // make no distinction between centers M2 apart\n      return (eo * 36 + ep) * 4 * 2 + ~~(cube.tp[0] / 2) * 4 + cube.cp[0]// center[0] and cp[0] must be (0-3)\n    }\n\n    const moves_ac = cartesianProduct( [\"U'\", \"U\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"] ).map(x => x.join(\" \"))\n    const moves_mc = cartesianProduct( [\"M'\"], [\"U\", \"U'\"], [\"M2\"], [\"\", \"U\", \"U'\", \"U2\"]).map(x => x.join(\" \"))\n    let moves: string[] = []\n    if (center_flag & 0x01) moves = moves.concat(moves_ac)\n    if (center_flag & 0x10) moves = moves.concat(moves_mc)\n\n    const barb_moves_ac = [\"U\", \"U'\"]\n    const barb_moves_mc = [\"M U\", \"M U'\"]\n    let barb_moves: string[] = []\n    if (center_flag & 0x01) barb_moves = barb_moves.concat(barb_moves_ac)\n    if (center_flag & 0x10) barb_moves = barb_moves.concat(barb_moves_mc)\n\n    const pre_moves = barbie_mode === \"barbie\" ? barb_moves :\n        (barbie_mode === \"ab4c\" ? [\"id\"] : moves)\n\n    const solved_states = pre_moves.map( m => new CubieCube().apply(m))\n\n    const max_depth = 20\n    const moveset : Move[] = [\"U\", \"U'\", \"U2\", \"M'\", \"M\", \"M2\"].map(s => Move.all[s])\n\n    return {\n        size,\n        encode,\n        solved_states,\n        max_depth,\n        moveset\n    }\n}\n\nexport { fbdrPrunerConfig, fsPrunerConfig, sbPrunerConfig, ssPrunerConfig, fbPrunerConfig, lsePrunerConfig, eolrPrunerConfig,\n    prunerFactory, fbPrunerConfig_old}","import {initialize, solve as min2phaseSolve, Min2PhaseCube} from \"./min2phase.js\"\nimport { CubieCube } from \"../CubeLib\";\n\nexport {initialize}\n\nfunction toMin2Phase(state: CubieCube): Min2PhaseCube {\n  // Note: this is its own inverse.\n  // const conjugate = {\n  //   EDGE: { permutation: [ 1, 0, 3, 2, 5, 4, 7, 6, 8, 9, 11, 10 ],\n  //           orientation: [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CORNER: { permutation: [ 0, 3, 2, 1, 4, 5, 6, 7 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0, 0, 0 ] },\n  //   CENTER: { permutation: [ 0, 1, 2, 3, 4, 5 ],\n  //             orientation: [ 0, 0, 0, 0, 0, 0 ] }\n  // };\n  // const pseudo = Combine(def, Combine(def, conjugate, Invert(def, state)), conjugate);\n\n  return {\n    cp: state.cp,\n    co: state.co,\n    ep: state.ep,\n    eo: state.eo\n  }\n}\n\nexport function solve(state: CubieCube): string {\n  return min2phaseSolve(toMin2Phase(state));\n}\n","import { CubieCube, Move, MoveSeq } from './CubeLib';\nimport { arrayEqual } from './Math';\n\nimport { Pruner, PrunerT, fbdrPrunerConfig, fsPrunerConfig, sbPrunerConfig, ssPrunerConfig, fbPrunerConfig, lsePrunerConfig, PrunerConfig, eolrPrunerConfig, PrunerDef, fbPrunerConfig_old } from './Pruner';\n\nimport { prunerFactory } from './Pruner';\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\n\n\ntype SolverConfig = {\n    is_solved: (cube : CubieCube) => boolean,\n    moveset: Move[],\n    pruners: PrunerT[],\n}\n\ntype Accumulator = {\n    solutions: MoveSeq[],\n    capacity: number\n}\n\nexport type SolverT = {\n    solve: (cube : CubieCube, l : number, r : number, c : number) => MoveSeq[],\n    is_solved: (cube : CubieCube) => boolean,\n    getPruner: () => PrunerT[]\n}\n\n\nfunction Solver(config: SolverConfig) : SolverT{\n    const MAX_STATE_COUNT = 1000000\n    let { moveset, is_solved, pruners } = config\n    let state_count = 0, prune_count = 0;\n    let accum : Accumulator\n    let max_depth : number\n    let min_depth : number\n\n    enum SState {\n        CONTINUE,\n        STOP\n    };\n\n    function solve_depth(cube: CubieCube, min_depth_: number, max_depth_: number, accum_: Accumulator) {\n        accum = accum_\n        max_depth = max_depth_\n        min_depth = min_depth_\n        state_count = 0\n        prune_count = 0\n        search(cube, 0, [])\n        return accum\n    }\n\n    let Moveable = Object.create({})\n    function prepareNextMoveable() {\n        function getAvailableMove(name : string) {\n            switch (name[0]) {\n                case \"U\": return moveset.filter(k => k.name[0] !== \"U\");\n                case \"D\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\");\n                case \"R\": {\n                    let base = moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"r\");\n                    if (name === \"R\") return base.filter(k => k.name !== \"M'\")\n                    if (name === \"R'\") return base.filter(k => k.name !== \"M\")\n                    if (name === \"R2\") return base.filter(k => k.name !== \"M2\")\n                    return base\n                }\n                case \"L\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"r\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"M\": return moveset.filter(k => k.name[0] !== \"R\" && k.name[0] !== \"M\" && k.name[0] !== \"L\" && k.name[0] !== \"r\");\n                case \"F\": return moveset.filter(k => k.name[0] !== \"F\");\n                case \"B\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\");\n\n                case \"E\": return moveset.filter(k => k.name[0] !== \"U\" && k.name[0] !== \"D\" && k.name[0] !== \"E\");\n                case \"S\": return moveset.filter(k => k.name[0] !== \"F\" && k.name[0] !== \"B\" && k.name[0] !== \"S\");\n            }\n        }\n        for (let move of moveset) {\n            Moveable[move.name] = getAvailableMove(move.name)\n        }\n    }\n    prepareNextMoveable()\n\n    function expand(cube: CubieCube, depth: number, solution: Move[]) : SState{\n        const availableMoves = solution.length > 0 ? Moveable[solution[solution.length - 1].name] : moveset\n        const seen_encodings = new Set()\n        seen_encodings.add(pruners[0].encode(cube))\n        for (let move of availableMoves) {\n            let new_cube = cube.apply(move)\n            let enc = pruners[0].encode(new_cube)\n            let redundant = seen_encodings.has(enc)\n            if (!redundant) {\n                seen_encodings.add(enc)\n                solution.push(move);\n                let st : SState = search(new_cube, depth + 1, solution);\n                solution.pop();\n                if (st === SState.STOP) {\n                    return SState.STOP\n                }\n            }\n        }\n        return SState.CONTINUE\n    }\n\n    function try_push(solution: Move[], depth: number) {\n        if (depth < min_depth) return SState.CONTINUE\n        if (accum.solutions.length < accum.capacity) {\n            let flag = true\n            for (let sol of accum.solutions) {\n                if (arrayEqual(sol.moves, solution)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                accum.solutions.push(new MoveSeq([...solution]))\n            }\n        }\n\n        if (accum.solutions.length === accum.capacity) {\n            return SState.STOP\n        } else {\n            return SState.CONTINUE\n        }\n    }\n\n    function search(cube: CubieCube, depth: number, solution: Move[]) : SState {\n        state_count++;\n        if (state_count > MAX_STATE_COUNT) {\n            return SState.STOP\n        }\n        if (is_solved(cube)) {\n            return try_push(solution, depth)\n        } else {\n            if (depth >= max_depth) return SState.CONTINUE;\n            let d = pruners[0].query(cube)\n            if (d + depth > max_depth) {\n                prune_count++;\n                return SState.CONTINUE\n            } else {\n                return expand(cube, depth, solution)\n            }\n        }\n    }\n\n    function solve(cube: CubieCube, depth_l: number, depth_r: number, capacity: number) {\n        let accum : Accumulator = {\n            solutions: [],\n            capacity\n        }\n        for (let i = depth_l; i <= depth_r; i++) {\n            accum = solve_depth(cube, depth_l, i, accum)\n            if (accum.solutions.length === accum.capacity) {\n                break;\n            }\n        }\n        console.log(`Number of states = ${state_count}, pruned = ${prune_count}`);\n        return accum.solutions\n    }\n\n    function getPruner() {\n        return pruners\n    }\n    return { solve, is_solved, getPruner }\n};\n\nfunction solverFactory(def: PrunerDef | PrunerConfig) {\n    let prunerConfig: PrunerConfig\n    if (\"corner\" in def) {\n        prunerConfig = prunerFactory(def);\n    } else {\n        prunerConfig = def\n    }\n    let pruner = Pruner(prunerConfig)\n    pruner.init()\n    //let solvedEncodings = prunerConfig.solved_states.map(s => prunerConfig.encode(s))\n    let solved_states = new Set(prunerConfig.solved_states.map(x => pruner.query(x)))\n    let is_solved = (prunerConfig.solved_states.length === 0) ?\n        (cube: CubieCube) => pruner.query(cube) === 0 :\n        (cube: CubieCube) => solved_states.has(pruner.query(cube));\n\n    let config = {\n        is_solved,\n        moveset: prunerConfig.moveset,\n        pruners: [pruner],\n    }\n\n    let solver = Solver(config)\n    return solver\n}\n\nlet FbSolver = (useOld?: boolean) => solverFactory(useOld ? fbPrunerConfig_old : fbPrunerConfig)\n\nlet FbdrSolver = () => solverFactory(fbdrPrunerConfig)\n\nlet SsSolver = (is_front: boolean) => solverFactory(ssPrunerConfig(is_front))\n\nlet SbSolver = () => solverFactory(sbPrunerConfig)\n\nlet FsSolver = (is_front: boolean) => solverFactory(fsPrunerConfig(is_front))\n\nlet LSESolver = () => solverFactory(lsePrunerConfig)\n\nlet EOLRSolver = (center_flag: number, barbie_mode?: string) =>\n    solverFactory(eolrPrunerConfig(center_flag, barbie_mode))\n\nlet Min2PhaseSolver : () => SolverT = function() {\n    // polyfill for min2phase\n\n    min2phase_init();\n    function solve(cube : CubieCube, l : number, r : number, c : number) {\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp), \"Cube center is not solved: \" + cube.tp)\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        let solution = min2phase_solve(transformed_cube);\n        return [ new MoveSeq(solution).inv() ]\n    }\n    function is_solved(cube: CubieCube) {\n        return true\n    }\n    function getPruner() {\n        return []\n    }\n    return {\n        solve,\n        is_solved,\n        getPruner\n    }\n}\n\n\n\nexport { FbdrSolver, FbSolver, SbSolver, FsSolver, SsSolver, Min2PhaseSolver, LSESolver, EOLRSolver }","import { FbdrSolver, SolverT, FsSolver, SsSolver, SbSolver, FbSolver, Min2PhaseSolver, LSESolver, EOLRSolver} from './Solver';\n\nlet all_solvers = [\n\"fbdr\",\"fb\", \"fs-front\", \"fs-back\", \"ss-front\", \"ss-back\", \"min2phase\",\n\"lse\", \"eolrac\", \"eolrmc\", \"eolr\", \"eolrac-b\", \"eolrmc-b\", \"eolr-b\" ]\n\nlet CachedSolver = function() {\n    let cache : Map<string, SolverT> = new Map()\n    function get(s: string) {\n        if (!cache.has(s)) {\n            switch (s) {\n                case \"fbdr\": cache.set(s, FbdrSolver()); break\n                case \"fb\": cache.set(s, FbSolver()); break\n                case \"fs-front\": cache.set(s, FsSolver(true)); break\n                case \"fs-back\": cache.set(s, FsSolver(false)); break\n                case \"ss-front\": cache.set(s, SsSolver(true)); break\n                case \"ss-back\": cache.set(s, SsSolver(false)); break\n                case \"sb\": cache.set(s, SbSolver()); break\n\n                case \"min2phase\": cache.set(s, Min2PhaseSolver()); break\n                case \"lse\": cache.set(s, LSESolver()); break\n                case \"lse-ab4c\": cache.set(s, EOLRSolver(0x01, \"ab4c\")); break\n                case \"eolrac\": cache.set(s, EOLRSolver(0x01)); break\n                case \"eolrmc\": cache.set(s, EOLRSolver(0x10)); break\n                case \"eolr\": cache.set(s, EOLRSolver(0x11)); break\n                case \"eolrac-b\": cache.set(s, EOLRSolver(0x01, \"barbie\")); break\n                case \"eolrmc-b\": cache.set(s, EOLRSolver(0x10, \"barbie\")); break\n                case \"eolr-b\": cache.set(s, EOLRSolver(0x11, \"barbie\")); break\n            }\n        }\n        return cache.get(s) as SolverT\n    }\n    return {get}\n}()\n\nexport {CachedSolver, all_solvers}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  Button, IconButton, DialogContent, TextField, DialogContentText\n} from '@material-ui/core';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { Table, Paper, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\n\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport AddIcon from '@material-ui/icons/Add';\nimport { AppState, Action, FavCase } from '../Types';\nimport { all_solvers } from '../lib/CachedSolver';\n\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    width: '100%',\n    minWidth: 200,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport function warnDialog(props: { confirm: () => void} ) {\n\n}\n\nfunction parseAddString(state: AppState, s : string) : [ FavCase[], boolean] {\n  const res : FavCase[] = []\n\n  const allSolvers = new Set(all_solvers);\n  for (const line of s.split('\\n')) {\n    let cols = line.split(',')\n    if (cols.length !== 2) continue\n    let solver = cols[0].trim().split(\"|\")\n    let setup = cols[1].trim()\n\n    if (solver.every(x => allSolvers.has(x))) {\n      let case_ : FavCase = {\n        mode: state.mode,\n        solver,\n        setup\n      }\n      res.push(case_)\n    }\n  }\n  if (res.length > 0) return [res, true]\n  else return [ [], false]\n}\n\nexport default function FavListView(props: { state: AppState, dispatch: React.Dispatch<Action> }) {\n  const {state, dispatch} = props\n  const classes = useStyles();\n  const favList = state.favList.filter(c => c.mode === state.mode)\n\n  const play = (i: number) => {\n    dispatch({ type: \"favList\", content: [ favList[i] ], action: \"replay\" })\n  }\n  const remove = () => {\n    if (dialogID >= 0 && dialogID < favList.length)\n    dispatch({ type: \"favList\", content: [ favList[dialogID] ], action: \"remove\" })\n  }\n  const [ dialogID, setDialogID ] = React.useState(-1)\n\n  const handleClose = () => setDialogID(-1)\n  const handleRemove = () => { remove(); setDialogID(-1); }\n  const dialogDelete = (<Dialog open={dialogID >= 0} onClose={handleClose} >\n    <DialogTitle id=\"alert-dialog-title\">{\"Delete this alg from favorites?\"}</DialogTitle>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        No\n    </Button>\n      <Button onClick={handleRemove} color=\"primary\" autoFocus>\n        Yes\n    </Button>\n    </DialogActions>\n  </Dialog>)\n\n  const [ addDialogOpen, setAddDialogOpen ] = React.useState(false)\n  const [ addString, setAddString ] = React.useState(\"\")\n  const handleAdd = () => setAddDialogOpen(true)\n  const handleAddClose = () => setAddDialogOpen(false)\n  const handleAddSuccess = () => {\n    let [res, status] = parseAddString(state, addString)\n    if (status) {\n      dispatch({ type: \"favList\", content: res, action: \"add\" })\n    }\n    handleAddClose()\n  }\n  const handleTextChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\n    setAddString(event.target.value)\n  }\n  const dialogAdd = <Dialog open={addDialogOpen} onClose={handleAddClose} aria-labelledby=\"form-dialog-title\">\n    <DialogTitle id=\"form-dialog-title\">Add New Cases</DialogTitle>\n    <DialogContent>\n      <DialogContentText>\n        Input your cases here. (one per line) <br></br>\n        Format: [category], [setup algorithm].\n        category := fb | fbdr | ss-front | ss-back\n      </DialogContentText>\n      <TextField\n        autoFocus\n        multiline\n        margin=\"dense\"\n        id=\"name\"\n        fullWidth\n        onChange={handleTextChange}\n        onKeyDown={ (event) => { event.stopPropagation() } }\n      />\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleAddClose} color=\"primary\">\n        Cancel\n    </Button>\n      <Button onClick={handleAddSuccess} color=\"primary\">\n        Add All\n    </Button>\n    </DialogActions>\n  </Dialog>\n\n\n  return (\n    <div>\n    {dialogDelete}\n    {dialogAdd}\n    <Paper>\n      <Table className={classes.table} size=\"small\" >\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\"> Scramble </TableCell>\n            <TableCell align=\"center\" rowSpan={1}>\n              <IconButton   onClick={handleAdd} component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <AddIcon />\n              </IconButton>\n              \n            {/* <IconButton component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                <FileCopyIcon />\n              </IconButton> */}\n             </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {favList.map((value, i) => {\n            //const labelId = `favlist-label-${i}`;\n            return (\n              <TableRow key={i}>\n                {/* <TableCell align=\"center\" >\n                  {/* padding=checkbox <Checkbox></Checkbox> */}\n\n                <TableCell align=\"center\">\n                { value.solver.join(\"|\") + \",\" + value.setup }\n                </TableCell>\n                <TableCell align=\"center\">\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => play(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <PlaylistPlayIcon />\n                  </IconButton>\n\n                  <IconButton onFocus={(e: { target: { blur: () => void; }; }) => e.target.blur() } onClick={() => setDialogID(i)}\n                  component=\"span\" edge=\"end\" size=\"small\" color=\"primary\">\n                    <DeleteOutlineIcon />\n                  </IconButton>\n\n                </TableCell>\n              </TableRow>\n            )\n          })}</TableBody>\n      </Table>\n    </Paper>\n    </div>\n  )\n}","import React from \"react\";\n\nimport { makeStyles } from '@material-ui/core';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { ENABLE_DEV } from '../settings';\nimport InfoIcon from '@material-ui/icons/Info';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles(theme => {\n    let is_bright = theme.palette.primary.main === '#556cd6';\n    return ({\n    page: {\n      backgroundColor: theme.palette.background.default\n    },\n    container: {\n      display: \"flex\"\n    },\n    icon: {\n      minWidth: 0\n    },\n    root: {\n      display: \"flex\"\n    },\n    bar: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.background.paper,\n      //borderRadius: \"5px\"\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"space-between\",\n    },\n    select: {\n      backgroundColor: is_bright ? \"#657ce9\" : \"#bfc4e2\",\n      color: theme.palette.background.paper,\n      paddingLeft: 12,\n      marginRight: 15,\n      marginLeft: 15,\n      fontWeight: 500,\n      fontSize: \"0.9rem\",\n      paddingTop: 8,\n      paddingBottom: 8,\n      borderRadius: 4,\n      //borderBottom: \"1px solid \" + theme.palette.background.default,\n    }\n})})\nconst description = [\n\"Solve Analysis (Beta)\", \"FB Last Pair (+DR)\", \"First Square\", \"First Block\", \"Second Square\", \"CMLL\", \"LSE 4c\", \"EOLR / EOLRb\"\n]\n\nfunction TopBarView(props: { value: number, onChange: (x: number) => void,\n    toggleFav: () => void, toggleBright: () => void, handleInfoOpen: () => void } )\n{\n    let classes = useStyles()\n    let { value, onChange, toggleFav, toggleBright, handleInfoOpen } = props\n    let value_str = description[value]\n    let handleChange = (event: React.ChangeEvent<{ value: unknown }>) =>  {\n        onChange(description.indexOf(event.target.value as string))\n        //\n    }\n    return <div>\n            <Box boxShadow={4} >\n        <Toolbar className={classes.bar} >\n        <Typography style={{fontSize: \"0.9rem\", fontFamily: \"Public Sans\", flexShrink: 10}} >\n            Roux Trainer\n        </Typography>\n        <FormControl style={{flexShrink: 1}}>\n            <Select\n                 value={value_str}\n                 className={classes.select}\n                 onChange={handleChange}\n                 onFocus={(e) => e.target.blur()}\n            >\n                { description.map( (s, i) => <MenuItem key={i} value={s}>{s}</MenuItem> )}\n            </Select>\n        </FormControl>\n        <Box style={{flexGrow: 10}}> </Box>\n        <IconButton onClick={toggleFav}>\n            <BookmarkIcon />\n        </IconButton>\n        <IconButton onClick={toggleBright}>\n            <Brightness6Icon/>\n        </IconButton>\n        <IconButton onClick={handleInfoOpen}>\n            <InfoIcon />\n        </IconButton>\n        </Toolbar>\n        </Box>\n    </div>\n}\n\nexport default TopBarView;","import { EventAvailableOutlined } from \"@material-ui/icons\";\nimport { setEmitFlags } from \"typescript\";\nimport { MoveSeq } from \"./CubeLib\";\nimport two_gram_meter from './two_gram_v1.json'\nexport abstract class Evaluator {\n    abstract evaluate(moves: MoveSeq) : number;\n    abstract name : string;\n}\nexport class SeqEvaluator extends Evaluator {\n    name = \"sequential\";\n    static moveCost_gen() {\n        let pairs: [string, number][] = [\n            [\"U\", 0.8], [\"U'\", 0.8], [\"U2\", 1.0],\n            [\"R\", 0.8], [\"R'\", 0.8], [\"R2\", 1.2],\n            [\"r\", 1], [\"r'\", 1], [\"r2\", 1.3],\n            [\"L\", 1], [\"L'\", 1], [\"L2\", 1.4],\n            [\"F\", 1.4], [\"F'\", 1.4], [\"F2\", 1.8],\n            [\"B\", 1.6], [\"B'\", 1.6], [\"B2\", 2.2],\n            [\"D\", 1.4], [\"D'\", 1.4], [\"D2\", 1.7],\n            [\"M\", 1.5], [\"M'\", 1.2], [\"M2\", 1.8],\n            [\"S\", 1.7], [\"S'\", 1.7], [\"S2\", 3.0],\n            [\"E\", 1.5], [\"E'\", 1.5], [\"E2\", 2.4],\n        ];\n        let costMap = new Map(pairs);\n        return costMap;\n    }\n    static moveCost = SeqEvaluator.moveCost_gen();\n\n    evaluate(moves: MoveSeq) {\n        let sum = 0;\n        for (let m of moves.moves) {\n            const value = (SeqEvaluator.moveCost.get(m.name)) || 1.4;\n            sum += value;\n        }\n        return sum;\n    }\n\n}\n\nexport class QTMEvaluator extends Evaluator {\n    name = \"qtm\";\n    evaluate(moves: MoveSeq) {\n        let sum = 0;\n        for (let m of moves.moves) {\n            sum += m.name[1] === \"2\" ? 2 : 1;\n        }\n        return sum;\n    }\n}\n\nexport class DefaultEvaluator extends Evaluator {\n    name = \"default\";\n    evaluate(moves: MoveSeq) {\n        return moves.moves.length;\n    }\n}\n\n\nexport class TwoGramEvaluator extends Evaluator {\n    name = \"two-gram\";\n    static meter = two_gram_meter as {[s: string]: string};\n    evaluate(moves_input: MoveSeq) {\n        let score = 0\n        let moves = [\"\", ...moves_input.moves.map(x => x.name), \"\"]\n        for (let i =0; i < moves.length - 1; i++) {\n            let two_gram = moves[i] + moves[i + 1]\n            let curr_score = Number.parseFloat(TwoGramEvaluator.meter[two_gram])\n            if (Number.isNaN(curr_score)) {\n                curr_score = 0.3;\n            }\n            score += curr_score;\n        }\n        return score\n    }\n}\n\n//ames: [\"sequential\", \"two-gram\", \"QTM\", \"default\"],\nexport function getEvaluator(s: string) {\n    switch (s) {\n        case \"sequential\": return new SeqEvaluator();\n        case \"two-gram\": return new TwoGramEvaluator();\n        case \"qtm\": return new QTMEvaluator();\n        case \"default\": \n        default :\n            return new DefaultEvaluator();\n    }\n} ","\nimport { CubeUtil, CubieCube, Mask, Move, MoveSeq } from './CubeLib';\nimport { CachedSolver } from '../lib/CachedSolver';\nimport { getEvaluator } from '../lib/Evaluator';\n\nexport type AnalyzerState = {\n    scramble: string,\n    post_scramble: string, // the part of solution leading up to the stage under analysis\n    full_solution: SolutionDesc[],\n    stage: string,\n    orientation: string,\n    pre_orientation: string,\n    num_solution: number,\n    show_mode: string //\"foreach\" | \"combined\"\n}\nexport let initialState : AnalyzerState = {\n    scramble: \"L2 D2 R2 B2 F' D2 U2 L2 B2 F L B' U2 F' D U B L D2 \",\n    post_scramble: \"\",\n    full_solution: [],\n    stage: \"fb\",\n    orientation: \"x2y\",\n    pre_orientation: \"\",\n    num_solution: 1,\n    show_mode: \"foreach\"\n}\n\nexport type SolverConfig = {\n    premoves?: string[],\n    num_solution: number,\n    upper_limit: number,\n    lower_limit?: number,\n    evaluator?: string\n  }\n  \nexport type SolutionDesc = {\n    solution: MoveSeq,\n    premove: string,\n    score: number,\n    orientation?: string,\n    stage: string\n}\n  \nfunction is_fb_solved(cube: CubieCube, oris: MoveSeq[]) {\n    for (let ori of oris) {\n        let cube1 = cube.changeBasis(ori).apply(ori.inv())\n        if (CubeUtil.is_solved(cube1, Mask.fb_mask)) return ori  \n    }\n    return null\n}\n\n\n\nexport function analyze_roux_solve(cube: CubieCube, solve: MoveSeq) {\n    //todo: break up half turns to detect cancellation in between stages\n    let oris = get_oris(\"cn\").map(m => new MoveSeq(m))\n    let pres = [\"\", \"x\", \"x'\", \"x2\"].map(m => new MoveSeq(m))\n    const defaultSolution = {\n        solution: [], premove: \"\", orientation: \"\", stage: \"\", score: 0\n    }\n    // figure out which fb gets solved first\n    let stages = [\"fb\", \"ss\", \"sp\", \"cmll\", \"lse\"]\n    let solution : SolutionDesc[] = [];\n    let current_moves : Move[] = []\n    let stage_idx = 0\n    let getMasksForStage = (s: string) => {\n        switch (s) {\n            case \"ss\": return [Mask.ss_front_mask, Mask.ss_back_mask]\n            case \"sp\": return [Mask.sb_mask]\n            case \"cmll\": return [Mask.cmll_mask]\n            case \"lse\": return [Mask.solved_mask]\n            default: return [Mask.solved_mask]\n        }\n    }\n\n    let moves = [ Move.all[\"id\"], ...solve.moves]\n    for (let move of moves) {\n        cube = cube.apply(move)\n        if (move.name !== \"id\") current_moves.push(move)\n\n        if (stage_idx === 0) {\n            let res = is_fb_solved(cube, oris)\n            if (res !== null) {\n                let orientation = res\n                solution.push({ ...defaultSolution,\n                    solution: new MoveSeq(current_moves),\n                    orientation: orientation.moves.join(\"\"),\n                    stage: \"fb\"\n                })\n                stage_idx++\n                current_moves = []\n                cube = cube.changeBasis(orientation).apply(orientation.inv())\n            }\n        }\n        else if (stage_idx !== 3) {\n            let stage = stages[stage_idx]\n            let masks = getMasksForStage(stage)\n            if (masks.some(mask => CubeUtil.is_solved(cube, mask))) {\n                solution.push({ ...defaultSolution, \n                    solution: new MoveSeq(current_moves),\n                    stage\n                })\n                stage_idx++\n                current_moves = []\n            }\n        } else {\n            if (CubeUtil.is_cmll_solved(cube)) {\n                solution.push({ ...defaultSolution, \n                    solution: new MoveSeq(current_moves),\n                    stage: \"cmll\"\n                })\n                stage_idx++\n                current_moves = []\n            }\n        }\n        if (stage_idx >= stages.length) break\n    }\n    if (current_moves.length > 0) {\n        solution.push({ ...defaultSolution, \n            solution: new MoveSeq(current_moves),\n            stage: \"unknown\"\n        })\n    }\n    return solution\n}\n\nfunction solve(solver_str: string, cube: CubieCube, config: SolverConfig) {\n    const solver = CachedSolver.get(solver_str)\n    let { premoves, num_solution, upper_limit } = config\n    let ev = getEvaluator(config.evaluator || \"sequential\")\n    let solver_num_solution = (num_solution < 10) ? 10 : num_solution\n    let solutions = (premoves || [\"\"]).map(pm => \n        solver.solve(cube.apply(pm), 0, upper_limit, solver_num_solution)\n            .map(x => ({premove: pm, solution: x, score: ev.evaluate(x)}))\n    ).flat()\n    return solutions.sort( (x, y) => x.score - y.score).slice(0, num_solution) \n}\n\nconst get_oris = (ori: string, preori?: string) => {\n    let oris : string[] = []\n    if (ori === \"x2y\") {\n        oris = (preori === \"\") ? [\"\", \"y\", \"y'\", \"y2\", \"x2\", \"x2y\", \"x2y'\", \"x2y2\"] :\n        (preori === \"x\") ? [\"x\", \"xy\", \"xy'\", \"xy2\", \"x'\", \"x'y\", \"x'y'\", \"x'y2\"] :\n        [\"z\", \"zy\", \"zy'\", \"zy2\", \"z'\", \"z'y\", \"z'y'\", \"z'y2\"]\n    \n    } else if (ori === \"cn\") {\n        oris = [\"\", \"y\", \"y'\", \"y2\", \"x2\", \"x2y\", \"x2y'\", \"x2y2\",\n                \"x\", \"xy\", \"xy'\", \"xy2\", \"x'\", \"x'y\", \"x'y'\", \"x'y2\",\n                \"z\", \"zy\", \"zy'\", \"zy2\", \"z'\", \"z'y\", \"z'y'\", \"z'y2\"]\n    }\n    return oris\n}\nfunction analyze_fb(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        premoves: [\"\", \"x\", \"x'\", \"x2\"],\n        num_solution: state.num_solution,\n        upper_limit: 9\n    }\n    let oris = get_oris(state.orientation, state.pre_orientation)\n\n    let solutions = oris.map(ori => solve(\"fb\", cube.changeBasis(new MoveSeq(ori)), config).map(sol => ({\n    ...sol, orientation: ori, stage: \"fb\"\n    })).sort( (x, y) => x.score - y.score)).flat()\n\n    return solutions\n}\n\nfunction analyze_ss(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 15\n    }\n    let solutions = [\"ss-front\", \"ss-back\"].map(name => solve(name, cube, config).map(sol => ({\n        ...sol, stage: name\n    })).sort( (x, y) => x.score - y.score)).flat()\n    return solutions\n}\n\nfunction analyze_sp(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 10\n    }\n    let solutions = solve(\"sb\", cube, config).map(sol => ({\n        ...sol, stage: \"sp\"\n    })).sort( (x, y) => x.score - y.score)\n\n    return solutions\n}\n\nfunction analyze_lse(state: AnalyzerState, cube: CubieCube): SolutionDesc[] {\n    let config : SolverConfig = {\n        num_solution: state.num_solution,\n        upper_limit: 20\n    }\n    let solutions = solve(\"lse\", cube, config).map(sol => ({\n        ...sol, stage: \"lse\"\n    })).sort( (x, y) => x.score - y.score)\n\n    return solutions\n}\n\n\nexport function analyze(state: AnalyzerState) {\n    let cube = new CubieCube().apply(state.scramble).apply(state.post_scramble)\n    if (state.stage === \"fb\") return analyze_fb(state, cube)\n    else {\n        let ori = new MoveSeq((state.full_solution[0]?.orientation) || \"\")\n        cube = cube.changeBasis(ori).apply(ori.inv())\n        if (state.stage === \"ss\") return analyze_ss(state, cube)\n        else if (state.stage === \"sp\") return analyze_sp(state, cube)\n        else if (state.stage === \"lse\") return analyze_lse(state, cube)\n    }\n    return []\n}","import React, { Fragment } from 'react'\n\nimport CubeSim from './CubeSim'\nimport { Button, makeStyles, Typography, useTheme, FormControl, FormLabel, Size, } from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { CubeUtil, CubieCube, FaceletCube, Mask, MoveSeq } from '../lib/CubeLib';\n\nimport { AppState,  Action, Config, FavCase, Mode} from \"../Types\";\nimport 'typeface-roboto-mono';\nimport { Face } from '../lib/Defs';\nimport { getActiveName } from '../lib/Selector';\n\nimport { SingleSelect, MultiSelect } from './Select';\nimport { ColorPanel } from './Input';\nimport { AlgDesc } from '../lib/Algs';\nimport TextField from '@material-ui/core/TextField';\n\nimport { AnalyzerState, SolverConfig, SolutionDesc, initialState, analyze_roux_solve } from '../lib/Analyzer';\n\nimport * as Comlink from 'comlink';\n/* eslint-disable import/no-webpack-loader-syntax */\nimport Worker from \"worker-loader!../lib/Worker\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport Chip from '@material-ui/core/Chip';\nimport { BoxBufferGeometry, BoxHelper } from 'three';\nimport { CachedSolver } from '../lib/CachedSolver';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { createNonNullChain } from 'typescript';\n\n// web work solution: worker-loader + comlink interface\n// https://dev.to/nicolasrannou/web-workers-in-create-react-app-cra-without-unmounting-4865\n// https://github.com/webpack-contrib/worker-loader#integrating-with-typescript\n// const worker = new Worker()\n// const obj = Comlink.wrap(worker)\n// async function init() {\n//   await (obj as any).inc();\n//   await (obj as any).inc();\n//   let ct = await (obj as any).counter\n//   console.log(\"Testing \",  ct);\n// }\n// init()\n\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(2),\n      backgroundColor: theme.palette.background.default, \n      transition: \"all .5s ease-in-out\"\n    },\n    button: {\n      width: \"100%\",\n    },\n    paper: {\n      padding: theme.spacing(3),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    paper2: {\n      paddingLeft: theme.spacing(3),\n      paddingTop: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n      marginBottom: 3,\n      borderRadius: 0\n    },\n    canvasPaper: {\n      padding: theme.spacing(0),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    infoColumn: {\n      color: theme.palette.background.paper\n    },\n    scrambleColumn: {\n      paddingLeft: theme.spacing(3)\n    },\n    textColumn: {\n      // color: \"black\",\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 138\n      },\n    },\n    setup: {\n      whiteSpace: 'pre-line',\n      fontSize: \"1.4rem\",\n      fontWeight:500,\n      [theme.breakpoints.down('xs')]: {\n      fontSize: \"1.0rem\",\n      fontWeight: 500\n      },\n  },\n    condGap: {\n    },\n    fgap: {\n      flexShrink: 100, flexBasis: \"2.5rem\", minWidth: \"1.5em\",\n      [theme.breakpoints.down('xs')]: {\n        flexBasis: \"1.0rem\", \n        minWidth: \"0.4rem\"\n      }\n    },\n    fixedHeight: {\n      height: 250,\n    },\n    title : {\n        color: theme.palette.text.hint,\n        fontWeight: 500,\n        borderBottom: \"3px solid\",\n    },\n    title1 : {\n      fontWeight: 500,\n      marginTop: 7,         \n      border: \"1px solid\",\n      borderRadius: 4,\n      fontSize: \"0.8rem\"\n   },\n    stage: {\n      paddingTop: 5,\n      paddingLeft: 5,\n\n    },\n    stageText: {\n      color: theme.palette.text.primary,\n      textTransform: \"none\"\n    },\n    sourceIcon : {\n        color: theme.palette.secondary.main,\n        fontSize: 15,\n        padding: 0\n    },\n    sourceIconWrap : {\n        //border: \"1px solid \" + theme.palette.text.hint,\n        //borderRadius: 3\n    },\n    fab: {\n      position: 'absolute',\n      top: theme.spacing(7),\n      left: theme.spacing(2),\n    },\n    prompt: {\n      color: theme.palette.text.secondary,\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n  }))\n\nconst resetState = (state: AnalyzerState) => {\n  return {\n    ...state,\n    postScramble: \"\",\n    full_solution: [],\n    scramble: \"\",\n    stage: \"fb\"\n  }\n}\nfunction ScrambleView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void }) {\n    let { state, setState } = props\n    let classes = useStyles()\n    // Add event listeners\n    let [ value, setValue ] = React.useState(state.scramble)\n\n    let onScrambleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(event?.target.value)\n    }\n\n    let handleBegin = () => {\n\n      setState({...resetState(state), scramble: value})\n    }\n    let handleGen = () => {\n      let cube = CubeUtil.get_random_with_mask(Mask.empty_mask)\n      let scramble = CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0].inv().toString()\n      setState({...resetState(state), scramble})\n      setValue(scramble)\n    }\n\n    return (\n    <Box style={{display: \"flex\"}}>\n      <Box style={{display: \"flex\", alignItems: \"center\"}}> \n        <Box className={classes.title} style={{}}>\n        Scramble\n      </Box> </Box>\n      <Box style={{}} className={classes.fgap} />          \n      <Box style={{display: \"flex\", alignItems: \"center\", flexGrow: 1}}>\n        <TextField\n          size=\"medium\"\n          fullWidth\n          value={value}\n          onChange={onScrambleChange}\n          variant=\"filled\"\n        />\n      </Box>\n      <Box style={{}} className={classes.fgap} />\n      <Button onFocus={(evt) => evt.target.blur() } onClick={handleGen}\n            size=\"medium\" variant=\"contained\" color=\"primary\" >\n              Gen\n      </Button>\n      <Button onFocus={(evt) => evt.target.blur() } onClick={handleBegin}\n            size=\"medium\" variant=\"contained\" color=\"primary\" >\n              GO\n      </Button>\n    </Box> )\n}\n\nconst bases = \"\"\nfunction ConfigView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void}) {\n  let { state, setState } = props\n  let classes = useStyles()\n  let fb_ori_str = state.orientation + \",\" + state.pre_orientation\n  let handleFBOri = (event: React.ChangeEvent<{ value: unknown }>) => {\n    let value: string[]= (event.target.value as string).split(\",\")\n    setState({...state, orientation: value[0], pre_orientation: value[1]})\n  }\n  let display_mode_str = state.show_mode\n  let handle_display_mode = (event: React.ChangeEvent<{ value: unknown }>) =>  {\n    let value = (event.target.value as string)\n    setState({...state, show_mode: value})\n  }\n  let handle_num_solution = (event: React.ChangeEvent<{ value: unknown }>) =>  {\n    let value = Number.parseInt(event.target.value as string)\n    setState({...state, num_solution: value || state.num_solution})\n  }\n  return (\n  <Box style={{display: \"flex\"}}>\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-helper-label\">FB Orientation</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={fb_ori_str}\n        onChange={handleFBOri}\n      >\n        <MenuItem value={\"x2y,\"}>x2y on White/Yellow</MenuItem>\n        <MenuItem value={\"x2y,x\"}>x2y on Blue/Green</MenuItem>\n        <MenuItem value={\"x2y,z\"}>x2y on Red/Orange</MenuItem>\n        <MenuItem value={\"cn,\"}>Color Neutral</MenuItem>\n      </Select>\n      <FormHelperText></FormHelperText>\n    </FormControl>\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-helper-label\">Display Mode</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={display_mode_str}\n        onChange={handle_display_mode}\n      >\n        <MenuItem value={\"foreach\"}>Per orientation</MenuItem>\n        <MenuItem value={\"combined\"}>Combined </MenuItem>\n      </Select>\n      <FormHelperText></FormHelperText>\n    </FormControl>\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"demo-simple-select-helper-label\"># Solutions</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={state.num_solution}\n        onChange={handle_num_solution}\n      >\n        <MenuItem value={1}>1</MenuItem>\n        <MenuItem value={3}>3 </MenuItem>\n        <MenuItem value={5}>5</MenuItem>\n        <MenuItem value={10}>10 </MenuItem>\n        <MenuItem value={25}>25 </MenuItem>\n      </Select>\n      <FormHelperText></FormHelperText>\n    </FormControl>\n\n  </Box>)\n}\n\n\nfunction SolutionInputView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void}) {\n  let classes = useStyles()\n  let [editing, setEditing] = React.useState(false)\n  let [value, setValue] = React.useState(\"\")\n  let textField = React.useRef<HTMLInputElement | null>(null)\n  let container = React.useRef<HTMLInputElement | null>(null)\n  let editButton = React.useRef<HTMLElement | null>(null)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(event.target.value)\n      event.stopPropagation()\n  }\n  const toggleEdit = () => {\n      setEditing(true)\n  }\n  const handleClose = () => {\n    setEditing(false)\n    let t = Date.now()\n    let full_solution = analyze_roux_solve(new CubieCube().apply(props.state.scramble), new MoveSeq(value))\n    if (full_solution.length > 1 || full_solution.length === 1 && full_solution[0].solution.moves.length > 0 )\n      props.setState({...props.state, full_solution})\n  }\n  const onEntered = () => {\n      textField.current && textField.current.focus()\n  }\n  return <Box>\n    <Box >\n          <Button variant={editing ? \"contained\" : \"outlined\"}\n              color=\"primary\"\n              size=\"small\"\n              onClick={toggleEdit}\n              \n              startIcon={<EditIcon />}\n          >\n              {\"Input Your Solution\"}\n          </Button>\n    </Box>\n\n    <Dialog open={editing} \n            onClose={handleClose}  \n            onEntered={onEntered}\n            maxWidth=\"sm\"\n            fullWidth\n            >\n          <DialogTitle> Input your own solution </DialogTitle>\n          <DialogContent>\n                <TextField\n                    inputRef={textField}\n                    multiline\n                    size=\"medium\"\n                    fullWidth\n                    rowsMax={10}\n                    rows={5}\n                    value={value}\n                    onChange={onChange}\n                    variant=\"outlined\">\n                </TextField>\n          </DialogContent>\n          <DialogActions>\n              <Box padding={1}>\n              <Button onClick={handleClose} color=\"primary\" variant=\"outlined\" fullWidth >\n                  Confirm\n              </Button>\n              </Box>\n          </DialogActions>\n    </Dialog>\n  </Box>\n}\n\n\n\nfunction StageSolutionView(props: { solution: SolutionDesc }) {\n  let { solution, stage, premove, orientation } = props.solution\n  let getTags = () => {\n    if (stage === \"fb\") {\n      return [ orientation ]\n    } else if (stage === \"ss-front\" || stage === \"ss-back\"){\n      return [ stage ]\n    } else return []\n  }\n  let tags = getTags()\n  return (\n    <Box style={{display: \"flex\", marginBottom: \"2px\"}}>\n      {tags.filter(x=>x).map( (t, i) => <Chip variant=\"outlined\" size=\"small\" color=\"primary\" label={t} key={i} />) }\n      <Box style={{marginLeft: 5}}>\n        <Typography>\n          {premove + \" \" + solution.moves.map(m => m.name).join(\" \")}\n        </Typography>\n      </Box>\n    </Box>\n  )\n}\n\n\n\nfunction StageSolutionListView(props: { solutions: SolutionDesc[], state: AnalyzerState, setState: (newState: AnalyzerState) => void} ) {\n  let { solutions, state, setState } = props\n\n\n  return (\n    <Box lineHeight={1}>\n\n                \n      \n      { solutions.map( (s, i) => <StageSolutionView solution={s} key={i}/>) }\n    </Box>\n  )\n  \n}\n\n\n\nfunction FullSolutionView(props: { state: AnalyzerState, setState: (newState: AnalyzerState) => void} ) {\n  let { state, setState } = props\n  let classes = useStyles()\n\n  let setStage = (i: number) => () => {\n    setState({...state, \n      stage: state.full_solution[i].stage,\n      post_scramble: state.full_solution.slice(0, i).map(x => x.premove + x.solution.toString()).join(\" \")\n    })\n  }\n  let [show, setShow] = React.useState(-1)\n  let stageView = (sol: SolutionDesc, i: number) => {\n    return (\n      <Box display=\"flex\" key={i} className={classes.stage} \n        onMouseLeave={ () => setShow(-1)} onMouseEnter={() => setShow(i)} onClick={() => setShow(show === i ? -1 : i)}>\n\n        <Button variant={\"text\"}\n              color=\"primary\"\n              size=\"small\"\n              onClick={setStage(i)}\n              style={{fontSize: \"0.7rem\", marginLeft: 5, border: (show === i) ? \"1px solid\" : \"1px solid rgba(0, 0,0,0)\"\n            }} >\n        <Typography variant=\"subtitle1\" className={classes.stageText}>{sol.solution.toString()} // {sol.stage}\n        </Typography>        \n\n    \n\n        <SearchIcon fontSize=\"small\"/>\n\n        </Button>\n\n      </Box>\n    )\n  }\n  return (\n    <Box paddingBottom={2} lineHeight={1} >\n      <Box>\n        <SolutionInputView state={state} setState={setState}/>\n      </Box>\n      <Box style={{fontFamily: \"Public Sans\"}}>\n        { props.state.full_solution.map( (desc, i) => stageView(desc, i))}\n      </Box>\n    </Box>\n  )\n  \n}\n\n\nconst worker_raw = new Worker()\nconst worker = Comlink.wrap(worker_raw)\n\nfunction AnalyzerView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n    let { state: appState, dispatch: appDispatch } = props\n    \n    const theme = useTheme()\n    const simBackground = getActiveName(appState.config.theme) === \"bright\" ? \"#eeeeef\" : theme.palette.background.paper\n    let [ state, setState ] = React.useState(initialState)\n\n    let [ solutions, setSolutions ] = React.useState<SolutionDesc[]>([])\n\n    let classes = useStyles()\n\n    let mask = Mask.solved_mask\n    let cubieCube = new CubieCube().apply(state.scramble).apply(state.post_scramble)\n    let faceletCube = FaceletCube.from_cubie(cubieCube, mask)\n\n    let ycube = FaceletCube.from_cubie(cubieCube.changeBasis(new MoveSeq(\"y\")))\n\n\n    let solutions_to_display = solutions.slice()\n    if (state.show_mode === \"combined\") {\n      solutions_to_display = solutions_to_display.sort( (x, y) => x.score - y.score).slice(0, state.num_solution)\n    } else {\n     /// solutions_to_display = solutions.slice(0, Math.ceil(config.num_solution / oris.length))\n    }\n    React.useEffect(() => {\n      async function effect() {\n\n        let t = Date.now()\n        let curr_solutions = await (worker as any).analyze(state) as SolutionDesc[]\n        // console.log(\"web worker finished after \" + (Date.now() - t) + \" ms\")\n        //console.log(\"result = \", curr_solutions)\n\n        setSolutions(curr_solutions)\n        //l/et curr_solutions = await analyzer_worker(state, cubieCube)\n        //\n      }\n      effect()\n    }, [state.scramble, state.stage, state.post_scramble, state.num_solution, state.orientation, state.pre_orientation])\n\n    return (\n    <Box className={classes.container}>\n      <Paper className={classes.paper} elevation={1}>\n        <ScrambleView state={state} setState={setState}/>\n      </Paper>\n\n\n      <Paper className={classes.paper} elevation={2}>\n        <ConfigView state={state} setState={setState}/>\n      </Paper>\n\n      <Paper className={classes.paper2} elevation={1}>\n        <Box display=\"flex\" >\n          {\n            state.full_solution.length >= 1 ? <>\n              <Box style={{display: \"flex\", flexDirection: \"column\", alignSelf: \"flex-start\"}}> \n                <Box className={classes.title} style={{}}>\n                  My Solution\n                </Box> \n              </Box>\n              <Box style={{}} className={classes.fgap} /> \n            </>\n          : null\n          }\n\n          <FullSolutionView state={state} setState={setState}/>\n        </Box>\n\n      </Paper>\n\n      <Paper className={ classes.paper}>\n      <Grid container>\n        <Grid item md={8} xs={12} sm={6} className={classes.condGap}>\n          <Box style={{display: \"flex\" }}>\n            <Box display=\"flex\" >\n                <Box style={{display: \"flex\", flexDirection: \"column\", alignSelf: \"flex-start\"}}> \n                  <Box className={classes.title} style={{}}>\n                    Solutions\n                  </Box> \n                  <Box>\n                  <Button className={classes.title1} size=\"small\" variant=\"outlined\" color=\"primary\">\n                    { state.stage }\n                  </Button>\n                  </Box>\n                </Box>\n            </Box>\n            <Box style={{}} className={classes.fgap} />\n           \n              <StageSolutionListView solutions={solutions_to_display} state={state} setState={setState}/>\n           \n          </Box>\n        </Grid>\n\n\n        <Grid item md={4} sm={6} xs={12} style={{display: \"flex\", justifyContent: \"center\"}}>\n          <Box style={{backgroundColor: \"rgba(0, 0, 0, 0)\"}}>\n            <CubeSim\n              width={250}\n              height={250}\n              cube={faceletCube}\n              colorScheme={appState.colorScheme.getColorsForOri(appState.cube.ori)}\n              hintDistance={ 5 }\n              bgColor={simBackground}\n              facesToReveal={ [Face.L, Face.B, Face.D]  }\n            />\n          </Box>\n\n\n        </Grid>\n      </Grid>\n      </Paper>\n\n\n\n      <Box height={20}/>\n      <Divider/>\n      <Box height={20}/>\n\n\n    </Box>\n    );\n}\n\n\nexport default AnalyzerView\n\n\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/Worker.10e3feeb.worker.js\");\n}\n","import React from 'react'\nimport { AppState, Mode, Action } from \"../Types\";\n\nimport { Box, Typography,Button, makeStyles } from '@material-ui/core';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { Grid, Container } from '@material-ui/core';\n\nimport CmllTrainerView from './CmllTrainerView';\nimport BlockTrainerView from './BlockTrainerView';\nimport PanoramaView from './PanoramaView';\n\n\n//import 'typeface-roboto';\n\nimport FavListView from './FavListView';\nimport TopBarView from './TopBarView';\nimport AnalyzerView from './AnalyzerView';\n\n\ninterface TabPanelProps {\n  value: number,\n  index: number,\n  children: any,\n  [key: string]: any\n}\nfunction TabPanel(props: TabPanelProps ) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={0}>{children}</Box>}\n    </Typography>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  page: {\n    backgroundColor: theme.palette.background.default\n  },\n  container: {\n    display: \"flex\"\n  },\n  icon: {\n    minWidth: 0\n  },\n  root: {\n    display: \"flex\"\n  },\n  bar: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.paper,\n    //borderRadius: \"5px\"\n  },\n  select: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.background.paper,\n    borderRadius: 4,\n    border: \"1px solid \" + theme.palette.background.default,\n  }\n}))\n\n\nconst modes : Mode[] = [\"analyzer\", \"fbdr\", \"fs\", \"fb\", \"ss\", \"cmll\", \"4c\", \"eopair\"]\n\nfunction _getInitialHashLocation() {\n  if (window.location.hash) {\n    let idx = (modes as string[]).indexOf(window.location.hash.slice(1))\n    if (idx === -1) {\n      window.location.hash = \"\";\n      return 0;\n    } else {\n      return idx;\n    }\n  } else {\n    return 0\n  }\n}\n\n\n// TODO: Write getter and setter for config items, and also write handlers that map to setters\nfunction AppView(props: { state: AppState, dispatch: React.Dispatch<Action> } ) {\n  //const [locations, setLocations] = React.useState([])\n  let { state, dispatch } = props\n  let classes = useStyles()\n\n  const handleChange = React.useCallback( (newValue:number) => {\n    if (newValue < modes.length) {\n      setValue(newValue)\n      let mode = modes[newValue]\n      dispatch({type: \"mode\", content: mode})\n    }\n  }, [dispatch])\n\n  const [ open, setOpen ] = React.useState(false)\n\n  const [value, setValue] = React.useState(_getInitialHashLocation());\n  React.useEffect( () => {\n    dispatch({type: \"mode\", content: modes[_getInitialHashLocation()]})\n  }, [])\n\n  const handleInfoOpen = () => { setOpen(true) }\n  const handleInfoClose = () => { setOpen(false) }\n\n  const toggleBright = () => {\n    const theme_flag = [...state.config.theme.flags]\n    theme_flag[0] = 1 - theme_flag[0]\n    theme_flag[1] = 1 - theme_flag[1]\n    dispatch({ type: \"config\", content: {\n      theme: {\n        ...state.config.theme,\n        flags: theme_flag\n    }}})\n  }\n  const toggleFav = () => {\n    setFav(!showFav)\n  }\n\n  const [ showFav, setFav ] = React.useState(false)\n\n  return (\n    <main>\n      <Dialog open={open} onClose={handleInfoClose} >\n      <DialogTitle>About</DialogTitle>\n      <DialogContent dividers>\n        <Typography gutterBottom style={{whiteSpace: 'pre-line', fontSize: '1.3rem'}}>\n          Welcome to my awesome roux block trainer.\n        </Typography>\n        <br/>\n\n        <Typography gutterBottom style={{whiteSpace: 'pre-line'}}>\n\n        A bunch of shortcuts: <br/>\n        - Space for the next scramble. <br/>\n        - Enter to reset the virtual cube to current scramble. <br/>\n        - Cstimer style virtual cube control. <br/>\n\n        <br/>\n        </Typography>\n\n        {/* <Typography gutterBottom style={{whiteSpace: 'pre-line'}} variant=\"subtitle2\">\n        Currently supporting: FB+DR, SS, CMLL\n        </Typography> */}\n\n        <Typography gutterBottom style={{whiteSpace: 'pre-line'}} variant=\"body2\">\n\n        Feature requests are most definitely welcome. :)\n        </Typography>\n\n        <Typography gutterBottom variant=\"overline\">\n\n        --onionhoney(Zhouheng Sun)\n        </Typography>\n\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={handleInfoClose}>\n          Got it!\n        </Button>\n      </DialogActions>\n      </Dialog>\n\n      <TopBarView onChange={handleChange} value={value}\n        handleInfoOpen={handleInfoOpen} toggleBright={toggleBright} toggleFav={toggleFav}\n      />\n\n\n      <Box paddingY={2}>\n      <Container maxWidth={showFav ? \"lg\" : \"md\" }>\n\n      {\n      value === -1?\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item md={12} sm={12} xs={12}>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <PanoramaView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      :\n      (\n      <Grid container className={classes.container} spacing={3}>\n        <Grid item hidden={!showFav} md={4} sm={4} xs={12} >\n        <FavListView {...{state, dispatch}} />\n        </Grid>\n\n        <Grid item md={showFav ? 8 : 12} sm={showFav ? 8 : 12} xs={12}>\n        <TabPanel value={value} index={0} className={classes.page}>\n          <AnalyzerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={1} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={2} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={3} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={4} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={5} className={classes.page}>\n          <CmllTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={6} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        <TabPanel value={value} index={7} className={classes.page}>\n          <BlockTrainerView {...{state, dispatch}} />\n        </TabPanel>\n        </Grid>\n      </Grid>\n      )\n      }\n      </Container></Box>\n\n\n\n    </main>\n  )\n}\nexport default AppView","\nimport { Config, FavCase } from \"./Types\"\nexport const initialFavList : FavCase[] = []\nexport const initialConfig : Config = (() => {\n    let arr_ori_flag = Array(24).fill(0)\n    arr_ori_flag[7] = 1 // YR\n    return {\n        theme: {\n            names: [\"bright\", \"dark\"],\n            flags: [1,0],\n            kind: \"theme\"\n        },\n        evaluator: {\n            label: \"solution sorting metrics\",\n            names: [\"sequential\", \"two-gram\", \"QTM\", \"default\"],\n            flags: [1,0, 0, 0],\n            kind: \"evaluator\"\n        },\n        cmllSelector: {\n            names: [\"o\", \"s\", \"as\", \"t\", \"l\", \"u\", \"pi\", \"h\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"cmll\",\n        },\n        cmllAufSelector: {\n            names: [\"None\", \"U\", \"U'\", \"U2\"],\n            flags: [1, 1, 1, 1],\n            kind: \"u_auf\"\n        },\n        cmllCubeMaskSelector: {\n            names: [\"Show\", \"Hide\", \"Hide LSE\"],\n            flags: [1, 0, 0],\n            kind: \"cube_mask\"\n        },\n        triggerSelector: {\n            names: [\"RUR'\", \"RU'R'\", \"R'U'R\", \"R'UR\"],\n            flags: [0, 0, 0, 0],\n            kind: \"trigger\"\n        },\n        orientationSelector: {\n            label: \"Color Scheme (U-F)\",\n            names: [\n                \"WG\", \"WB\", \"WO\", \"WR\",\n                \"YG\", \"YB\", \"YO\", \"YR\",\n                \"BW\", \"BY\", \"BO\", \"BR\",\n                \"GW\", \"GY\", \"GO\", \"GR\",\n                \"OW\", \"OY\", \"OB\", \"OG\",\n                \"RW\", \"RY\", \"RB\", \"RG\",\n            ],\n            flags: arr_ori_flag,\n            kind: \"orientation\"\n        },\n        fbdrSelector: {\n            label: \"Position of square\",\n            names: [\"FS at back\", \"FS at front\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"fbdr\"\n        },\n        fbdrScrambleSelector: {\n            label: \"Type of scramble\",\n            names: [\"Short (Concerning FBDR Pieces only)\", \"Random State (Entire cube, useful for practicing F2B)\"],\n            flags: [1, 0],\n            kind: \"fbdr-scramble\"\n        },\n        fbOnlySelector: {\n            label: \"Pieces to solve\",\n            names: [\"FB Last Pair + DR\", \"FB Last Pair Only\"],\n            flags: [1, 0],\n            kind: \"fb-only\"\n        },\n        fbPairSolvedSelector: {\n            label: \"Last Pair pattern\",\n            names: [\"Random\", \"Solved(FS at back only)\"],\n            flags: [1, 0],\n            kind: \"fb-pair-solved\"\n        },\n        fbdrPosSelector1: {\n            label: \"Position of FB edge\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-1\"\n        },\n        fbdrPosSelector2: {\n            label: \"Position of FB edge\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-2\"\n        },\n        fbdrPosSelector3: {\n            label: \"Position of DR\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"fbdr-position-3\"\n        },\n        fsSelector: {\n            label: \"Position of square\",\n            names: [\"Front FS\", \"Back FS\", \"Both\"],\n            flags: [0, 0, 1],\n            kind: \"fs\"\n        },\n        ssSelector: {\n            label: \"Position of square\",\n            names: [\"SS at front\", \"SS at back\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"ss\"\n        },\n        ssEOSelector: {\n            label: \"Orientation of DR\",\n            names: [\"Oriented\", \"Misoriented\", \"Either\"],\n            flags: [1, 0, 0],\n            kind: \"ss-orientation\"\n        },\n        ssPosSelector: {\n            label: \"Position of DR\",\n            names: [\"UF\", \"FU\", \"UL\", \"LU\", \"UB\", \"BU\", \"UR\", \"RU\", \"DF\", \"FD\", \"DB\", \"BD\",\n                    \"DR\", \"RD\", \"BR\", \"RB\", \"FR\", \"RF\"],\n            flags: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"ss-position\"\n        },\n        ssPairOnlySelector: {\n            label: \"Solve w/wo DR\",\n            names: [\"SS\", \"SB First Pair\"],\n            flags: [1, 0],\n            kind: \"sb-pair-only\"\n        },\n        solutionNumSelector: {\n            label: \"Number of solutions\",\n            names: [\"1\", \"3\", \"5\", \"10\", \"25\"],\n            flags: [0, 0, 1, 0, 0],\n            kind: \"solution-num\"\n        },\n        fbPieceSolvedSelector: {\n            label: \"Difficulty\",\n            names: [\"Hard over x2y(Scramble only)\", \"Hard\", \"DL Solved\", \"BL Solved\", \"Random\"],\n            flags: [1, 0, 0, 0, 0],\n            kind: \"fb-piece-solved\"\n        },\n        lseMCSelector: {\n            label: \"Center\",\n            names: [\"Aligned\", \"Misaligned\"],\n            flags: [0, 1],\n            kind: \"lse-mc\"\n        },\n        lseBarSelector: {\n            label: \"EO Pair\",\n            names: [\"ULUR\", \"UFUB\"],\n            flags: [1, 0],\n            kind: \"lse-bar\"\n        },\n        lseStageSelector: {\n            label: \"Stage\",\n            names: [\"4b for MC(1 move EOPair insert)\", \"M2 to 4c\", \"4c\"],\n            flags: [0, 1, 0],\n            kind: \"lse-stage\"\n        },\n        lseEOSelector: {\n            label: \"EO\",\n            names: [\"solved\", \"arrow\", \"4/0\", \"2o/0\", \"2a/0\", \"1/1\", \"6flip\", \"2o/2\", \"0/2\", \"2a/2\"],\n            flags: [0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n            kind: \"lse-eo\"\n        },\n        lseEOLRMCSelector: {\n            label: \"Center strategy\",\n            names: [\"Non MC only\", \"MC only\", \"Combined\",\"Filter by Non-MC shorter\",  \"Filter by MC shorter\", ],\n            flags: [0, 0, 1, 0, 0],\n            kind: \"lse-eolrmc\"\n        },\n        lseBarbieSelector: {\n            label: \"EOLR / EOLRb\",\n            names: [\"EOLR\", \"EOLRb\"],\n            flags: [1, 0],\n            kind: \"lse-barbie\"\n        },\n        lseEOLRScrambleSelector: {\n            label: \"Type of scramble\",\n            names: [\"Short\", \"Random State\"],\n            flags: [0, 1],\n            kind: \"lse-eolr-scramble\"\n        }\n    }\n})()\n","import { Config, FavCase, Mode } from \"../Types\"\nimport { version } from \"../Version\"\nimport { initialConfig, initialFavList } from \"../Initialization\"\n\nexport type FavCaseStore = {mode: Mode, setup: string, solver: string }\nlet favListManager = function() {\n    const key = \"fav\"\n    let cache : FavCase[] | null = null\n    let getFavList = () => {\n        if (cache) return cache\n        const item = window.localStorage.getItem(key)\n        const item1 : FavCaseStore[] = item ? JSON.parse(item) : initialFavList\n        const item2 : FavCase[] = item1.map( ({mode, setup, solver}) => ({mode, setup, solver: solver.trim().split(\"|\")}) );\n        return item2\n    }\n    let setFavList = (item : FavCase[]) => {\n        const item1 : FavCaseStore[] = item.map(({mode, setup, solver}) => ({mode, setup, solver: solver.join(\"|\")}) );\n        window.localStorage.setItem(key, JSON.stringify(item1));\n        cache = item\n    }\n    return {\n        getFavList,\n        setFavList\n    }\n}()\n\nlet configManager = function() {\n    const key = \"config\"\n    const versionKey = \"version\"\n    let cache : Config | null = null\n\n    let getConfig = () => {\n        if (cache) {\n            return cache\n        }\n        const item = window.localStorage.getItem(key);\n        const vers = window.localStorage.getItem(versionKey)\n\n        const item1 : Partial<Config> = item ? JSON.parse(item) : initialConfig\n\n        if ( vers !== version) {\n            // version out of date\n            // let's preserve orientation\n            let config = initialConfig\n            if (item1.orientationSelector) {\n                config = {...initialConfig, orientationSelector: item1.orientationSelector}\n            }\n            window.localStorage.setItem(key, JSON.stringify(config));\n            window.localStorage.setItem(versionKey, version)\n\n            return config\n        }\n\n        // In rare cases we want to update new attributes but maintain previous version\n        if ( (item1 === null) || (item1 === undefined) || Object.keys(item1).length === 0) {\n            window.localStorage.setItem(key, JSON.stringify(initialConfig));\n            return initialConfig\n        }\n        // we will also add in unseen fields\n        if (Object.keys(item1).length < Object.keys(initialConfig).length) {\n            const item2 = {...initialConfig, ...item1}\n            window.localStorage.setItem(key, JSON.stringify(item2));\n            return item2\n        }\n        return item1 as Config\n    }\n\n    let setConfig = (partial: Partial<Config>) => {\n        let newConfig : Config = Object.assign(getConfig(), partial)\n        window.localStorage.setItem(key, JSON.stringify(newConfig));\n        cache = newConfig\n    }\n\n    return {\n        getConfig,\n        setConfig\n    }\n}()\n\nlet getConfig = configManager.getConfig\nlet setConfig = configManager.setConfig\nlet getFavList = favListManager.getFavList\nlet setFavList = favListManager.setFavList\n\nexport {\n    getConfig, setConfig, getFavList, setFavList\n}\n","const version = \"1.1\"\n\nexport {version}","import { AppState, Config, FavCase } from \"../Types\";\n/* State Manager\n * \"Passively\" updates localstorage in reduce.\n * Action types\n *  - move: respond to cube move\n *  - replay: replay case\n *  - reactToConfig: respond to changes in config\n */\nexport abstract class AbstractStateM {\n    state: AppState;\n    constructor(state: AppState) {\n        this.state = state;\n    }\n    abstract onMove(s: string): AppState;\n    abstract onConfig(conf: Config): AppState;\n    abstract onControl(s: string): AppState;\n    onReplay(case_: FavCase): AppState {\n        return this.state;\n    }\n}\n\nexport class StateFactory {\n    static create = (state: AppState) => {\n        let filler = ( (()=>1) as unknown ) as (state: AppState) => AbstractStateM;\n        return filler(state);\n    }\n}","// source: \"https://sites.google.com/view/kianroux/cmll\" and https://github.com/AshleyF/briefcubing/blob/master/algs.js\n\n//type oll_case = \"o\"|\"h\"|\"pi\"|\"u\"|\"t\"|\"s\"|\"as\"|\"l\"\nimport { Selector } from \"../lib/Selector\";\nimport { rand_choice } from \"./Math\";\n\nconst get_active_names = (sel : Selector) => {\n    let res = []\n    for (let i = 0; i < sel.names.length; i++) {\n        if (sel.flags[i]) {\n            res.push(sel.names[i]);\n        }\n    }\n    return res\n}\n\nexport type AlgDesc = {\n    id: string,\n    algs: string[],\n    setup?: string,\n    kind: string\n}\n\nexport let createAlg = (id: string, alg: string | string[], kind:string, setup?: string) : AlgDesc => ({\n    id, algs:Array.isArray(alg) ? alg : [alg], kind, setup\n})\n\nconst empty_alg = createAlg(\"empty\", \"\", \"any\")\n\nconst cmll_algs : AlgDesc[] = [\n    createAlg(\"o_adjacent_swap\", \"R U R' F' R U R' U' R' F R2 U' R'\", \"cmll\" ),\n    createAlg(\"o_diagonal_swap\", \"F R U' R' U' R U R' F' R U R' U' R' F R F'\", \"cmll\" ),\n    createAlg(\"h_columns\", \"R U R' U R U' R' U R U2 R'\", \"cmll\" ),\n    createAlg(\"h_rows\", \"F R U R' U' R U R' U' R U R' U' F'\", \"cmll\" ),\n    createAlg(\"h_column\", \"U R U2' R2' F R F' U2 R' F R F'\", \"cmll\" ),\n    createAlg(\"h_row\", \"r U' r2' D' r U' r' D r2 U r'\", \"cmll\" ),\n    createAlg(\"pi_right_bar\", \"F R U R' U' R U R' U' F'\", \"cmll\" ),\n    createAlg(\"pi_back_slash\", \"U F R' F' R U2 R U' R' U R U2' R'\", \"cmll\" ),\n    createAlg(\"pi_x_checkerboard\", \"U' R' F R U F U' R U R' U' F'\", \"cmll\" ),\n    createAlg(\"pi_forward_slash\", \"R U2 R' U' R U R' U2' R' F R F'\", \"cmll\" ),\n    createAlg(\"pi_columns\", \"U' r U' r2' D' r U r' D r2 U r'\", \"cmll\" ),\n    createAlg(\"pi_left_bar\", \"U' R' U' R' F R F' R U' R' U2 R\", \"cmll\" ),\n    createAlg(\"u_forward_slash\", \"U2 R2 D R' U2 R D' R' U2 R'\", \"cmll\" ),\n    createAlg(\"u_back_slash\", \"R2' D' R U2 R' D R U2 R\", \"cmll\" ),\n    createAlg(\"u_front_row\", \"R2' F U' F U F2 R2 U' R' F R\", \"cmll\" ),\n    createAlg(\"u_rows\", \"U' F R2 D R' U R D' R2' U' F'\", \"cmll\" ),\n    createAlg(\"u_x_checkerboard\", \"U2 r U' r' U r' D' r U' r' D r\", \"cmll\" ),\n    createAlg(\"u_back_row\", \"U' F R U R' U' F'\", \"cmll\" ),\n    createAlg(\"t_left_bar\", \"U' R U R' U' R' F R F'\", \"cmll\" ),\n    createAlg(\"t_right_bar\", \"U L' U' L U L F' L' F\", \"cmll\" ),\n    createAlg(\"t_rows\", \"F R' F R2 U' R' U' R U R' F2\", \"cmll\" ),\n    createAlg(\"t_front_row\", \"r' U r U2' R2' F R F' R\", \"cmll\" ),\n    createAlg(\"t_back_row\", \"r' D' r U r' D r U' r U r'\", \"cmll\" ),\n    createAlg(\"t_columns\", \"U2 r2' D' r U r' D r2 U' r' U' r\", \"cmll\" ),\n    createAlg(\"s_left_bar\", \"U R U R' U R U2 R'\", \"cmll\" ),\n    createAlg(\"s_x_checkerboard\", \"U L' U2 L U2' L F' L' F\", \"cmll\" ),\n    createAlg(\"s_forward_slash\", \"U F R' F' R U2 R U2' R'\", \"cmll\" ),\n    createAlg(\"s_columns\", \"U2 R' U' R U' R2' F' R U R U' R' F U2' R\", \"cmll\" ),\n    createAlg(\"s_right_bar\", \"U' R U R' U R' F R F' R U2' R'\", \"cmll\" ),\n    createAlg(\"s_back_slash\", \"U R U' L' U R' U' L\", \"cmll\" ),\n    createAlg(\"as_right_bar\", \"U R' U' R U' R' U2' R\", \"cmll\" ),\n    createAlg(\"as_columns\", \"U' R2 D R' U R D' R' U R' U' R U' R'\", \"cmll\" ),\n    createAlg(\"as_back_slash\", \"U' F' L F L' U2' L' U2 L\", \"cmll\" ),\n    createAlg(\"as_x_checkerboard\", \"U' R U2' R' U2 R' F R F'\", \"cmll\" ),\n    createAlg(\"as_forward_slash\", \"U' L' U R U' L U R'\", \"cmll\" ),\n    createAlg(\"as_left_bar\", \"U R U2' R' F R' F' R U' R U' R'\", \"cmll\" ),\n    createAlg(\"l_mirror\", \"F R U' R' U' R U R' F'\", \"cmll\" ),\n    createAlg(\"l_inverse\", \"F R' F' R U R U' R'\", \"cmll\" ),\n    createAlg(\"l_pure\", \"U2 R U2 R' U' R U R' U' R U R' U' R U' R'\", \"cmll\" ),\n    createAlg(\"l_front_commutator\", \"R U2 R D R' U2 R D' R2'\", \"cmll\" ),\n    createAlg(\"l_diag\", \"U2 R' U' R U R' F' R U R' U' R' F R2\", \"cmll\" ),\n    createAlg(\"l_back_commutator\", \"U' R' U2 R' D' R U2 R' D R2\", \"cmll\" )\n]\n\nlet trigger_algs: AlgDesc[] = [\n    createAlg(\"RUR'_1\", \"R U R'\", \"trigger\"),\n    createAlg(\"RUR'_2\", \"r U r'\", \"trigger\"),\n    createAlg(\"RU'R'_1\", \"R U' R'\", \"trigger\"),\n    createAlg(\"RU'R'_2\", \"r U' r'\", \"trigger\"),\n    createAlg(\"R'U'R_1\", \"R' U' R\", \"trigger\"),\n    createAlg(\"R'U'R_2\", \"r' U' r\", \"trigger\"),\n    createAlg(\"R'UR_1\", \"R' U R\", \"trigger\"),\n    createAlg(\"R'UR_2\", \"r' U r\", \"trigger\")\n]\n\nlet u_auf_algs: AlgDesc[] = [\n    createAlg(\"U\", \"U\", \"u_auf\"),\n    createAlg(\"U'\", \"U'\", \"u_auf\"),\n    createAlg(\"U2\", \"U2\", \"u_auf\"),\n    createAlg(\"None\", \"\", \"u_auf\"),\n]\n\nlet ori_algs: AlgDesc[] =\n    [\"WG\", \"WB\", \"WO\", \"WR\",\n    \"YG\", \"YB\", \"YO\", \"YR\",\n    \"BW\", \"BY\", \"BO\", \"BR\",\n    \"GW\", \"GY\", \"GO\", \"GR\",\n    \"OW\", \"OY\", \"OB\", \"OG\",\n    \"RW\", \"RY\", \"RB\", \"RG\"].map(s => createAlg(s, \"\", \"orientation\"))\n\nlet lookup_algset = (kind : string) => {\n    switch (kind) {\n        case \"cmll\": return cmll_algs;\n        case \"trigger\": return trigger_algs;\n        case \"orientation\": return ori_algs;\n        case \"u_auf\": return u_auf_algs;\n        default: return []\n    }\n}\n\nlet alg_generator = (selector: Selector) => {\n    let algSet = lookup_algset(selector.kind)\n    let lookup = new Set(get_active_names(selector))\n    let get_prefix = (id: string) => {\n        return id.split(\"_\", 1)[0]\n    }\n    let algs : AlgDesc[] = (() => {\n        return algSet.filter(alg => {\n            let prefix = get_prefix(alg.id);\n            return lookup.has(prefix)\n        })\n    })()\n\n    let next = () => {\n        if (algs.length === 0) {\n            return empty_alg\n        } else {\n            return rand_choice(algs)\n        }\n    }\n    return next\n}\n\nexport { alg_generator }","import { AppState, Config, FavCase } from \"../Types\";\nimport { alg_generator, AlgDesc } from \"../lib/Algs\";\nimport { Face, Typ, FBpairPos } from \"../lib/Defs\";\nimport { CubieCube, CubeUtil, Mask, FaceletCube, MoveSeq } from '../lib/CubeLib';\nimport { Evaluator, getEvaluator } from \"../lib/Evaluator\";\nimport { getActiveName, getActiveNames } from '../lib/Selector';\nimport { CachedSolver } from \"../lib/CachedSolver\";\nimport { rand_choice, arrayEqual } from '../lib/Math';\nimport { AbstractStateM, StateFactory } from \"./AbstractStateM\";\n\nexport abstract class BlockTrainerStateM extends AbstractStateM {\n    abstract solverL: number;\n    abstract solverR: number;\n    scrambleMargin: number = 1;\n    scrambleCount: number = 1;\n    algDescWithMoveCount: string = \"\";\n    expansionFactor = 2;\n    premoves: string[] = [\"\"];\n    orientations: string[] = [\"\"];\n    evaluator : Evaluator;\n\n    abstract getRandom(): [CubieCube, string[]] | [CubieCube, string[], string];\n    constructor(state: AppState) {\n        super(state)\n        let evalName = getActiveName(this.state.config.evaluator)\n        this.evaluator = getEvaluator(evalName)\n    }\n    _solve_with_solvers(cube: CubieCube, solverNames: string[]): AlgDesc[]{\n        const state = this.state;\n        const totalSolutionCap = 0 | (+(getActiveName(state.config.solutionNumSelector) || 5) * this.expansionFactor);\n        const selectedSolutionCap = +(getActiveName(state.config.solutionNumSelector) || 5);\n        let getDesc = (solverName: string) => {\n            const solver = CachedSolver.get(solverName);\n            const premoves = this.premoves || [\"\"]\n            let solutions = premoves.map(pm =>\n                solver\n                .solve(cube.apply(pm), 0, this.solverR, totalSolutionCap)\n                .map(sol => ({pre: pm, sol: sol, score: this.evaluator.evaluate(sol)}) )).flat()\n            solutions.sort((a, b) => a.score - b.score);\n            const toString = (sol: any) =>\n                (sol.pre === \"\" ? \"\" : \"(\" + sol.pre + \") \") + sol.sol.toString(this.algDescWithMoveCount);\n            const algs = solutions.slice(0, selectedSolutionCap).map(toString);\n            let algdesc: AlgDesc = {\n                id: `${solverName}`,\n                algs,\n                kind: `${solverName}`\n            }\n            return algdesc\n        }\n        return solverNames.map(getDesc)\n    }\n\n    _solve(cube: CubieCube, solverNames: string[], options?: {\n        updateSolutionOnly?: boolean, scrambleSolver?: string,\n        scramble?: string,\n    }) {\n        const state = this.state;\n        options = options || {}\n        let algDescs = this._solve_with_solvers(cube, solverNames);\n        const scrambleMargin = 1;\n        let setup : string\n        if (options.scramble) {\n            setup = options.scramble\n        } else if (options.updateSolutionOnly) {\n            setup = this.state.case.desc[0]!.setup!\n        } else {\n            const scramble = options.scrambleSolver === \"min2phase\"?\n            CachedSolver.get(\"min2phase\").solve(cube,0,0,0)[0].inv() :\n            (()=>{\n            const solutionLength = new MoveSeq(algDescs[0].algs[0]).remove_setup().moves.length;\n            return rand_choice(\n                CachedSolver.get(options.scrambleSolver || solverNames[0])\n                .solve(cube, Math.max(this.solverL, solutionLength + scrambleMargin),\n                    this.solverR, this.scrambleCount || 1)).inv()\n            })()\n            setup = scramble.toString()\n        }\n        if (algDescs.length === 0) {\n            algDescs = [{\n                id: `min2phase`,\n                algs: [],\n                setup,\n                kind: `min2phase`\n            }];\n        } else {\n            // populate setup into setup\n            algDescs.forEach(algDesc => algDesc.setup = setup);\n        }\n\n        const ori = (options.updateSolutionOnly) ? this.state.cube.ori : alg_generator(state.config.orientationSelector)().id;\n        const name = options.updateSolutionOnly ? this.state.name : \"hiding\";\n        // console.log(\"algdesc\", algdesc)\n        return {\n            ...state,\n            name: name,\n            cube: {\n                ...state.cube,\n                state: cube,\n                ori\n            },\n            case: {\n                state: new CubieCube().apply(setup),\n                desc: algDescs\n            }\n        };\n    }\n    _updateCase(): AppState {\n        let [cube, solverName, scrambleSolver] = this.getRandom();\n        let inputScramble : string | undefined = undefined\n        if (this.state.scrambleInput.length > 0) {\n            inputScramble = this.state.scrambleInput[0]\n            cube = new CubieCube().apply(inputScramble)\n        }\n        let state = this._solve(cube, solverName, {\n            updateSolutionOnly: false,\n            scrambleSolver,\n            scramble: inputScramble\n        });\n        if (inputScramble) {\n            state = {...state, \n                scrambleInput: state.scrambleInput.slice(1)\n            }\n        }\n        return state\n    }\n    _updateCap(): AppState {\n        const state = this.state;\n        if (state.case.desc.length === 0) {\n            return state;\n        }\n        const [cube, solverNames] = [state.cube.state, state.case.desc!.map(x => x.kind)];\n        return this._solve(cube, solverNames, {\n            updateSolutionOnly:true\n        });\n    }\n    onReplay(case_: FavCase): AppState {\n        const cube = new CubieCube().apply(case_.setup)\n        const state1 = this._solve(cube, case_.solver, {scramble: case_.setup});\n        return {\n            ...state1,\n            mode: case_.mode\n        };\n    }\n    onControl(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            if (state.name === \"revealed\") {\n                return this._updateCase();\n            }\n            else {\n                return {\n                    ...state,\n                    name: \"revealed\"\n                };\n            }\n        }\n        else if (s === \"#enter\") {\n            return {\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                }\n            };\n        }\n        else {\n            return state;\n        }\n    }\n    onMove(movestr: string): AppState {\n        let state = this.state;\n        let move = new MoveSeq(movestr);\n        let cube = state.cube.state.apply(move);\n        return {\n            ...state,\n            cube: {\n                ...state.cube,\n                state: cube\n            }\n        };\n    }\n    onConfig(conf: Config): AppState {\n        // see if solution cap changed\n        let changed = !arrayEqual(this.state.config.solutionNumSelector.flags, conf.solutionNumSelector.flags);\n        if (changed) {\n            return (StateFactory.create({ ...this.state, config: conf }) as BlockTrainerStateM)._updateCap();\n        }\n        else {\n            return this.state;\n        }\n    }\n}\n// const m_premove = [[], Move.all[\"M\"], Move.all[\"M'\"], Move.all[\"M2\"]];\nexport class FbdrStateM extends BlockTrainerStateM {\n    solverL = 8;\n    solverR = 10;\n    _get_pair_solved_front() {\n        let [cp, co, ep, eo] = rand_choice(FBpairPos);\n        //let mask = Mask.copy(Mask.fs_front_mask)\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 8; i++) {\n            if (cube.cp[i] === 4) {\n                cube.cp[i] = cube.cp[cp];\n                cube.co[i] = cube.co[cp];\n                cube.cp[cp] = 4;\n                cube.co[cp] = co;\n            }\n        }\n        for (let i = 0; i < 12; i++) {\n            if (cube.ep[i] === 8) {\n                cube.ep[i] = cube.ep[ep];\n                cube.eo[i] = cube.eo[ep];\n                cube.ep[ep] = 8;\n                cube.eo[ep] = eo;\n            }\n        }\n        return cube;\n    }\n    _edge_piece_in_pattern(cube: CubieCube, idx: number, pattern: [number, number][]) {\n        let dr_ep = cube.ep.indexOf(idx);\n        let dr_eo = cube.eo[dr_ep];\n        let good = (pattern.find( ([eo, ep]) => (eo === dr_eo) && (ep === dr_ep)))\n        return good\n    }\n    _get_random_fs_back() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        for (let i = 0; i < 1000; i++) {\n            if (this._edge_piece_in_pattern(cube, 7, this.allowed_dr) &&\n                this._edge_piece_in_pattern(cube, 8, this.allowed_pedge)) break;\n            cube = CubeUtil.get_random_with_mask(Mask.fs_back_mask);\n        }\n        return cube;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    _get_random_fs_front() {\n        let cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        for (let i = 0; i < 1000; i++) {\n            if (this._edge_piece_in_pattern(cube, 7, this.allowed_dr) &&\n                this._edge_piece_in_pattern(cube, 9, this.allowed_pedge)) break;\n            cube = CubeUtil.get_random_with_mask(Mask.fs_front_mask);\n        }\n        return cube;;\n        //return CubieCube.apply(cube, rand_choice(m_premove));\n    }\n    edgePositionMap : [number, number][] = [\n        [0, 0], [1, 0],\n        [0, 1], [1, 1],\n        [0, 2], [1, 2],\n        [0, 3], [1, 3],\n        [0, 4], [1, 4],\n        [0, 6], [1, 6],\n        [0, 7], [1, 7],\n        [0, 10], [1, 10],\n        [0, 11], [1, 11]\n    ]\n    allowed_pedge : [number, number][] = []\n    allowed_dr : [number, number][] = []\n    getRandom(): [CubieCube, string[], string] {\n        const fbOnly = getActiveName(this.state.config.fbOnlySelector) === \"FB Last Pair Only\";\n        const pairSolved = getActiveName(this.state.config.fbPairSolvedSelector) !== \"Random\";\n        const scrambleType = getActiveName(this.state.config.fbdrScrambleSelector) || \"Short\";\n        const useMin2PhaseScramble = !scrambleType.startsWith(\"Short\");\n        const solverName = fbOnly ? \"fb\" : \"fbdr\";\n        const scrambleSolver = useMin2PhaseScramble ? \"min2phase\" : solverName\n        let active = getActiveNames(this.state.config.fbdrSelector)[0];\n        //console.log(\"active\", active)\n        this.allowed_pedge = this.state.config.fbdrPosSelector1.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => this.edgePositionMap[i] )\n        this.allowed_dr = this.state.config.fbdrPosSelector3.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => this.edgePositionMap[i] )\n\n        // decide which random scramble generator to use. but prioritize use input if there's any\n        \n        if (active === \"FS at back\") {\n            if (pairSolved)\n                return [this._get_pair_solved_front(), [solverName], scrambleSolver];\n            else\n                return [this._get_random_fs_back(), [solverName], scrambleSolver];\n        }\n        else if (active === \"FS at front\") {\n            return [this._get_random_fs_front(), [solverName], scrambleSolver];\n        }\n        else\n            return [rand_choice([this._get_random_fs_back, this._get_random_fs_front])(),\n                [solverName], scrambleSolver];\n    }\n}\nexport class SsStateM extends BlockTrainerStateM {\n    solverL = 9;\n    solverR = 10;\n    _get_random_fb(allowed_dr_eo_ep: [number, number][]) {\n        let active = getActiveName(this.state.config.ssPairOnlySelector);\n        let mask = (active === \"SS\") ? Mask.fb_mask : Mask.fbdr_mask;\n        let cube : CubieCube;\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(mask);\n            if (active !== \"SS\") break;\n            let ep = cube.ep.indexOf(7);\n            let eo = cube.eo[ep];\n            if (allowed_dr_eo_ep.find( ([eo_, ep_]) => (eo === eo_) && (ep === ep_))) {\n                break\n            }\n        }\n        return cube\n    }\n    getRandom(): [CubieCube, string[] ] {\n        let active = getActiveNames(this.state.config.ssSelector)[0];\n        const drPositionMap : [number, number][] = [\n            [0, 0], [1, 0],\n            [0, 1], [1, 1],\n            [0, 2], [1, 2],\n            [0, 3], [1, 3],\n            [0, 4], [1, 4],\n            [0, 6], [1, 6],\n            [0, 7], [1, 7],\n            [0, 10], [1, 10],\n            [0, 11], [1, 11]\n        ]\n        let allowed_dr_eo_ep_patterns = this.state.config.ssPosSelector.flags.map( (value, i) => [value, i])\n            .filter( ([value, i]) => value ).map( ([value, i]) => drPositionMap[i] )\n        let cube = this._get_random_fb(allowed_dr_eo_ep_patterns);\n        let solver;\n        if (active === \"SS at front\") {\n            solver = \"ss-front\";\n        }\n        else if (active === \"SS at back\") {\n            solver = \"ss-back\";\n        }\n        else {\n            solver = rand_choice([\"ss-back\", \"ss-front\"]);\n        }\n        return [cube, [solver] ];\n    }\n}\nexport class FbStateM extends BlockTrainerStateM {\n    solverL: number = 9;\n    solverR: number = 11;\n    //premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    expansionFactor = 1;\n\n    _find_center_connected_edges(cube: CubieCube, is_l_only: boolean) {\n        let centers = is_l_only ? [ Face.L ] : [ Face.F, Face.B, Face.L, Face.R]\n        let edges = CubeUtil.stickers.filter(c => c[2] === Typ.E && centers.includes(c[3])\n            && FaceletCube.color_of_sticker(cube, [c[0], c[1], c[2]]) === c[3]);\n        return edges;\n    }\n    _get_random(): [CubieCube, string] {\n        let active = getActiveName(this.state.config.fbPieceSolvedSelector);\n        let mask;\n        if (active === \"Random\")\n            mask = Mask.empty_mask;\n        else if (active === \"DL Solved\")\n            mask = Mask.dl_solved_mask;\n        else if (active === \"BL Solved\")\n            mask = Mask.bl_solved_mask;\n        else if (active === \"Zhouheng Variant\")\n            mask = Mask.zhouheng_mask;\n        else\n            mask = Mask.empty_mask;\n        let cube = CubeUtil.get_random_with_mask(mask);\n\n        let solver = \"fb\";\n        if (active === \"Zhouheng Variant\") {\n            // B F'\n            cube = cube.apply(\"B F'\");\n            solver = \"fbdr\";\n        }\n        const hard_str = \"Hard\";\n        const g_hard_str = \"Hard over x2y(Scramble only)\"\n        if (active === g_hard_str) {\n            solver = \"min2phase\";\n        }\n        if (active !== hard_str && active !== g_hard_str) {\n            return [cube, solver];\n        }\n        let n = 0;\n        let is_l_only = active === hard_str\n        while (true) {\n            let pairs = CubeUtil.find_pairs(cube);\n            let cc_edges = this._find_center_connected_edges(cube, is_l_only);\n            n++;\n            if (pairs.length === 0 && cc_edges.length === 0) {\n                console.log(\"Successful after \" + n + \" tries \");\n                return [cube, solver];\n            }\n            cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        }\n    }\n    getRandom() : [CubieCube, string[], string]{\n        let [cube, solver] = this._get_random();\n        return [cube, solver === \"min2phase\" ? [] : [solver], solver ];\n    }\n}\n\n\nexport class FsStateM extends BlockTrainerStateM {\n    solverL = 7;\n    solverR = 11;\n    premoves = [\"\", \"x\", \"x'\", \"x2\"];\n    expansionFactor = 1;\n\n    getRandom(): [CubieCube, string[], string] {\n        let cube = CubeUtil.get_random_with_mask(Mask.empty_mask);\n        let name = getActiveName(this.state.config.fsSelector)\n        if (name === \"Front FS\") {\n            return [cube, [\"fs-front\"], \"fb\"]\n        } else if (name === \"Back FS\") {\n            return [cube, [\"fs-back\"], \"fb\"]\n        } else {\n            return [cube, [\"fs-front\", \"fs-back\"], \"fb\" ];\n        }\n    }\n}","\nimport { BlockTrainerStateM } from \"./BlockTrainerStateM\";\nimport { Mask, CubeUtil, CubieCube, Move } from \"../lib/CubeLib\";\nimport { getActiveName, getActiveNames } from \"../lib/Selector\";\nimport { rand_choice } from \"../lib/Math\";\nimport { CachedSolver } from \"../lib/CachedSolver\";\n\nexport class LSEStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n    getRandom(): [CubieCube, string[]] {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let bars = getActiveName(this.state.config.lseBarSelector)\n\n        let cube = CubeUtil.get_random_with_mask(Mask.lse_4c_mask);\n\n        let move = new Move().from_cube(cube, \"\")\n\n        if (bars === \"UFUB\") {\n            cube = new CubieCube().apply(rand_choice([\"U\", \"U\"])).apply(move)\n        } else {\n            cube = new CubieCube().apply(move)\n        }\n\n        let is_mc = getActiveName(this.state.config.lseMCSelector) === \"Misaligned\";\n        let lse_premove = is_mc ? [Move.all[\"M\"], Move.all[\"M'\"]] : [ [], Move.all[\"M2\"] ]\n        cube = cube.apply(rand_choice(lse_premove))\n\n        let stage = getActiveName(this.state.config.lseStageSelector)\n        if (stage === \"M2 to 4c\")  {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return [cube, [\"lse\"]];\n        } else if (stage.startsWith(\"4b for MC\")) {\n            cube = cube.apply(rand_choice([\"U M2\", \"U' M2\"])).apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            cube = cube.apply(rand_choice([\"M\", \"M'\"]))\n            cube = cube.apply(rand_choice([\"U\", \"U'\", \"U2\", \"id\"]))\n            return [cube, [\"lse\"]];\n        } else {\n            return [cube, [\"lse\"]];\n        }\n    }\n}\n\nconst lseEODef = [\n    {kind: \"solved\", eo: [0,0,0,0,0,0]},\n    {kind: \"arrow\", eo: [1,1,0,1,1,0]},\n    {kind: \"arrow\", eo: [0,1,1,1,0,1]},\n    {kind: \"4/0\", eo: [1,1,1,1,0,0]},\n    {kind: \"2o/0\", eo: [1,0,1,0,0,0]},\n    {kind: \"1/1\", eo: [1,0,0,0,0,1]},\n    {kind: \"1/1\", eo: [0,0,1,0,1,0]},\n    {kind: \"6flip\", eo: [1,1,1,1,1,1]},\n    {kind: \"2o/2\", eo: [0,1,0,1,1,1]},\n    {kind: \"0/2\", eo: [0,0,0,0,1,1]},\n    {kind: \"2a/2\", eo: [0,1,1,0,1,1]},\n]\nconst lseEODefLookup = function() {\n    let map = Object.assign({});\n    lseEODef.forEach( (def) => {\n        map[def.eo.toString()] = def.kind\n    })\n    return map\n}();\n\nexport class EOLRStateM extends BlockTrainerStateM {\n    solverL = 5;\n    solverR = 20;\n    scrambleCount = 3;\n    algDescWithMoveCount = \"STM\";\n\n    _getEOType(cube: CubieCube) {\n        for (let i = 0; i < 4; i++) {\n            let eo_arr = cube.eo.slice(0, 5)\n            eo_arr.push(cube.eo[6])\n            let eo = (lseEODefLookup[eo_arr.toString()])\n            if (eo) {\n\n                console.log(eo, eo_arr)\n                return eo;\n            }\n            cube = cube.apply(\"U\")\n        }\n        return \"Error\"\n    }\n\n    getRandom(): [CubieCube, string[], string] {\n        /*\n        LSE Modes:\n        pure 4c (UFUB/ULUR, MC/NC)\n        M2 to 4c (same as above)\n        */\n\n        let targetEO = rand_choice(getActiveNames(this.state.config.lseEOSelector))\n\n        let cube: CubieCube\n        let count = 0;\n        let eolrMCMode = getActiveName(this.state.config.lseEOLRMCSelector)\n        let compare = eolrMCMode === \"Filter by Non-MC shorter\" || eolrMCMode === \"Filter by MC shorter\"\n        let useBarbie = getActiveName(this.state.config.lseBarbieSelector) === \"EOLRb\"\n        let useFullScramble = getActiveName(this.state.config.lseEOLRScrambleSelector) === \"Random State\"\n\n        while (true) {\n            cube = CubeUtil.get_random_with_mask(Mask.lse_mask);\n            cube = cube.apply(rand_choice([\"id\", \"M2\"]))\n            console.log(\"targetEO\", targetEO)\n\n            if (count++ > 1000) {\n                console.log(\"something wrong\")\n                break\n            }\n\n            if (this._getEOType(cube) !== targetEO)\n                continue\n            if (compare) {\n                let acSolver = useBarbie ? \"eolrac-b\" : \"eolrac\"\n                let mcSolver = useBarbie ? \"eolrmc-b\" : \"eolrmc\"\n                let acLength = CachedSolver.get(acSolver).solve(cube, 0, 20, 1)[0].moves.length\n                let mcLength = CachedSolver.get(mcSolver).solve(cube, 0, 20, 1)[0].moves.length\n                if ( eolrMCMode === \"Filter by Non-MC shorter\" && acLength > mcLength ) continue\n                if ( eolrMCMode === \"Filter by MC shorter\" && mcLength > acLength ) continue\n            }\n            break\n        }\n\n        const ss = useFullScramble? \"lse\" : \"lse-ab4c\";\n        switch (eolrMCMode) {\n            case \"Non MC only\": return [cube, useBarbie ? [\"eolrac-b\"] : [\"eolrac\"], ss];\n            case \"MC only\": return [cube, useBarbie ? [\"eolrmc-b\"] : [\"eolrmc\"], ss];\n            case \"Combined\": return [cube, useBarbie ? [\"eolr-b\"] : [\"eolr\"], ss];\n            case \"Filter by Non-MC shorter\":\n            case \"Filter by MC shorter\": return [cube, useBarbie ? [\"eolr-b\"] : [\"eolr\"], ss];\n            default: return [cube, [\"eolr\"], ss];\n        }\n    }\n}\n","import { AppState, StateT, Config } from \"../Types\";\nimport { alg_generator, AlgDesc, createAlg } from \"../lib/Algs\";\nimport { CubieCube, Move, CubeUtil, MoveSeq } from '../lib/CubeLib';\nimport { AbstractStateM } from \"./AbstractStateM\";\nimport {initialize as min2phase_init, solve as min2phase_solve} from \"../lib/min2phase/min2phase-wrapper\"\nimport { arrayEqual } from \"../lib/Math\";\n\nexport abstract class CmllStateM extends AbstractStateM {\n    _get2PhaseSolution(cube: CubieCube): AlgDesc {\n        // Aha! f = g(b) but you modified b later, and f won't update!\n\n        let m2_away = false\n        if (cube.tp[0] !== 0) {\n            m2_away = true\n            cube = cube.apply(\"M2\")\n        }\n        console.assert(arrayEqual(cube.tp, new CubieCube().tp))\n\n        const transformed_cube = cube.to_cstimer_cube()\n        console.assert( transformed_cube.is_solveable(), \"Cube must be solveable\")\n        min2phase_init();\n        let solution = min2phase_solve(transformed_cube);\n        if (m2_away) {\n            solution += \" M2\"\n        }\n        const algDesc: AlgDesc = createAlg(\"scramble\", solution, \"scramble\")\n        console.log(solution);\n        return algDesc;\n    }\n    _generateCase(): AppState {\n        let state = this.state;\n        let { config } = state;\n        let { cmllSelector, triggerSelector, cmllAufSelector, orientationSelector } = config;\n        let generator = alg_generator(cmllSelector);\n        let trig_generator = alg_generator(triggerSelector);\n        let u_auf_generator = alg_generator(cmllAufSelector);\n        let ori_generator = alg_generator(orientationSelector);\n        let trigger_alg: AlgDesc = trig_generator();\n        let cmll_alg: AlgDesc = generator();\n        let u_auf_alg: AlgDesc = u_auf_generator();\n        let alg_str = trigger_alg.algs + \" \" + u_auf_alg.algs + \" \" + cmll_alg.algs;\n        let moves: Move[] = new MoveSeq(alg_str).inv().moves;\n\n        let lse_cube: CubieCube\n        while (true) {\n            lse_cube = CubeUtil.get_random_lse().apply(moves)\n            if (lse_cube.is_solveable()) {\n                break;\n            }\n        }\n        let solution = this._get2PhaseSolution(lse_cube);\n        // ori based on ...?\n        let ori: string = ori_generator().id;\n        //console.log(\"current ori selector's ori \", ori)\n        return ({\n            ...state,\n            name: \"solving\",\n            cube: {\n                state: lse_cube,\n                ori,\n                history: [],\n            },\n            case: {\n                state: lse_cube,\n                desc: [trigger_alg, u_auf_alg, cmll_alg, solution]\n            },\n        });\n    }\n    onControl(s: string): AppState {\n        let state = this.state;\n        if (s === \"#space\") {\n            // SCRAMBLE\n            // enter cleared solving state based on selection\n            return this._generateCase();\n        }\n        else if (s === \"#enter\") {\n            // REDO\n            return ({\n                ...state,\n                name: \"solving\",\n                cube: {\n                    ...state.cube,\n                    state: state.case.state,\n                    history: []\n                },\n                case: {\n                    ...state.case,\n                }\n            });\n        }\n        else {\n            throw new Error(\"Unrecognized control code\");\n        }\n    }\n    onConfig(conf: Config): AppState {\n        return this.state;\n    }\n}\nexport class SolvingStateM extends CmllStateM {\n    onMove(move: string): AppState {\n        let state = this.state;\n        let moves = new MoveSeq(move).moves;\n        if (moves.length > 0) {\n            let move = moves[0];\n            let cube = state.cube.state.apply(move);\n            let cmll_solved = CubeUtil.is_cmll_solved(cube);\n            let newState: StateT = cmll_solved ? \"solved\" : \"solving\";\n            return ({\n                ...state,\n                cube: {\n                    ...state.cube,\n                    state: state.cube.state.apply(move),\n                    history: [...state.cube.history, move],\n                },\n                name: newState\n            });\n        }\n        else {\n            // Nothing to apply\n            return state;\n        }\n    }\n}\nexport class SolvedStateM extends CmllStateM {\n    onMove(move: string): AppState {\n        return this.state;\n    }\n}\n","import { StateFactory} from './AbstractStateM';\nimport { AppState, Mode } from '../Types';\nimport { FbdrStateM, SsStateM, FbStateM, FsStateM} from './BlockTrainerStateM';\nimport { LSEStateM, EOLRStateM } from './LSETrainerStateM';\nimport { SolvingStateM, SolvedStateM } from './CmllStateM';\n\nStateFactory.create = function(state: AppState) {\n        let mode: Mode = state.mode;\n        switch (mode) {\n            case \"fbdr\":\n                return new FbdrStateM(state);\n            case \"ss\":\n                return new SsStateM(state);\n            case \"fs\":\n                return new FsStateM(state);\n            case \"fb\":\n                return new FbStateM(state);\n            case \"cmll\": {\n                switch (state.name) {\n                    case \"solving\": return new SolvingStateM(state);\n                    case \"solved\": return new SolvedStateM(state);\n                    default: throw new Error(\"impossible\");\n                }\n            }\n            case \"4c\":\n                return new LSEStateM(state);\n            case \"eopair\":\n                return new EOLRStateM(state);\n            case \"experimental\":\n                return new FbStateM(state);\n            case \"analyzer\":\n                return new FbStateM(state)\n        }\n        ;\n    }\n\nexport { StateFactory };","import { Action } from \"./Types\";\n\nconst defaultKeyMapping : { [key: string]: string } = {\n    \"I\": \"R\",\n    \"K\": \"R'\",\n    \"W\": \"B\",\n    \"O\": \"B'\",\n    \"S\": \"D\",\n    \"L\": \"D'\",\n    \"D\": \"L\",\n    \"E\": \"L'\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"H\": \"F\",\n    \"G\": \"F'\",\n    \";\": \"y\",\n    \"A\": \"y'\",\n    \"U\": \"r\",\n    \"R\": \"l'\",\n    \"M\": \"r'\",\n    \"V\": \"l\",\n    \"T\": \"x\",\n    \"Y\": \"x\",\n    \"N\": \"x'\",\n    \"B\": \"x'\",\n    \".\": \"M'\",\n    \"X\": \"M'\",\n    \"5\": \"M\",\n    \"6\": \"M\",\n    \"P\": \"z\",\n    \"Q\": \"z'\",\n    \"Z\": \"d\",\n    \"C\": \"u'\",\n    \",\": \"u\",\n    \"/\": \"d'\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n  }\n\n\nconst lseKeyMapping : { [key: string]: string } = {\n    \"I\": \"M'\",\n    \"E\": \"M'\",\n    \"K\": \"M\",\n    \"D\": \"M\",\n    \"J\": \"U\",\n    \"F\": \"U'\",\n    \"S\": \"E'\",\n    \"L\": \"E\",\n    \"ENTER\": \"#enter\",\n    \" \": \"#space\",\n  }\n\n\nexport abstract class KeyMapping {\n    abstract handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) : void;\n}\n\nexport class DefaultKeyMapping extends KeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (defaultKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: defaultKeyMapping[key]\n            });\n        }\n    }\n}\n\nexport class LSEKeyMapping {\n    handle(evt: KeyboardEvent, dispatch: React.Dispatch<Action>) {\n        // do nothing if modifier key is pressed\n        if (evt.altKey || evt.ctrlKey || evt.metaKey) return;\n        let key = evt.key.toUpperCase();\n        if (lseKeyMapping.hasOwnProperty(key)) {\n            dispatch({\n              type: \"key\", content: lseKeyMapping[key]\n            });\n        }\n    }\n}","import { AppState, StateT, Mode } from \"../Types\";\nimport { CubieCube, ColorScheme } from '../lib/CubeLib';\nimport { getConfig, getFavList } from '../lib/LocalStorage';\nimport { getActiveName } from '../lib/Selector';\nimport { DefaultKeyMapping, LSEKeyMapping } from \"../KeyMapping\";\n\n\nexport const getInitialState = (mode?: Mode): AppState => {\n    mode = mode || \"fbdr\";\n    let initialStateName: StateT = function () {\n        switch (mode) {\n            case \"cmll\": return \"solved\";\n            case \"fbdr\":\n            case \"ss\":\n            case \"fb\":\n            case \"4c\":\n            case \"eopair\":\n            case \"fs\":\n                return \"revealed\";\n            case \"experimental\":\n                return \"revealed\";\n            case \"analyzer\":\n                return \"revealed\"\n        }\n    }();\n    let ori = getActiveName(getConfig().orientationSelector) || \"YR\";\n    return {\n        name: initialStateName,\n        mode,\n        scrambleInput: [],\n        cube: {\n            state: new CubieCube(),\n            ori,\n            history: [],\n        },\n        case: {\n            state: new CubieCube(),\n            desc: []\n        },\n        config: getConfig(),\n        favList: getFavList(),\n        keyMapping: (mode === \"4c\" || mode === \"eopair\") ? new LSEKeyMapping() : new DefaultKeyMapping(),\n        colorScheme: new ColorScheme()\n    };\n};\n","\nimport { AppState, Action, Config, FavListAction } from \"../Types\"\nimport { setConfig, setFavList} from '../lib/LocalStorage';\nimport { StateFactory } from \"./StateFactory\";\nimport { arrayEqual } from \"../lib/Math\";\nimport { getInitialState } from \"./InitialState\";\n\nexport { getInitialState }\nfunction reduceByFavlist(state: AppState, action: FavListAction) {\n    let favList = state.favList;\n\n    switch (action.action) {\n        case \"add\":\n            favList = [...action.content, ...favList]\n            setFavList(favList)\n            break;\n        case \"remove\": {\n        // only remove one at a time for now\n            const rem = action.content[0]\n            favList = favList.filter((value) => {\n                return !(value.mode === rem.mode && value.setup === rem.setup && arrayEqual(value.solver, rem.solver))\n            })\n            setFavList(favList)\n            break;\n        };\n        case \"replay\": {\n            return StateFactory.create(state).onReplay(action.content[0])\n        }\n    }\n    return {\n        ...state,\n        favList\n    }\n}\n\nexport function reducer(state: AppState, action: Action): AppState {\n    // todo: cache values based on this\n    // console.log(\"prev state\", state)\n    switch (action.type) {\n        case \"key\": {\n            let newState = reduceByKey(state, action.content)\n            return newState\n        };\n        case \"config\": {\n            // LESSON: Object.assign is dangerous\n            let newConfig = {...state.config, ...action.content}\n            setConfig(newConfig)\n            let newState = reduceByConfig(state, newConfig)\n            return {\n                ...newState,\n                config: newConfig\n            }\n        };\n        case \"mode\": {\n            let mode = action.content\n            window.location.hash = mode\n            state = getInitialState(mode)\n            return state\n        };\n        case \"scrambleInput\":\n            return {\n                ...state,\n                scrambleInput: action.content\n            }\n        case \"favList\":\n            return reduceByFavlist(state, action)\n        case \"colorScheme\":\n            return {\n                ...state,\n                colorScheme: state.colorScheme.set(action.content)\n            }\n        case \"custom\":\n            return action.content(state)\n        default:\n            return state\n        }\n}\n\n\nfunction reduceByKey(state: AppState, code: string): AppState {\n    if (code === \"\") return state;\n\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    if (code[0] === \"#\") {\n        return stateM.onControl(code)\n    } else {\n        return stateM.onMove(code)\n    }\n}\nfunction reduceByConfig(state: AppState, conf: Config): AppState {\n    const stateM = StateFactory.create(state)\n    // case match on kind of operation\n    return stateM.onConfig(conf)\n}","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  name: \"bright\",\n  palette: {\n    primary: {\n      main: '#556cd6',// '#e0e8ff'//b0c4ee', //\n    },\n    secondary: {\n      main: '#d32f2f',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#eeeeef',\n      paper: '#fff'\n    },\n    text: {\n      primary: '#000',\n      secondary: '#888',\n      hint: '#556cd6'\n    }\n  },\n  /*\n  typography: {\n    \"fontFamily\": `\"Public Sans\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif`,\n    \"fontSize\": 14,\n    \"fontWeightLight\": 400,\n    \"fontWeightRegular\": 500,\n    \"fontWeightMedium\": 600\n  }\n  */\n\n});\nconst themeDark = createMuiTheme({\n  name: \"dark\",\n  palette: {\n    primary: {\n      main: '#9FA4C2', // '#757575',\n    },\n    secondary: {\n      main: '#ffffff', //f55057',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#121212',\n      paper: '#252525' //#424242'\n    },\n    text: {\n      primary: '#fff',\n      secondary: '#ddd',\n      hint: '#eee'\n    }\n  },\n  overrides: {\n    // Style sheet name ⚛️\n    MuiDivider: {\n      // Name of the rule\n      // Some CSS\n      root: {\n        backgroundColor: 'rgba(255, 255 ,255, 0.3)',\n      }\n    },\n  }\n\n});\n\nexport { theme, themeDark };","import React from 'react'\nimport AppView from \"../components/AppView\"\nimport { reducer } from '../reducers/Reducer'\nimport { getInitialState } from \"../reducers/InitialState\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme, themeDark } from '../theme';\nimport { getActiveName } from '../lib/Selector';\nimport \"typeface-roboto\";\nimport \"fontsource-public-sans\";\n\nwindow.addEventListener('keypress', function(e) {\n  if(e.keyCode === 32 && e.target === document.body) {\n    e.preventDefault();\n  }\n});\n\nfunction App(props: {}) {\n  const [state, dispatch] = React.useReducer( reducer, getInitialState() )\n\n\n\n  const appTheme = getActiveName(state.config.theme) === \"bright\" ? theme : themeDark\n  return (\n    <ThemeProvider theme={appTheme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <AppView state={state} dispatch={dispatch} />\n    </ThemeProvider>\n  )\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\nfunction createArray(length) {\n\tconst arr = Array(length);\n\tfor (var i=0; i<length; i++) {\n\t\tarr[i] = 0;\n\t}\n\treturn arr;\n}\n\nfunction createArrays(length1, length2) {\n\tconst arr = Array(length1);\n\tfor (var i=0; i<length1; i++) {\n\t\tarr[i] = Array(length2);\n\t\tfor (var j=0; j<length2; j++) {\n\t\t\tarr[i][j] = 0;\n\t\t}\n\t}\n\treturn arr;\n}\n\nfunction bitOdd(i) {\n\ti ^= i >>> 1;\n\ti ^= i >>> 2;\n\ti ^= i >>> 4;\n\ti ^= i >>> 8;\n\treturn i & 1;\n}\n\nfunction bitCount(i) {\n\ti = i - ((i >>> 1) & 0x55555555);\n\ti = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n\treturn (i + (i >>> 8) + (i >>> 4)) & 0x0f;\n}\n\nfunction get4Parity(idx) {\n\tvar p = 0;\n\tfor (var i=2; i>=0; i--) {\n\t\tp += idx % (4-i);\n\t\tidx = ~~(idx / (4-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get8Parity(idx) {\n\tvar p = 0;\n\tfor (var i=6; i>=0; i--) {\n\t\tp += idx % (8-i);\n\t\tidx = ~~(idx / (8-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\nfunction get12Parity(idx) {\n\tvar p = 0;\n\tfor (var i=10; i>=0; i--) {\n\t\tp += idx % (12-i);\n\t\tidx = ~~(idx / (12-i));\n\t}\n\tp &= 1;\n\treturn p;\n}\n\n\nfunction binarySearch(arr, key) {\n\tvar length = arr.length;\n\tif (key <= arr[length-1]) {\n\t\tvar l = 0;\n\t\tvar r = length-1;\n\t\twhile (l <= r) {\n\t\t\tvar mid = (l+r)>>>1;\n\t\t\tvar val = arr[mid];\n\t\t\tif (key > val) {\n\t\t\t\tl = mid + 1;\n\t\t\t} else if (key < val) {\n\t\t\t\tr = mid - 1;\n\t\t\t} else {\n\t\t\t\treturn (mid);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0xffff;\n}\n\nvar fact = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600];\nvar perm3 = [[11, 10, 9], [10, 11, 9], [11, 9, 10], [9, 11, 10], [10, 9, 11], [9, 10, 11]];\nvar ud2std = [0, 1, 2, 4, 7, 9, 10, 11, 13, 16];\nvar std2ud = createArray(18);\nvar Cnk = createArrays(12, 13);\nvar move2str = [\"U \", \"U2\", \"U'\", \"R \", \"R2\", \"R'\", \"F \", \"F2\", \"F'\", \"D \", \"D2\", \"D'\", \"L \", \"L2\", \"L'\", \"B \", \"B2\", \"B'\"];\nvar urfMove = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17], \n\t\t\t\t\t\t\t\t\t\t\t[6, 7, 8, 0, 1, 2, 3, 4, 5,15,16,17, 9,10,11,12,13,14],\n\t\t\t\t\t\t\t\t\t\t\t[3, 4, 5, 6, 7, 8, 0, 1, 2,12,13,14,15,16,17, 9,10,11],\n\t\t\t\t\t\t\t\t\t\t\t[2, 1, 0, 5, 4, 3, 8, 7, 6,11,10, 9,14,13,12,17,16,15], \n\t\t\t\t\t\t\t\t\t\t\t[8, 7, 6, 2, 1, 0, 5, 4, 3,17,16,15,11,10, 9,14,13,12],\n\t\t\t\t\t\t\t\t\t\t\t[5, 4, 3, 8, 7, 6, 2, 1, 0,14,13,12,17,16,15,11,10, 9]];\nfor (var i=0; i<12; i++) {\n\tCnk[i][0] = 1;\n\tCnk[i][i] = 1;\n\tCnk[i][i+1] = 0;\n\tfor (var j=1; j<i; j++) {\n\t\tCnk[i][j] = (Cnk[i-1][j-1] + Cnk[i-1][j]);\n\t}\n}\nfor (var i=0; i<10; i++) {\n\tstd2ud[ud2std[i]] = i;\n}\n\nvar ckmv = Array(19);//new boolean[19][18];\nvar ckmv2 = Array(11);//new boolean[11][10];\nckmv[18] = Array(18);\nckmv2[10] = Array(10);\nfor (var i=0; i<18; i++) {\n\tckmv[i] = Array(18);\n\tfor (var j=0; j<18; j++) {\n\t\tckmv[i][j] = (~~(i/3) == ~~(j/3)) || ((~~(i/3)%3 == ~~(j/3)%3) && (i>=j));\n\t}\n\tckmv[18][i] = false;\n}\nfor (var i=0; i<10; i++) {\n\tckmv2[i] = Array(10);\n\tfor (var j=0; j<10; j++) {\n\t\tckmv2[i][j] = ckmv[ud2std[i]][ud2std[j]];\n\t}\n\tckmv2[10][i] = false;\n}\n\n\n//********************************************************************************//\n\nfunction CubieCube() {\n\tthis.cp = [0, 1, 2, 3, 4, 5, 6, 7];\n\tthis.co = [0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.ep = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\tthis.eo = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\tthis.getFlip = function getFlip() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tidx |= this.eo[i] << i;\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getFlipSym = function getFlipSym() {\n\t\tif (FlipR2S != 0) {\n\t\t\treturn FlipR2S[this.getFlip()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(FlipS2R, temps.getFlip());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tthis.setFlip = function setFlip(idx) {\n\t\tthis.eo[11] = bitOdd(idx);\n\t\tfor (var i=0; i<11; i++) {\n\t\t\tthis.eo[i] = idx & 1;\n\t\t\tidx >>>= 1;\n\t\t}\n\t}\n\t\n\tthis.getTwist = function getTwist() {\n\t\tvar idx = 0;\n\t\tfor (var i=0; i<7; i++) {\n\t\t\tidx *= 3;\n\t\t\tidx += this.co[i];\n\t\t}\n\t\treturn idx;\n\t}\n\t\n\tthis.getTwistSym = function getTwistSym() {\n\t\tif (TwistR2S != null) {\n\t\t\treturn TwistR2S[this.getTwist()];\n\t\t}\n\t\tfor (var k=0; k<16; k+=2) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tlet idx = binarySearch(TwistS2R, temps.getTwist());\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 3) | (k >>> 1));\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\n\tthis.setTwist = function setTwist(idx) {\n\t\tvar twst = 0;\n\t\tfor (var i=6; i>=0; i--) {\n\t\t\ttwst += this.co[i] = idx % 3;\n\t\t\tidx = ~~(idx/3);\n\t\t}\n\t\tthis.co[7] = (15 - twst) % 3;\n\t}\n\t\n\tthis.getUDSlice = function getUDSlice() {\n\t\tvar idx = 0;\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (this.ep[i] >= 8) {\n\t\t\t\tidx += Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t}\n\t\t}\n\t\treturn idx;\n\t}\n\n\tthis.setUDSlice = function setUDSlice(idx) {\n\t\tvar r = 4;\n\t\tfor (var i=0; i<12; i++) {\n\t\t\tif (idx >= Cnk[11-i][r]) {\n\t\t\t\tidx -= Cnk[11-i][r];\n\t\t\t\tr--;\n\t\t\t\tthis.ep[i] = (11-r);\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (i+r-4);\n\t\t\t}\n\t\t}\n\t}\n\tthis.getMPerm = function getMPerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=8; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\n\t}\t\n\tthis.setMPerm = function setMPerm(idx) {\n\t\tthis.ep[11] = 8;\n\t\tfor (var i=10; i>=8; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i) + 8);\n\t\t\tidx = ~~(idx / (12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getMid3 = function getMid3() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] >= 9) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\n\t}\n\t\n\tthis.setMid3 = function setMid3(idxA) {\n\t\tvar edge = perm3[idxA % 6];\n\t\tidxA = ~~(idxA / 6);\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (idxA >= Cnk[i][r]) {\n\t\t\t\tidxA -= Cnk[i][r--];\n\t\t\t\tthis.ep[i] = edge[2-r];\n\t\t\t} else {\n\t\t\t\tthis.ep[i] = (8-i+r);\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tthis.getURtoUL = function getURtoUL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (this.ep[i] <= 2) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\n\n\tthis.getDRtoDL = function getDRtoDL() {\n\t\tvar idxA = 0;\n\t\tvar idxB = 0;\n\t\tvar mask = 0;\n\t\tvar r = 3;\n\t\tfor (var i=11; i>=0; i--) {\n\t\t\tif (4 <= this.ep[i] && this.ep[i] <= 6) {\n\t\t\t\tidxA += Cnk[i][r--];\n\t\t\t\tvar t = 1 << this.ep[i];\n\t\t\t\tidxB += bitCount(mask & (t - 1)) * fact[2-r];\n\t\t\t\tmask |= t;\n\t\t\t}\n\t\t}\n\t\treturn (idxA * 6 + idxB);\t\n\t}\t\n\n\tthis.setEdgePerm = function setEdgePerm(idx) {\n\t\tthis.ep[11] = 0;\n\t\tfor (var i=10; i>=0; i--) {\n\t\t\tthis.ep[i] = (idx % (12-i));\n\t\t\tidx = ~~(idx/(12-i));\n\t\t\tfor (var j=i+1; j<12; j++) {\n\t\t\t\tif (this.ep[j] >= this.ep[i])\n\t\t\t\t\tthis.ep[j]++;\n\t\t\t}\n\t\t}\t\t\t\n\t}\n\t\n\tthis.getEdgePerm = function getEdgePerm() {\n\t\tvar m = (1 << this.ep[11]);\t\t\n\t\tvar idx = 0;\n\t\tfor (var i=10; i>=0; --i) {\n\t\t\tvar t = 1 << this.ep[i];\n\t\t\tidx += bitCount(m & (t - 1)) * fact[11-i];\n\t\t\tm |= t;\n\t\t}\n\t\treturn idx;\t\t\n\t}\n\n\tthis.getCPermSym = function getCPermSym() {\n\t\tif (EPermR2S != null) {\n\t\t\tvar idx = EPermR2S[get8Perm(this.cp)];\n\t\t\tidx ^= e2c[idx&0x0f];\n\t\t\treturn idx;\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(CPermS2R, get8Perm(temps.cp));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tthis.getEPermSym = function getEPermSym() {\t\n\t\tif (EPermR2S != null) {\n\t\t\treturn EPermR2S[get8Perm(this.ep)];\n\t\t}\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tEdgeConjugate(this, SymInv[k], temps);\n\t\t\tvar idx = binarySearch(EPermS2R, get8Perm(temps.ep));\n\t\t\tif (idx != 0xffff) {\n\t\t\t\treturn ((idx << 4) | k);\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\t\n\n\tthis.URFConjugate = function URFConjugate() {\n\t\tCornMult(urf2, this, temps);\n\t\tCornMult(temps, urf1, this);\t\t\n\t\tEdgeMult(urf2, this, temps);\n\t\tEdgeMult(temps, urf1, this);\t\t    \t\t\n\t}\n\t\n\tthis.invCubieCube = function invCubieCube() {\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.ep[this.ep[edge]] = edge;\n\t\tfor (var edge=0; edge<12; edge++)\n\t\t\ttemps.eo[edge] = this.eo[temps.ep[edge]];\n\t\tfor (var corn=0; corn<8; corn++)\n\t\t\ttemps.cp[this.cp[corn]] = corn;\n\t\tfor (var corn=0; corn<8; corn++) {\n\t\t\tvar ori = this.co[temps.cp[corn]];\n\t\t\ttemps.co[corn] = -ori;\n\t\t\tif (temps.co[corn] < 0)\n\t\t\t\ttemps.co[corn] += 3;\n\t\t}\n\t\tthis.copy(temps);\n\t}\n\n\n\tthis.init = function init(cperm, twist, eperm, flip) {\n\t\tset8Perm(this.cp, cperm);\n\t\tthis.setTwist(twist);\n\t\tthis.setEdgePerm(eperm);\n\t\tthis.setFlip(flip);\n\t}\n\t\n\tthis.copy = function copy(c) {\n\t\tfor (var i=0; i<8; i++) {\n\t\t\tthis.cp[i] = c.cp[i];\n\t\t\tthis.co[i] = c.co[i];\n\t\t}\n\t\tfor (var i = 0; i < 12; i++) {\n\t\t\tthis.ep[i] = c.ep[i];\n\t\t\tthis.eo[i] = c.eo[i];\n\t\t}\n\t}\n}\n\nconst cctemp = new CubieCube();\nconst temps = new CubieCube();\n\nfunction set8Perm(arr, idx) {\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar p = fact[7-i];\n\t\tvar v = ~~(idx / p);\n\t\tidx %= p;\n\t\tv <<= 2;\n\t\tarr[i] = ((val >> v) & 7);\n\t\tvar m = (1 << v) - 1;\n\t\tval = (val & m) + ((val >> 4) & ~m);\n\t}\n\tarr[7] = val;\n}\n\nfunction get8Perm(arr) {\n\tvar idx = 0;\n\tvar val = 0x76543210;\n\tfor (var i=0; i<7; i++) {\n\t\tvar v = arr[i] << 2;\n\t\tidx = (8 - i) * idx + ((val >> v) & 7);\n\t\tval -= 0x11111110 << v;\n\t}\n\treturn idx;\t\n}\n\nfunction CornMult(a, b, prod) {\n\tfor (var corn=0; corn<8; corn++) {\n\t\tprod.cp[corn] = a.cp[b.cp[corn]];\n\t\tvar oriA = a.co[b.cp[corn]];\n\t\tvar oriB = b.co[corn];\n\t\tvar ori = oriA;\n\t\tori += (oriA<3) ? oriB : 3-oriB;\n\t\tori %= 3;\n\t\tif (oriA < 3 ^ oriB < 3) {\n\t\t\tori += 3;\n\t\t}\n\t\tprod.co[corn] = ori;\n\t}\n}\t\n\nfunction EdgeMult(a, b, prod) {\n\tfor (var ed=0; ed<12; ed++) {\n\t\tprod.ep[ed] = a.ep[b.ep[ed]];\n\t\tprod.eo[ed] = (b.eo[ed] ^ a.eo[b.ep[ed]]);\n\t}\n}\n\nfunction CornConjugate(a, idx, b) {\n\tCornMult(CubeSym[SymInv[idx]], a, cctemp);\n\tCornMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nfunction EdgeConjugate(a, idx, b) {\n\tEdgeMult(CubeSym[SymInv[idx]], a, cctemp);\n\tEdgeMult(cctemp, CubeSym[idx], b);\t\t\n}\n\nvar CubeSym = Array(16);\nvar moveCube = Array(18);\nvar SymInv = Array(16);\nvar SymMult = Array(16);\nvar SymMove = Array(16);\nvar Sym8Mult = Array(8);\nvar Sym8Move = Array(8);\nvar Sym8MultInv = Array(8);\nvar SymMoveUD = Array(16);\nvar FlipS2R = Array(336);\nvar TwistS2R = Array(324);\nvar CPermS2R = Array(2768);\nvar EPermS2R = CPermS2R;\nvar FlipR2S = Array(2048);\nvar TwistR2S = Array(2187);\nvar EPermR2S = createArray(40320);\nfor (var i=0; i<40320; i++) {\n\tEPermR2S[i] = 0;\n}\nvar MtoEPerm = Array(40320);\nvar merge = Array(56);\nvar e2c = [0, 0, 0, 0, 1, 3, 1, 3, 1, 3, 1, 3, 0, 0, 0, 0];\nconst urf1 = new CubieCube();\nurf1.init(2531, 1373, 67026819, 1877);\nconst urf2 = new CubieCube();\nurf2.init(2089, 1906, 322752913, 255);\n\n\nfunction CubieInit() {\n\tvar mc = Array(6);\n\tmc[0] = new CubieCube();\n\tmc[0].init(15120, 0, 119750400, 0);\n\tmc[1] = new CubieCube();\n\tmc[1].init(21021, 1494, 323403417, 0);\n\tmc[2] = new CubieCube();\n\tmc[2].init(8064, 1236, 29441808, 802);\n\tmc[3] = new CubieCube();\n\tmc[3].init(9, 0, 5880, 0);\n\tmc[4] = new CubieCube();\n\tmc[4].init(1230, 412, 2949660, 0);\n\tmc[5] = new CubieCube();\n\tmc[5].init(224, 137, 328552, 1160);\n\tfor (var m=0; m<6; m++) {\n\t\tmoveCube[m*3] = mc[m];\n\t\tfor (var p=0; p<2; p++) {\n\t\t\tmoveCube[m*3+p+1] = new CubieCube();\n\t\t\tEdgeMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t\tCornMult(moveCube[m*3+p], mc[m], moveCube[m*3+p+1]);\n\t\t}\n\t}\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar temp;\n\tvar f2 = new CubieCube();\n\tf2.init(28783, 0, 259268407, 0);\n\tvar u4 = new CubieCube();\n\tu4.init(15138, 0, 119765538, 1792);\n\tvar lr2 = new CubieCube();\n\tlr2.init(5167, 0, 83473207, 0);\n\tlr2.co = [ 3, 3, 3, 3, 3, 3, 3, 3 ];\n\tfor (var i=0; i<16; i++) {\n\t\tSymMult[i] = Array(16);\n\t\tSymMove[i] = Array(18);\n\t\tSymMoveUD[i] = Array(10);\n\t\tCubeSym[i] = new CubieCube();\n\t\tCubeSym[i].copy(c);\n\t\tCornMult(c, u4, d);\n\t\tEdgeMult(c, u4, d);\n\t\ttemp = d;\td = c;\tc = temp;\n\t\tif (i % 4 == 3) {\n\t\t\tCornMult(c, lr2, d);\n\t\t\tEdgeMult(c, lr2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\t\t\t\t\n\t\t}\n\t\tif (i % 8 == 7) {\n\t\t\tCornMult(c, f2, d);\n\t\t\tEdgeMult(c, f2, d);\n\t\t\ttemp = d;\td = c;\tc = temp;\n\t\t}\n\t}\n\n\tfor (var j=0; j<16; j++) {\n\t\tfor (var k=0; k<16; k++) {\n\t\t\tCornMult(CubeSym[j], CubeSym[k], c);\n\t\t\tif (c.cp[0] == 0 && c.cp[1] == 1 && c.cp[2] == 2) {\n\t\t\t\tSymInv[j] = k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor (var i=0; i<16; i++) {\n\t\tfor (var j=0; j<16; j++) {\n\t\t\tCornMult(CubeSym[i], CubeSym[j], c);\n\t\t\tfor (var k=0; k<16; k++) {\n\t\t\t\tif (CubeSym[k].cp[0] == c.cp[0] && CubeSym[k].cp[1] == c.cp[1] && CubeSym[k].cp[2] == c.cp[2]) {\n\t\t\t\t\tSymMult[i][j] = k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tCornConjugate(moveCube[j], SymInv[s], c);\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar found = 1;\n\t\t\t\tfor (var i=0; i<8; i++) {\n\t\t\t\t\tif (c.cp[i] != moveCube[m].cp[i] || c.co[i] != moveCube[m].co[i]) {\n\t\t\t\t\t\tfound = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found) {\n\t\t\t\t\tSymMove[s][j] = m;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (var j=0; j<10; j++) {\n\t\tfor (var s=0; s<16; s++) {\n\t\t\tSymMoveUD[s][j] = std2ud[SymMove[s][ud2std[j]]];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tSym8Mult[j] = Array(8);\n\t\tSym8Move[j] = Array(18);\n\t\tSym8MultInv[j] = Array(8);\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Mult[j][s] = (SymMult[j<<1][s<<1]>>>1);\n\t\t}\n\t}\n\tfor (var j=0; j<18; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8Move[s][j] = SymMove[s<<1][j];\n\t\t}\n\t}\n\tfor (var j=0; j<8; j++) {\n\t\tfor (var s=0; s<8; s++) {\n\t\t\tSym8MultInv[j][s] = Sym8Mult[j][SymInv[s<<1]>>1];\n\t\t}\n\t}\n\n\tconst occ = new Array(1260);\n\n\tvar count = 0;\n\tfor (var i=0; i<64; occ[i++] = 0);\n\n\tfor (var i=0; i<2048; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setFlip(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = d.getFlip();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tFlipR2S[idx] = ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tFlipS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\tcount = 0;\n\tfor (var i=0; i<69; occ[i++] = 0);\n\tfor (var i=0; i<2187; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tc.setTwist(i);\n\t\t\tfor (var s=0; s<16; s+=2) {\n\t\t\t\tCornConjugate(c, s, d);\n\t\t\t\tvar idx = d.getTwist();\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tTwistR2S[idx] =  ((count << 3) | (s >>> 1));\n\t\t\t}\n\t\t\tTwistS2R[count++] = i;\n\t\t}\n\t}\n//\talert(count);\n\n\tvar mask = Array(56);\n\tfor (var i=0; i<56; i++) {\n\t\tmask[i] = Array(2);\n\t\tmerge[i] = Array(56);\n\t}\n\tfor (var i=0; i<40320; i++) {\n\t\tset8Perm(c.ep, i);\n\t\tvar a = ~~(c.getURtoUL() / 6);\n\t\tvar b = ~~(c.getDRtoDL() / 6);\n\t\tmask[a][b>>>5] |= 1 << (b&0x1f);\n\t}\n\t\n\tfor (var i=0; i<56; i++) {\n\t\tcount = 0;\n\t\tfor (var j=0; j<56; j++) {\n\t\t\tif ((mask[i][j>>>5]&(1<<(j&0x1f))) != 0) {\n\t\t\t\tmerge[i][j] = count++;\n\t\t\t}\n\t\t}\n\t}\n\tcount = 0;\n\tfor (var i=0; i<1260; occ[i++] = 0);\n\tfor (var i=0; i<40320; i++) {\n\t\tif ((occ[i>>>5]&(1<<(i&0x1f))) == 0) {\n\t\t\tset8Perm(c.ep, i);\n\t\t\tfor (var s=0; s<16; s++) {\n\t\t\t\tEdgeConjugate(c, s, d);\n\t\t\t\tvar idx = get8Perm(d.ep);\n\t\t\t\tocc[idx>>>5] |= 1<<(idx&0x1f);\n\t\t\t\tvar a = d.getURtoUL();\n\t\t\t\tvar b = d.getDRtoDL();\n\t\t\t\tvar m = (merge[~~(a/6)][~~(b/6)] * 4032 + a * 12 + b % 6 * 2 + get8Parity(idx));\n\t\t\t\tMtoEPerm[m] = (count << 4 | s);\n\t\t\t\tEPermR2S[idx] = (count << 4 | s);\n\t\t\t}\n\t\t\tEPermS2R[count++] = i;\n\t\t}\n\t}\n}\n\nvar UDSliceMove = Array(495);//new char[495][18];\nvar TwistMove = Array(324);//new char[324][18];\nvar FlipMove = Array(336);//new char[336][18];\nvar UDSliceConj = Array(495);//new char[495][8];\nvar UDSliceTwistPrun = Array(495*324);//new byte[495 * 324];\nvar UDSliceFlipPrun = Array(495*336);//new byte[495 * 336];\n\t\nvar TwistFlipPrun = Array(336*324*8);//new byte[336 * 324 * 8];\n\t\n\t//phase1to2\nvar Mid3Move = Array(1320);//new char[1320][18];\nvar Mid32MPerm = Array(24);//new byte[24];\nvar CParity = Array(87);//new byte[2768/8];\n\n\t//phase2\nvar CPermMove = Array(2768);//new char[2768][18];\nvar EPermMove = Array(2768);//new char[2768][10];\nvar MPermMove = Array(24);//new byte[24][10];\nvar MPermConj = Array(24);//new byte[24][16];\nvar MCPermPrun = Array(24*2768);//new byte[24*2768];\nvar MEPermPrun = Array(24*2768);//new byte[24*2768];\n\n\nfunction CoordInit() {\n\tvar c = new CubieCube();\n\tvar d = new CubieCube();\n\tvar i, j;\n\tfor (i=0; i<2768; i++) {\n\t\tCPermMove[i] = Array(18);\n\t\tset8Perm(c.cp, CPermS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tCPermMove[i][j] = d.getCPermSym();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<2768; i++) {\n\t\tEPermMove[i] = Array(10);\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tEPermMove[i][j] = d.getEPermSym();\n\t\t}\n\t}\n\tfor (i=0; i<336; i++) {\n\t\tFlipMove[i] = Array(18);\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tFlipMove[i][j] = d.getFlipSym();\n\t\t}\n\t}\n\tfor (i=0; i<324; i++) {\n\t\tTwistMove[i] = Array(18);\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tCornMult(c, moveCube[j], d);\n\t\t\tTwistMove[i][j] = d.getTwistSym();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceMove[i] = Array(18);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tUDSliceMove[i][j] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<495; i++) {\n\t\tUDSliceConj[i] = Array(8);\n\t\tc.setUDSlice(i);\n\t\tfor (j=0; j<16; j+=2) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tUDSliceConj[i][j>>>1] = d.getUDSlice();\n\t\t}\n\t}\n\tfor (i=0; i<1320; i++) {\n\t\tMid3Move[i] = Array(18);\n\t\tc.setMid3(i);\n\t\tfor (j=0; j<18; j++) {\n\t\t\tEdgeMult(c, moveCube[j], d);\n\t\t\tMid3Move[i][j] = d.getMid3();\n\t\t}\n\t}\t\n\tfor (i=0; i<24; i++) {\n\t\tc.setMPerm(i);\n\t\tMid32MPerm[c.getMid3() % 24] = i;\n\t}\n\tfor (i=0; i<2768; i++) {\n\t\tCParity[i>>>3] |= (get8Parity(CPermS2R[i])) << (i & 7);\n\t}\n\tfor (i=0; i<24; i++) {\n\t\tMPermMove[i] = Array(10);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<10; j++) {\n\t\t\tEdgeMult(c, moveCube[ud2std[j]], d);\n\t\t\tMPermMove[i][j] = d.getMPerm();\n\t\t}\n\t}\t\t\n\tfor (i=0; i<24; i++) {\n\t\tMPermConj[i] = Array(16);\n\t\tc.setMPerm(i);\n\t\tfor (j=0; j<16; j++) {\n\t\t\tEdgeConjugate(c, SymInv[j], d);\n\t\t\tMPermConj[i][j] = d.getMPerm();\n\t\t}\n\t}\n\t\n\tvar SymState = Array(324);\n\tfor (i=0; i<324; i++) {\n\t\tc.setTwist(TwistS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tCornConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(TwistS2R, d.getTwist()) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tvar SymStateF = Array(324);\n\tfor (i=0; i<336; i++) {\n\t\tc.setFlip(FlipS2R[i]);\n\t\tfor (var j=0; j<8; j++) {\n\t\t\tEdgeConjugate(c, j<<1, d);\n\t\t\tif (binarySearch(FlipS2R, d.getFlip()) != 0xffff) {\n\t\t\t\tSymStateF[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\t\t\n\tfor (i=0; i<336*324*8; i++) {\n\t\tTwistFlipPrun[i] = -1;\n\t}\n\tfor (i=0; i<8; i++) {\n\t\tTwistFlipPrun[i] = 0;\n\t}\n\tvar depth = 0;\n\tvar done = 8;\n\tvar inv;\n\tvar select;\n\tvar check;\n\t\n\twhile (done < 336*324*8) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<336*324*8; i++) {\n\t\t\tif (TwistFlipPrun[i] != select)\n\t\t\t\tcontinue;\n\t\t\tvar twist = ~~(i / 2688);\n\t\t\tvar flip = i % 2688;\n\t\t\tvar fsym = i & 7;\n\t\t\tflip >>>= 3;\n\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\tvar tsymx = twistx & 7;\n\t\t\t\ttwistx >>>= 3;\n\t\t\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\t\t\tvar fsymx = Sym8MultInv[Sym8Mult[flipx & 7][fsym]][tsymx];\n\t\t\t\tflipx >>>= 3;\n\t\t\t\tvar idx = twistx * 2688 + (flipx << 3 | fsymx);\n\t\t\t\tif (TwistFlipPrun[idx] == check) {\n\t\t\t\t\tdone++;\n\t\t\t\t\tif (inv) {\n\t\t\t\t\t\tTwistFlipPrun[i] = depth;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTwistFlipPrun[idx] = depth;\n\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\tvar symF = SymStateF[flipx];\n\t\t\t\t\t\tif (sym != 1 || symF != 1) {\n\t\t\t\t\t\t\tfor (var j=0; j<8; j++, symF >>= 1) {\n\t\t\t\t\t\t\t\tif ((symF & 1) == 1) {\n\t\t\t\t\t\t\t\t\tvar fsymxx = Sym8MultInv[fsymx][j];\n\t\t\t\t\t\t\t\t\tfor (var k=0; k<8; k++) {\n\t\t\t\t\t\t\t\t\t\tif ((sym & (1 << k)) != 0) {\n\t\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymxx][k]);\n\t\t\t\t\t\t\t\t\t\t\tif (TwistFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tTwistFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n\tfor (i=0; i<495*324; i++) {\n\t\tUDSliceTwistPrun[i] = -1;\n\t}\n\tUDSliceTwistPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 324) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*324; i++) {\n\t\t\tif (UDSliceTwistPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar twist = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar twistx = TwistMove[twist][m];\n\t\t\t\t\tvar symx = twistx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\ttwistx >>>= 3;\n\t\t\t\t\tvar idx = twistx * 495 + slicex;\n\t\t\t\t\tif (UDSliceTwistPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceTwistPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceTwistPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[twistx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = twistx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceTwistPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceTwistPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\n\tfor (i=0; i<495*336; i++) {\n\t\tUDSliceFlipPrun[i] = -1;\n\t}\n\tUDSliceFlipPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 495 * 336) {\n\t\tinv = depth > 6;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<495*336; i++) {\n\t\t\tif (UDSliceFlipPrun[i] == select) {\n\t\t\t\tvar slice = i % 495;\n\t\t\t\tvar flip = ~~(i / 495);\n\t\t\t\tfor (var m=0; m<18; m++) {\n\t\t\t\t\tvar flipx = FlipMove[flip][m];\n\t\t\t\t\tvar symx = flipx & 7;\n\t\t\t\t\tvar slicex = UDSliceConj[UDSliceMove[slice][m]][symx];\n\t\t\t\t\tflipx >>>= 3;\n\t\t\t\t\tvar idx = flipx * 495 + slicex;\n\t\t\t\t\tif (UDSliceFlipPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tUDSliceFlipPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tUDSliceFlipPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymStateF[flipx];\n\t\t\t\t\t\t\tif (sym != 1) {\n\t\t\t\t\t\t\t\tfor (var j=1; j<8; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = flipx * 495 + UDSliceConj[slicex][j];\n\t\t\t\t\t\t\t\t\t\tif (UDSliceFlipPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tUDSliceFlipPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tdepth++;\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\n\t\n\tSymState = Array(2768);\n\tfor (i=0; i<2768; i++) {\n\t\tset8Perm(c.ep, EPermS2R[i]);\n\t\tfor (j=1; j<16; j++) {\n\t\t\tEdgeConjugate(c, j, d);\n\t\t\tif (binarySearch(EPermS2R, get8Perm(d.ep)) != 0xffff) {\n\t\t\t\tSymState[i] |= (1 << j);\n\t\t\t}\n\t\t}\n\t}\n\tfor (i=0; i<24*2768; i++) {\n\t\tMEPermPrun[i] = -1;\n\t}\n\tMEPermPrun[0] = 0;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MEPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar edge = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar edgex = EPermMove[edge][m];\n\t\t\t\t\tvar symx = edgex & 15;\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tedgex >>>= 4;\n\t\t\t\t\tvar idx = edgex * 24 + midx;\n\t\t\t\t\tif (MEPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMEPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMEPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[edgex];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = edgex * 24 + MPermConj[midx][j];\n\t\t\t\t\t\t\t\t\t\tif (MEPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMEPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\t\t\n\t\t\n\tfor (i=0; i<24*2768; i++) {\n\t\tMCPermPrun[i] = -1;\n\t}\n\tMCPermPrun[0] = 0;\n\tdepth = 0;\n\tdone = 1;\n\twhile (done < 24*2768) {\n\t\tinv = depth > 7;\n\t\tselect = inv ? -1 : depth;\n\t\tcheck = inv ? depth : -1;\n\t\tdepth++;\n\t\tfor (i=0; i<24*2768; i++) {\n\t\t\tif (MCPermPrun[i] == select) {\n\t\t\t\tvar mid = i % 24;\n\t\t\t\tvar corn = ~~(i / 24);\n\t\t\t\tfor (var m=0; m<10; m++) {\n\t\t\t\t\tvar cornx = CPermMove[corn][ud2std[m]];\n\t\t\t\t\tvar symx = (cornx & 15);\n\t\t\t\t\tvar midx = MPermConj[MPermMove[mid][m]][symx];\n\t\t\t\t\tcornx >>>= 4;\n\t\t\t\t\tvar idx = cornx * 24 + midx;\n\t\t\t\t\tif (MCPermPrun[idx] == check) {\n\t\t\t\t\t\tdone++;\n\t\t\t\t\t\tif (inv) {\n\t\t\t\t\t\t\tMCPermPrun[i] = depth;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tMCPermPrun[idx] = depth;\n\t\t\t\t\t\t\tvar sym = SymState[cornx];\n\t\t\t\t\t\t\tif (sym != 0) {\n\t\t\t\t\t\t\t\tfor (j=1; j<16; j++) {\n\t\t\t\t\t\t\t\t\tsym >>= 1;\n\t\t\t\t\t\t\t\t\tif ((sym & 1) == 1) {\n\t\t\t\t\t\t\t\t\t\tvar idxx = cornx * 24 + MPermConj[midx][j ^ e2c[j]];\n\t\t\t\t\t\t\t\t\t\tif (MCPermPrun[idxx] == -1) {\n\t\t\t\t\t\t\t\t\t\t\tMCPermPrun[idxx] = depth;\n\t\t\t\t\t\t\t\t\t\t\tdone++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n//\t\t\tSystem.out.println(String.format(\"%2d%10d\", depth, done));\n\t}\n}\t\t\t\t\t\n\nfunction randomCube() {\n\tvar eperm;\n\tvar cperm;\n\tdo {\n\t\teperm = ~~(Math.random() * 479001600);\n\t\tcperm = ~~(Math.random() * 40320);\n\t} while (((get8Parity(cperm) ^ get12Parity(eperm))) != 0);\n\tvar c = new CubieCube();\n\tc.init(cperm, ~~(Math.random() * 2187), eperm, ~~(Math.random() * 2048));\n\treturn c;\n}\n\nvar move = Array(31);\n\nvar corn = Array(20);\nvar csym = Array(20);\nvar mid3 = Array(20);\nvar e1 = Array(20);\nvar e2 = Array(20);\nvar urfidx;\n\nvar twist = Array(6);\nvar tsym = Array(6);\nvar flip = Array(6);\nvar fsym = Array(6);\nvar slice = Array(6);\nvar corn0 = Array(6);\nvar csym0 = Array(6);\nvar mid30 = Array(6);\nvar e10 = Array(6);\nvar e20 = Array(6);\nvar prun = Array(6);\n\nvar length1 = 0;\nvar maxlength2 = 0;\nvar sol = 999;\nvar valid1 = 0;\nvar valid2 = 0;\nvar solution = \"\";\nvar useSeparator = false;\n\nfunction Solve(c) {\n\tc.temps = new CubieCube();\n\tfor (var i=0; i<6; i++) {\n\t\ttwist[i] = c.getTwistSym();\n\t\ttsym[i] = twist[i] & 7;\n\t\ttwist[i] >>>= 3;\n\t\tflip[i] = c.getFlipSym();\n\t\tfsym[i] = flip[i] & 7;\n\t\tflip[i] >>>= 3;\n\t\tslice[i] = c.getUDSlice();\n\t\tcorn0[i] = c.getCPermSym();\n\t\tcsym0[i] = corn0[i] & 15;\n\t\tcorn0[i] >>>= 4;\n\t\tmid30[i] = c.getMid3();\n\t\te10[i] = c.getURtoUL();\n\t\te20[i] = c.getDRtoDL();\n\t\tprun[i] = Math.max(Math.max(UDSliceTwistPrun[twist[i] * 495 + UDSliceConj[slice[i]][tsym[i]]],\n\t\t\t\t\t\tUDSliceFlipPrun[flip[i] * 495 + UDSliceConj[slice[i]][fsym[i]]]),\n\t\t\t\t\t\tTwistFlipPrun[twist[i] * 2688 + (flip[i] << 3 | Sym8MultInv[fsym[i]][tsym[i]])]);\n\t\tc.URFConjugate();\n\t\tif (i==2) {\n\t\t\tc.invCubieCube();\n\t\t}\n\t}\n\tsolution = null;\n\tsol = 22;\n\tfor (length1=0; length1<sol; length1++) {\n\t\tmaxlength2 = Math.min(sol/2+1, sol-length1);\n\t\tfor (urfidx=0; urfidx<6; urfidx++) {\n\t\t\tcorn[0] = corn0[urfidx];\n\t\t\tcsym[0] = csym0[urfidx];\n\t\t\tmid3[0] = mid30[urfidx];\n\t\t\te1[0] = e10[urfidx];\n\t\t\te2[0] = e20[urfidx];\n\t\t\tif ((prun[urfidx] <= length1)\n\t\t\t\t\t&& phase1(twist[urfidx], tsym[urfidx], flip[urfidx], fsym[urfidx],\n\t\t\t\t\t\t\t\tslice[urfidx], length1, 18)) {\n\t\t\t\tif (solution == null) {\n\t\t\t\t\treturn \"Error 8\";\n\t\t\t\t} else {\n\t\t\t\t\treturn solution;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn \"Error 7\";\n}\n\nfunction phase1(twist, tsym, flip, fsym, slice, maxl, lm) {\n\tif (twist==0 && flip==0 && slice==0 && maxl < 5) {\n\t\treturn maxl == 0 && init2();\n\t}\n\tfor (var m=0; m<18; m++) {\n\t\tif (ckmv[lm][m]) {\n\t\t\tm+=2;\n\t\t\tcontinue;\n\t\t}\n\t\tvar slicex = UDSliceMove[slice][m];\n\t\tvar twistx = TwistMove[twist][Sym8Move[tsym][m]];\n\t\tvar tsymx = Sym8Mult[twistx & 7][tsym];\n\t\ttwistx >>>= 3;\n\t\tif (UDSliceTwistPrun[twistx * 495 + UDSliceConj[slicex][tsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar flipx = FlipMove[flip][Sym8Move[fsym][m]];\n\t\tvar fsymx = Sym8Mult[flipx & 7][fsym];\n\t\tflipx >>>= 3;\n\t\tif (TwistFlipPrun[twistx * 2688 + (flipx << 3 | Sym8MultInv[fsymx][tsymx])] >= maxl\n\t\t\t\t||UDSliceFlipPrun[flipx * 495 + UDSliceConj[slicex][fsymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[length1-maxl] = m;\n\t\tvalid1 = Math.min(valid1, length1-maxl);\n\t\tif (phase1(twistx, tsymx, flipx, fsymx, slicex, maxl-1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction init2() {\n//\tif (System.currentTimeMillis() > timeOut) {\n//\t\treturn true;\n//\t}\n\tvalid2 = Math.min(valid2, valid1);\n\tfor (var i=valid1; i<length1; i++) {\n\t\tvar m = move[i];\n\t\tcorn[i+1] = CPermMove[corn[i]][SymMove[csym[i]][m]];\n\t\tcsym[i+1] = SymMult[corn[i+1] & 15][csym[i]];\n\t\tcorn[i+1] >>>= 4;\n\t\tmid3[i+1] = Mid3Move[mid3[i]][m];\n\t}\n\tvalid1 = length1;\n\tvar mid = Mid32MPerm[mid3[length1] % 24];\n\tvar prun = MCPermPrun[corn[length1] * 24 + MPermConj[mid][csym[length1]]];\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\tfor (var i=valid2; i<length1; i++) {\n\t\te1[i+1] = Mid3Move[e1[i]][move[i]];\n\t\te2[i+1] = Mid3Move[e2[i]][move[i]];\n\t}\n\tvalid2 = length1;\n\tvar cornx = corn[length1];\n\tvar ex = merge[~~(e1[length1]/6)][~~(e2[length1]/6)] * 4032\n\t\t\t\t + e1[length1] * 12 + e2[length1] % 6 * 2 + (((CParity[cornx>>>3]>>>(cornx&7))&1) ^ get4Parity(mid));\n\tvar edge = MtoEPerm[ex];\n\tvar esym = edge & 15;\n\tedge >>>= 4;\n\t\tprun = Math.max(MEPermPrun[edge * 24 + MPermConj[mid][esym]], prun);\n\tif (prun >= maxlength2) {\n\t\treturn false;\n\t}\n\t\tvar lm = length1==0 ? 10 : std2ud[~~(move[length1-1]/3)*3+1];\n\tfor (var i=prun; i<maxlength2; i++) {\n\t\tif (phase2(edge, esym, corn[length1], csym[length1], mid, i, length1, lm)) {\n\t\t\tsol = length1 + i;\n\t\t\tvar sb = \"\";\n\t\t\tvar urf = urfidx;\n//\t\t\tif (inverse) {\n\t\t\t\turf = (urf + 3) % 6;\n//\t\t\t}\n\t\t\tif (urf < 3) {\n\t\t\t\tfor (var s=0; s<length1; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1; s<sol; s++) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var s=sol-1; s>=length1; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t\tfor (var s=length1-1; s>=0; s--) {\n\t\t\t\t\tsb += move2str[urfMove[urf][move[s]]] + ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// sb += \"(\" + sol + \"f)\";\n\t\t\tsolution = sb;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction phase2(edge, esym, corn, csym, mid, maxl, depth, lm) {\n\tif (edge==0 && corn==0 && mid==0) {\n\t\treturn true;\n\t}\n\tfor (var m=0; m<10; m++) {\n\t\tif (ckmv2[lm][m]) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar midx = MPermMove[mid][m];\n\t\tvar edgex = EPermMove[edge][SymMoveUD[esym][m]];\n\t\tvar esymx = SymMult[edgex & 15][esym];\n\t\tedgex >>>= 4;\n\t\tif (MEPermPrun[edgex * 24 + MPermConj[midx][esymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tvar cornx = CPermMove[corn][SymMove[csym][ud2std[m]]];\n\t\tvar csymx = SymMult[cornx & 15][csym];\n\t\tcornx >>>= 4;\n\t\tif (MCPermPrun[cornx * 24 + MPermConj[midx][csymx]] >= maxl) {\n\t\t\tcontinue;\n\t\t}\n\t\tmove[depth] = ud2std[m];\n\t\tif (phase2(edgex, esymx, cornx, csymx, midx, maxl-1, depth+1, m)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nvar initialized = false;\n\nfunction initialize() {\n\tif (initialized) {\n\t\treturn;\n\t}\n\tCubieInit();\n\tCoordInit();\n\tinitialized = true;\n}\n\nfunction solve(c) {\n\tinitialize();\n\tconst cc = new CubieCube();\n\tcc.cp = c.cp;\n\tcc.co = c.co;\n\tcc.ep = c.ep;\n\tcc.eo = c.eo;\n\treturn Solve(cc);\n};\n\nmodule.exports.initialize = initialize;\nmodule.exports.solve = solve;\nmodule.exports.randomCube = randomCube;\n"],"sourceRoot":""}